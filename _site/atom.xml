<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
 
 <title>marcgg#blog</title>
 <link href="http://marcgg.com/atom.xml" rel="self"/>
 <link href="http://marcgg.com"/>
 <updated>2014-05-04T22:34:30+02:00</updated>
 <id>http://marcgg.com</id>
 <author>
   <name>Marc G Gauthier</name>
   <email>marcg.gauthier@gmail.com</email>
 </author>

 
  
   <entry>
     <title>My Problem With Apps To Track Your Life (and Why I Created My Own)</title>
     <link href="http://marcgg.com/blog/2014/05/05/quantified-self-iphone-app-track-mood-day"/>
     <updated>2014-05-05T00:00:00+02:00</updated>
     <id>http://marcgg.com/blog/2014/05/05/quantified-self-iphone-app-track-mood-day</id>
     <content type="html">&lt;p&gt;I wouldn’t say that I’m into quantified self, but I do enjoy having some idea of what I’m doing in my life. Wearing gear tracking you like a Jawbone feels overkill to me, my approach is more based on Foursquare to see where I’ve been and a calendar app to note what I’ve done.&lt;/p&gt;

&lt;p&gt;A while back I thought it would be cool to have stats summing up how I felt about my life. It’s a thing to know facts about my activities, but it’s another to see if I actually enjoyed it ! I then searched the web for good mobile applications, but didn’t find anything matching what I wanted.&lt;/p&gt;

&lt;p&gt;&lt;em&gt;&lt;strong&gt;Disclaimer&lt;/strong&gt;: From this point on please understand that I’m not here to bash anyone. The apps I tried were not for me, but I’m sure they work for some. I might also have missed some good apps, but I did spend quite a while looking. Either they had bad SEO or they weren’t released a year ago when I searched.&lt;/em&gt;&lt;/p&gt;

&lt;h2 id=&quot;the-problem&quot;&gt;The Problem&lt;/h2&gt;

&lt;p&gt;First, let’s look at some of the apps I tried. There are also countless joke “mood scanners”, but I’ll spare you those.&lt;/p&gt;

&lt;div style=&quot;text-align: center&quot;&gt;&lt;img src=&quot;/assets/blog/all_apps.jpg&quot; /&gt;&lt;/div&gt;

&lt;h3 id=&quot;too-simplistic-or-too-complicated&quot;&gt;Too Simplistic or Too Complicated&lt;/h3&gt;

&lt;p&gt;Most of the apps I tried out usually asked me for an explicit rating of my day. For instance, was my day a “5 out of 10” or a “6 out of 10” ? Was it a “frowning face” or a “smiling face” ? Was it “red” or was it “green” ? Was I “happy” or “sad” ?&lt;/p&gt;

&lt;p&gt;It felt too simplistic. A day can be more than one thing, I felt way more than just one emotion ! Saying that my day was terrible just because a part of it was bad wouldn’t be right. Mitigating the result by saying that it was “average” would only hide the interesting parts of a day and I’d mostly end up with average notes…&lt;/p&gt;

&lt;p&gt;Some apps would get into more details, but this time it would be too much ! To be fair, they clearly had a more medical approach and were destined to track every single details of one’s day. Some other apps would go in depth in one direction, such as calorie intake or miles ran. These apps were ok, but not what I was looking for. &lt;/p&gt;

&lt;h3 id=&quot;dont-judge-me&quot;&gt;Don’t Judge Me&lt;/h3&gt;

&lt;p&gt;Some days are good, some days are bad. This is life !&lt;/p&gt;

&lt;p&gt;When a day is good, I’m already enjoying myself so I don’t need anymore reinforcement… and let’s just say that if my day was bad, I don’t want to tell it to an app that rewards me with an “aww poor you” alert box alongside a crying smiley face gif.&lt;/p&gt;

&lt;p&gt;I also really don’t like the green/red color coding for the same reason.&lt;/p&gt;

&lt;h3 id=&quot;everything-doesnt-have-to-be-social&quot;&gt;Everything Doesn’t Have To Be Social&lt;/h3&gt;

&lt;p&gt;I was really surprised by the number of apps that have sharing built in. My take on these kind of apps is that they should be treated like the new iteration of diaries, just a bit more data oriented. You wouldn’t go show your diary around, would you ?&lt;/p&gt;

&lt;p&gt;I think this would lead to dishonest daily ratings just for sharing purposes.&lt;/p&gt;

&lt;h2 id=&quot;my-solution&quot;&gt;My Solution&lt;/h2&gt;

&lt;p&gt;I do enjoy the “&lt;a href=&quot;https://gettingreal.37signals.com/ch02_Whats_Your_Problem.php&quot;&gt;scratch your own itch&lt;/a&gt;” mentality that I apply to the extent of my time in &lt;a href=&quot;http://stackoverflow.com/a/5233378&quot;&gt;open source&lt;/a&gt;, so I teamed up with a &lt;a href=&quot;http://dribbble.com/kevintunc&quot;&gt;designer friend&lt;/a&gt; and we created &lt;a href=&quot;https://itunes.apple.com/app/liff-understand-your-life/id834944345&quot;&gt;Liff&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;Here’s how this new app addresses the points above.&lt;/p&gt;

&lt;h3 id=&quot;everything-falls-in-6-categories&quot;&gt;Everything Falls In 6 Categories&lt;/h3&gt;

&lt;p&gt;Very losely basing ourselves on &lt;a href=&quot;http://www.bcbusiness.ca/lifestyle/bryan-dysons-30-second-speech&quot;&gt;Brian G. Dyson’s juggling metaphore&lt;/a&gt;, we decided to classify everything happening in one’s life into 6 categories: Love, Friendship, Health, Family, Spirit and Work. For instance a fun birthday party might have positive effects on Friendship, Love and Family… but could have a negative impact on Health if you stay out too late !&lt;/p&gt;

&lt;p&gt;Based on that, you don’t rate your day with a single grade or smiley face. Instead you get to use 6 sliders, one for each category. This allows you to be more granular. A bad day at work doesn’t mean a bad day in general.&lt;/p&gt;

&lt;p&gt;The idea is to get better data and help the user relativize. It’s both simple enough that rating a day doesn’t take much time and complex enough so that the result is interesting.&lt;/p&gt;

&lt;div style=&quot;text-align: center;&quot;&gt;&lt;img style=&quot;width: 700px;&quot; src=&quot;/assets/blog/liff_3d.jpg&quot; /&gt;&lt;/div&gt;

&lt;h3 id=&quot;track-your-day-with-no-judgment&quot;&gt;Track Your Day With No Judgment&lt;/h3&gt;

&lt;p&gt;You might have noticed that there is no explicit value on the app sliders. This is because the rating system is left to the user to decide ! Maybe a good day is 75% filled, maybe it’s 100% … the only sure thing is that Liff will never give you any hints on what it “thinks” of your input.&lt;/p&gt;

&lt;p&gt;Overall, the app design and copy try to be neutral without being completely impersonal.&lt;/p&gt;

&lt;div style=&quot;text-align: center&quot;&gt;&lt;img src=&quot;/assets/misc/loader.jpg&quot; /&gt;&lt;/div&gt;

&lt;p&gt;&lt;em&gt;To help you have a coherent grading system, note that the current day’s sliders are prefiled with yesterday’s values.&lt;/em&gt;&lt;/p&gt;

&lt;h3 id=&quot;and-the-rest&quot;&gt;And The Rest&lt;/h3&gt;

&lt;p&gt;Of course like any quantified self app, you get graphs, daily push reminders, data exports via email, notes, backups on the cloud and so on. I might get more into this part of Liff in another article.&lt;/p&gt;

&lt;div style=&quot;text-align: center;&quot;&gt;&lt;img style=&quot;width: 700px;&quot; src=&quot;/assets/blog/liff_all.jpg&quot; /&gt;&lt;/div&gt;

&lt;p&gt;Oh, and absolutely no social media integration ! And let’s just say that it’s not because I don’t know how - &lt;a href=&quot;/blog/2012/09/24/working-with-apis-facebook/&quot;&gt;I worked with the Facebook API&lt;/a&gt; for years after all !&lt;/p&gt;

&lt;h2 id=&quot;give-it-a-try-its-free&quot;&gt;Give It A Try, It’s Free&lt;/h2&gt;

&lt;p&gt;I’ve been using Liff ever since it was somewhat functional, so for about 8 months now. So far I’m very happy with it and I did notice some patterns with the way I feel about my days.&lt;/p&gt;

&lt;p&gt;We released it recently on iOS for free. Depending on reception we’ll release on Android too (it uses &lt;a href=&quot;/blog/2014/04/09/phonegap-steroids-hybrid-native-app-tips/&quot;&gt;SteroidsJs&lt;/a&gt; so it should be possible quickly). If you share my opinion, please give the app a try and send me your feedback… and if you don’t agree, remember that I don’t claim to have the truth, but feel free to leave a comment. I’d love to know what you think.&lt;/p&gt;

</content>
   </entry>
  
 
  
   <entry>
     <title>Tips on Creating a Website From When I Was 12</title>
     <link href="http://marcgg.com/blog/2014/04/28/frame-based-layout-bad-code"/>
     <updated>2014-04-28T00:00:00+02:00</updated>
     <id>http://marcgg.com/blog/2014/04/28/frame-based-layout-bad-code</id>
     <content type="html">&lt;p&gt;I’ve been writing code for a while. I started with QBasic when I was a kid and the two things I remember from
that time was using PRINT and the fact I was dead confused by the editor I had to use.&lt;/p&gt;

&lt;p&gt;I might also have written something calculating my age based on my birthday…&lt;/p&gt;

&lt;p&gt;Computer science!&lt;/p&gt;

&lt;div style=&quot;text-align: center&quot;&gt;&lt;img src=&quot;/assets/blog/qbasic.png&quot; /&gt;&lt;/div&gt;

&lt;h2 id=&quot;the-internet&quot;&gt;The Internet&lt;/h2&gt;

&lt;p&gt;A few years later, I’m around 12 years old and the internet is a brand new thing. I use my AOL browser and my 56k modem
to browse &lt;em&gt;the web&lt;/em&gt; and it’s amazing.&lt;/p&gt;

&lt;p&gt;Seeing all these websites makes me want to create my own. Something great. Something about pokemons, AOL chatroom bots
or whatever I was interested in at the time !&lt;/p&gt;

&lt;p&gt;The thing is that back then there was very little information available… or at least I didn’t know where to find it.
After time spent on forums whinning for help, I only found that I had to download SiteAid.&lt;/p&gt;

&lt;p&gt;For reference, here is what it looked like in all its glory:&lt;/p&gt;

&lt;div style=&quot;text-align: center&quot;&gt;&lt;img src=&quot;/assets/blog/siteaid.png&quot; /&gt;&lt;/div&gt;

&lt;p&gt;Since I wanted a menu on the left and content on the right, I somehow understood that I could use frames to do that.
After some fiddling around with the UI, I got it to work.&lt;/p&gt;

&lt;p&gt;The problem is that I stopped trying to figure out things here and started building my website.&lt;/p&gt;

&lt;h2 id=&quot;tutorial-aka-the-abomination&quot;&gt;Tutorial (aka The Abomination)&lt;/h2&gt;

&lt;p&gt;So first you want to create your main page:&lt;/p&gt;

&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;html&quot;&gt;&lt;span class=&quot;nt&quot;&gt;&amp;lt;HTML&amp;gt;&lt;/span&gt;
&lt;span class=&quot;nt&quot;&gt;&amp;lt;HEAD&amp;gt;&lt;/span&gt;
&lt;span class=&quot;nt&quot;&gt;&amp;lt;TITLE&amp;gt;&lt;/span&gt;INTERNET!&lt;span class=&quot;nt&quot;&gt;&amp;lt;/TITLE&amp;gt;&lt;/span&gt;
&lt;span class=&quot;nt&quot;&gt;&amp;lt;/HEAD&amp;gt;&lt;/span&gt;
&lt;span class=&quot;nt&quot;&gt;&amp;lt;FRAMESET&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;cols=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&amp;quot;20%, 80%&amp;quot;&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&amp;gt;&lt;/span&gt;
  &lt;span class=&quot;nt&quot;&gt;&amp;lt;FRAME&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;src=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&amp;quot;f1.html&amp;quot;&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&amp;gt;&lt;/span&gt;
  &lt;span class=&quot;nt&quot;&gt;&amp;lt;FRAME&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;src=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&amp;quot;f2.html&amp;quot;&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&amp;gt;&lt;/span&gt;
&lt;span class=&quot;nt&quot;&gt;&amp;lt;/FRAMESET&amp;gt;&lt;/span&gt;
&lt;span class=&quot;nt&quot;&gt;&amp;lt;/HTML&amp;gt;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;Let’s add some sweet design in each frame file:&lt;/p&gt;

&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;html&quot;&gt;&lt;span class=&quot;nt&quot;&gt;&amp;lt;BODY&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;bgcolor=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&amp;quot;orange&amp;quot;&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&amp;gt;&lt;/span&gt;Content!&lt;span class=&quot;nt&quot;&gt;&amp;lt;/BODY&amp;gt;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;Right away it starts looking good:&lt;/p&gt;

&lt;div style=&quot;text-align: center&quot;&gt;&lt;img src=&quot;/assets/blog/frames/page1.png&quot; /&gt;&lt;/div&gt;

&lt;p&gt;That’s nice, but I want to have more than 1 element in my left menu, so how can I do that ?
You could very much do this:&lt;/p&gt;

&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;html&quot;&gt;&lt;span class=&quot;nt&quot;&gt;&amp;lt;BODY&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;bgcolor=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&amp;quot;orange&amp;quot;&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&amp;gt;&lt;/span&gt;Menu 1&lt;span class=&quot;nt&quot;&gt;&amp;lt;BR&amp;gt;&amp;lt;BR&amp;gt;&amp;lt;BR&amp;gt;&lt;/span&gt;Menu 2&lt;span class=&quot;nt&quot;&gt;&amp;lt;BR&amp;gt;&amp;lt;BR&amp;gt;&amp;lt;BR&amp;gt;&lt;/span&gt;Menu 3&lt;span class=&quot;nt&quot;&gt;&amp;lt;/BODY&amp;gt;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;The problem is that then you won’t have colors on your menu items ! That’s when my very clever trick
comes in. You just need… more frames !&lt;/p&gt;

&lt;p&gt;Change f1.html to look like this:&lt;/p&gt;

&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;html&quot;&gt;&lt;span class=&quot;nt&quot;&gt;&amp;lt;HTML&amp;gt;&lt;/span&gt;
&lt;span class=&quot;nt&quot;&gt;&amp;lt;HEAD&amp;gt;&lt;/span&gt;
&lt;span class=&quot;nt&quot;&gt;&amp;lt;TITLE&amp;gt;&lt;/span&gt;INTERNET!&lt;span class=&quot;nt&quot;&gt;&amp;lt;/TITLE&amp;gt;&lt;/span&gt;
&lt;span class=&quot;nt&quot;&gt;&amp;lt;/HEAD&amp;gt;&lt;/span&gt;
&lt;span class=&quot;nt&quot;&gt;&amp;lt;FRAMESET&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;rows=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&amp;quot;25%, 25%, 25%, 25%&amp;quot;&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&amp;gt;&lt;/span&gt;
  &lt;span class=&quot;nt&quot;&gt;&amp;lt;FRAME&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;src=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&amp;quot;menu1.html&amp;quot;&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&amp;gt;&lt;/span&gt;
  &lt;span class=&quot;nt&quot;&gt;&amp;lt;FRAME&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;src=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&amp;quot;menu2.html&amp;quot;&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&amp;gt;&lt;/span&gt;
  &lt;span class=&quot;nt&quot;&gt;&amp;lt;FRAME&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;src=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&amp;quot;menu3.html&amp;quot;&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&amp;gt;&lt;/span&gt;
  &lt;span class=&quot;nt&quot;&gt;&amp;lt;FRAME&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;src=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&amp;quot;menu4.html&amp;quot;&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&amp;gt;&lt;/span&gt;
&lt;span class=&quot;nt&quot;&gt;&amp;lt;/FRAMESET&amp;gt;&lt;/span&gt;
&lt;span class=&quot;nt&quot;&gt;&amp;lt;/HTML&amp;gt;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;Wow. Such color. Much design.&lt;/p&gt;

&lt;div style=&quot;text-align: center&quot;&gt;&lt;img src=&quot;/assets/blog/frames/page2.png&quot; /&gt;&lt;/div&gt;

&lt;p&gt;You can even create some impressive gradients with only a few more lines of code and
knowledge of &lt;em&gt;advanced colors in HTML&lt;/em&gt;.&lt;/p&gt;

&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;html&quot;&gt;&lt;span class=&quot;nt&quot;&gt;&amp;lt;BODY&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;bgcolor=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&amp;quot;black&amp;quot;&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;text=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&amp;quot;white&amp;quot;&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&amp;gt;&lt;/span&gt;Menu 1&lt;span class=&quot;nt&quot;&gt;&amp;lt;/BODY&amp;gt;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;div style=&quot;text-align: center&quot;&gt;&lt;img src=&quot;/assets/blog/frames/page3.png&quot; /&gt;&lt;/div&gt;

&lt;p&gt;Finally let’s say I want to add an image next to a menu item. Seems complicated, right ?&lt;/p&gt;

&lt;p&gt;No. It’s easy. Use frames.&lt;/p&gt;

&lt;p&gt;You only need to change menu.html like this:&lt;/p&gt;

&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;html&quot;&gt;&lt;span class=&quot;nt&quot;&gt;&amp;lt;HTML&amp;gt;&lt;/span&gt;
&lt;span class=&quot;nt&quot;&gt;&amp;lt;HEAD&amp;gt;&lt;/span&gt;
&lt;span class=&quot;nt&quot;&gt;&amp;lt;TITLE&amp;gt;&lt;/span&gt;INTERNET!&lt;span class=&quot;nt&quot;&gt;&amp;lt;/TITLE&amp;gt;&lt;/span&gt;
&lt;span class=&quot;nt&quot;&gt;&amp;lt;/HEAD&amp;gt;&lt;/span&gt;
&lt;span class=&quot;nt&quot;&gt;&amp;lt;FRAMESET&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;cols=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&amp;quot;20%, 80%&amp;quot;&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&amp;gt;&lt;/span&gt;
  &lt;span class=&quot;nt&quot;&gt;&amp;lt;FRAME&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;src=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&amp;quot;new.gif&amp;quot;&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&amp;gt;&lt;/span&gt;
  &lt;span class=&quot;nt&quot;&gt;&amp;lt;FRAME&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;src=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&amp;quot;menu1_text.html&amp;quot;&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&amp;gt;&lt;/span&gt;
&lt;span class=&quot;nt&quot;&gt;&amp;lt;/FRAMESET&amp;gt;&lt;/span&gt;
&lt;span class=&quot;nt&quot;&gt;&amp;lt;/HTML&amp;gt;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;div style=&quot;text-align: center&quot;&gt;&lt;img src=&quot;/assets/blog/frames/page4.png&quot; /&gt;&lt;/div&gt;

&lt;p&gt;Perfect.&lt;/p&gt;

&lt;p&gt;Now for the protip. If you want your website to look perfect, you want to hide the construction
lines that are the frame borders. To do this, add a frameborder set to 0.&lt;/p&gt;

&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;html&quot;&gt;&lt;span class=&quot;nt&quot;&gt;&amp;lt;HTML&amp;gt;&lt;/span&gt;
&lt;span class=&quot;nt&quot;&gt;&amp;lt;HEAD&amp;gt;&lt;/span&gt;
&lt;span class=&quot;nt&quot;&gt;&amp;lt;TITLE&amp;gt;&lt;/span&gt;INTERNET!&lt;span class=&quot;nt&quot;&gt;&amp;lt;/TITLE&amp;gt;&lt;/span&gt;
&lt;span class=&quot;nt&quot;&gt;&amp;lt;/HEAD&amp;gt;&lt;/span&gt;
&lt;span class=&quot;nt&quot;&gt;&amp;lt;FRAMESET&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;cols=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&amp;quot;20%, 80%&amp;quot;&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;frameborder=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&amp;quot;0&amp;quot;&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&amp;gt;&lt;/span&gt;
  &lt;span class=&quot;nt&quot;&gt;&amp;lt;FRAME&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;src=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&amp;quot;f1.html&amp;quot;&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&amp;gt;&lt;/span&gt;
  &lt;span class=&quot;nt&quot;&gt;&amp;lt;FRAME&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;src=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&amp;quot;f2.html&amp;quot;&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&amp;gt;&lt;/span&gt;
&lt;span class=&quot;nt&quot;&gt;&amp;lt;/FRAMESET&amp;gt;&lt;/span&gt;
&lt;span class=&quot;nt&quot;&gt;&amp;lt;/HTML&amp;gt;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;Now you have a professional looking website.&lt;/p&gt;

&lt;p&gt;You’re welcome.&lt;/p&gt;

&lt;div style=&quot;text-align: center&quot;&gt;&lt;img src=&quot;/assets/blog/frames/page5.png&quot; /&gt;&lt;/div&gt;

&lt;h2 id=&quot;the-worst-code&quot;&gt;The Worst Code&lt;/h2&gt;

&lt;p&gt;My take on this is that the code you wrote yesterday will always be crap compared to what you can
write today. Don’t be depressed about it, that’s a good thing ! It means you’re getting better!&lt;/p&gt;

&lt;p&gt;On some forum a few years back, someone asked “what’s the worst code you ever saw ?”.
Someone responded something along the line of “every single piece of code I’ve written a long enough time ago”.
I really liked this answer, quite humbling and much better than bashing a coworker or a random funny story.&lt;/p&gt;

&lt;p&gt;So keep improving your skills, don’t feel too bad about past coding mistakes and don’t hate on new developers
still learning - you were making the same mistakes at some point !&lt;/p&gt;
</content>
   </entry>
  
 
  
   <entry>
     <title>Tips & Tricks Learned Releasing an Hybrid App Using&nbsp;Steroids.js</title>
     <link href="http://marcgg.com/blog/2014/04/09/phonegap-steroids-hybrid-native-app-tips"/>
     <updated>2014-04-09T00:00:00+02:00</updated>
     <id>http://marcgg.com/blog/2014/04/09/phonegap-steroids-hybrid-native-app-tips</id>
     <content type="html">&lt;p&gt;A while ago I &lt;a href=&quot;/blog/2013/08/29/appgyver-steroids-iphone-hybrid-javascript/&quot;&gt;wrote about AppGyver’s SteroidsJS&lt;/a&gt;
and its interesting take on hybrid app development. If you haven’t read it, basically they add the ability
to use native UI elements in PhoneGap applications.&lt;/p&gt;

&lt;p&gt;Since then I’ve teamed up
with &lt;a href=&quot;http://dribbble.com/kevintunc&quot;&gt;Kevin Tunc&lt;/a&gt;, worked a lot, managed to actually release something
&lt;a href=&quot;https://itunes.apple.com/app/liff-understand-your-life/id834944345&quot;&gt;on the appstore&lt;/a&gt; and
won AppGyver’s app of the month!&lt;/p&gt;

&lt;div style=&quot;text-align: center&quot;&gt;&lt;img src=&quot;/assets/misc/win_app_month.jpg&quot; /&gt;&lt;/div&gt;

&lt;p&gt;It wasn’t all that easy to create an hybrid app with a quality UI,
so I figured I’d share some of the gotchas I ran into.
I know it’s a longer article than what I use to post, but really this is what I wish was written when I started
working on my app.&lt;/p&gt;

&lt;p&gt;Of course, like any other things I write here,
&lt;a href=&quot;/blog/2013/11/05/enough-with-the-language-trolls/&quot;&gt;I don’t claim to know everything&lt;/a&gt;.
Please take this as it is: some tips I learned making mistakes and wasting time.
I’m no JavaScript guru master ninja 2.0 rock star,
&lt;a href=&quot;https://www.youtube.com/watch?v=Nh7UgAprdpM&quot;&gt;ain’t nobody got time for that&lt;/a&gt;!
I’ll also focus on iOS because I built an iOS app, but a lot of this
applies to Android phones as well. Also note that some parts of the article are just as
true for any kind of hybrid app development, be it with PhoneGap or something else.&lt;/p&gt;

&lt;h2 id=&quot;getting-the-device-to-leave-you-alone&quot;&gt;Getting The Device To Leave You Alone&lt;/h2&gt;

&lt;p&gt;You probably know all about using a &lt;a href=&quot;http://meyerweb.com/eric/tools/css/reset/&quot;&gt;reset.css file&lt;/a&gt;, but
for a webview trying to pass for a native view, it’s not enough.&lt;/p&gt;

&lt;h3 id=&quot;ms-tap-delay&quot;&gt;300ms Tap Delay&lt;/h3&gt;

&lt;p&gt;Mobile browsers implement a delay on tap to check if you tried to double
tap or not. Overall it goes: touchstart -&amp;gt; touchend -&amp;gt; wait 300ms -&amp;gt;
send click. This results in a terrible experience when navigating your
app as it feels slow and/or broken.&lt;/p&gt;

&lt;p&gt;For some browsers you can just
&lt;a href=&quot;http://updates.html5rocks.com/2013/12/300ms-tap-delay-gone-away&quot;&gt;specify a viewport and it’ll go away&lt;/a&gt;:&lt;/p&gt;

&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;html&quot;&gt;&lt;span class=&quot;nt&quot;&gt;&amp;lt;meta&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;name=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&amp;quot;viewport&amp;quot;&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;content=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&amp;quot;width=device-width, user-scalable=no&amp;quot;&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&amp;gt;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;If this solution doesn’t work, for instance if your code runs on Safari, use &lt;a href=&quot;https://github.com/ftlabs/fastclick&quot;&gt;FastClick&lt;/a&gt;:&lt;/p&gt;

&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;javascript&quot;&gt;&lt;span class=&quot;nb&quot;&gt;window&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;addEventListener&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;&amp;#39;load&amp;#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;kd&quot;&gt;function&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;nx&quot;&gt;FastClick&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;attach&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;document&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;body&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;},&lt;/span&gt; &lt;span class=&quot;kc&quot;&gt;false&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;h3 id=&quot;disable-selectioncopy-when-long-tapping&quot;&gt;Disable Selection/Copy When Long Tapping&lt;/h3&gt;

&lt;p&gt;You know… this thing:&lt;/p&gt;

&lt;div style=&quot;text-align: center&quot;&gt;&lt;img src=&quot;/assets/misc/copy.jpg&quot; /&gt;&lt;/div&gt;

&lt;p&gt;Fixing this one is pretty easy. For webkit you add this in your CSS:&lt;/p&gt;

&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;css&quot;&gt;&lt;span class=&quot;nt&quot;&gt;-webkit-user-select&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;nt&quot;&gt;none&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;nt&quot;&gt;-webkit-touch-callout&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;nt&quot;&gt;none&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;h3 id=&quot;disable-double-tap&quot;&gt;Disable Double Tap&lt;/h3&gt;

&lt;p&gt;If you don’t like double tapping and use jQuery, try &lt;a href=&quot;http://stackoverflow.com/a/9728511&quot;&gt;this stackoverflow answer&lt;/a&gt;.
Just in case this answer disapears, here’s what it looks like:&lt;/p&gt;

&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;javascript&quot;&gt;&lt;span class=&quot;c1&quot;&gt;// jQuery no-double-tap-zoom plugin&lt;/span&gt;
&lt;span class=&quot;c1&quot;&gt;// Triple-licensed: Public Domain, MIT and WTFPL license - share and enjoy!&lt;/span&gt;

&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;kd&quot;&gt;function&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;$&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
  &lt;span class=&quot;kd&quot;&gt;var&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;IS_IOS&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;sr&quot;&gt;/iphone|ipad/i&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;test&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;navigator&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;userAgent&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
  &lt;span class=&quot;nx&quot;&gt;$&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;fn&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;nodoubletapzoom&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;kd&quot;&gt;function&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;IS_IOS&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
      &lt;span class=&quot;nx&quot;&gt;$&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;this&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;).&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;bind&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;&amp;#39;touchstart&amp;#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;kd&quot;&gt;function&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;preventZoom&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;e&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
        &lt;span class=&quot;kd&quot;&gt;var&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;t2&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;e&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;timeStamp&lt;/span&gt;
          &lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;t1&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;$&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;this&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;).&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;data&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;&amp;#39;lastTouch&amp;#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;||&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;t2&lt;/span&gt;
          &lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;dt&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;t2&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;-&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;t1&lt;/span&gt;
          &lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;fingers&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;e&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;originalEvent&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;touches&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;length&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
        &lt;span class=&quot;nx&quot;&gt;$&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;this&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;).&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;data&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;&amp;#39;lastTouch&amp;#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;t2&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
        &lt;span class=&quot;k&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;!&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;dt&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;||&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;dt&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;gt;&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;500&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;||&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;fingers&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;gt;&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;return&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt; &lt;span class=&quot;c1&quot;&gt;// not double-tap&lt;/span&gt;

        &lt;span class=&quot;nx&quot;&gt;e&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;preventDefault&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;();&lt;/span&gt; &lt;span class=&quot;c1&quot;&gt;// double tap - prevent the zoom&lt;/span&gt;
        &lt;span class=&quot;c1&quot;&gt;// also synthesize click events we just swallowed up&lt;/span&gt;
        &lt;span class=&quot;nx&quot;&gt;$&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;this&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;).&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;trigger&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;&amp;#39;click&amp;#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;).&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;trigger&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;&amp;#39;click&amp;#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
      &lt;span class=&quot;p&quot;&gt;});&lt;/span&gt;
  &lt;span class=&quot;p&quot;&gt;};&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;})(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;jQuery&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;h3 id=&quot;disable-overscroll&quot;&gt;Disable Overscroll&lt;/h3&gt;

&lt;p&gt;I think that you want the “bounce” effect when you scroll out of a
webview. It actually feels better for the end user. However in some
specific cases you might need to disable this behavior. There are many ways of doing this and I personnaly used
this one from
&lt;a href=&quot;http://stackoverflow.com/questions/10238084/ios-safari-how-to-disable-overscroll-but-allow-scrollable-divs-to-scroll-norma&quot;&gt;stackoverflow&lt;/a&gt;:&lt;/p&gt;

&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;javascript&quot;&gt;&lt;span class=&quot;kd&quot;&gt;function&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;disallowOverscroll&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(){&lt;/span&gt;
  &lt;span class=&quot;nx&quot;&gt;$&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;document&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;).&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;on&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;&amp;#39;touchmove&amp;#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;kd&quot;&gt;function&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;e&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;){&lt;/span&gt;
    &lt;span class=&quot;nx&quot;&gt;e&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;preventDefault&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;();&lt;/span&gt;
  &lt;span class=&quot;p&quot;&gt;});&lt;/span&gt;
  &lt;span class=&quot;nx&quot;&gt;$&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;&amp;#39;body&amp;#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;).&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;on&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;&amp;#39;touchstart&amp;#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;&amp;#39;.scrollable&amp;#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;kd&quot;&gt;function&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;e&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;e&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;currentTarget&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;scrollTop&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;===&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
      &lt;span class=&quot;nx&quot;&gt;e&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;currentTarget&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;scrollTop&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
    &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;else&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;e&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;currentTarget&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;scrollHeight&lt;/span&gt;
              &lt;span class=&quot;o&quot;&gt;===&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;e&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;currentTarget&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;scrollTop&lt;/span&gt;
                  &lt;span class=&quot;o&quot;&gt;+&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;e&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;currentTarget&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;offsetHeight&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
      &lt;span class=&quot;nx&quot;&gt;e&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;currentTarget&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;scrollTop&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;-=&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
    &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
  &lt;span class=&quot;p&quot;&gt;});&lt;/span&gt;
  &lt;span class=&quot;nx&quot;&gt;$&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;&amp;#39;body&amp;#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;).&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;on&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;&amp;#39;touchmove&amp;#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;&amp;#39;.scrollable&amp;#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;kd&quot;&gt;function&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;e&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;nx&quot;&gt;e&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;stopPropagation&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;();&lt;/span&gt;
  &lt;span class=&quot;p&quot;&gt;});&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;h3 id=&quot;higcharts&quot;&gt;Higcharts&lt;/h3&gt;

&lt;p&gt;If you use &lt;a href=&quot;http://www.highcharts.com/&quot;&gt;highcharts&lt;/a&gt;, you could run into some scrolling trouble when
the user touches the graphs. This gist might help:
&lt;a href=&quot;https://gist.github.com/skarface/2994906&quot;&gt;https://gist.github.com/skarface/2994906&lt;/a&gt;&lt;/p&gt;

&lt;h3 id=&quot;allow-text-selection-for-input&quot;&gt;Allow Text Selection For Input&lt;/h3&gt;

&lt;p&gt;This is an iOS issue. In some cases you won’t be able to select and edit
the text in your inputs as you’d like. You can fix this using
&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/CSS/user-select&quot;&gt;user-select&lt;/a&gt;&lt;/p&gt;

&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;css&quot;&gt;&lt;span class=&quot;nt&quot;&gt;-webkit-user-select&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;nt&quot;&gt;text&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;h3 id=&quot;better-looking-text&quot;&gt;Better Looking Text&lt;/h3&gt;

&lt;p&gt;I noticed that changing the
&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/CSS/text-rendering&quot;&gt;text-rendering&lt;/a&gt;
option gets things to look better. The trade-off is performance, but if you don’t have
huge chunks of text you’ll be fine.&lt;/p&gt;

&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;css&quot;&gt;&lt;span class=&quot;nt&quot;&gt;text-rendering&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;nt&quot;&gt;optimizeLegibility&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;h3 id=&quot;remove-glossy-looking-buttons-in-safari&quot;&gt;Remove Glossy Looking Buttons in Safari&lt;/h3&gt;

&lt;p&gt;How to go from a glossy stylized button (left) to a cleaner, flatter,
easier to update button (right)?&lt;/p&gt;

&lt;div style=&quot;text-align: center&quot;&gt;&lt;img src=&quot;/assets/misc/glossysafari.jpg&quot; /&gt;&lt;/div&gt;

&lt;p&gt;Easy!&lt;/p&gt;

&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;css&quot;&gt;&lt;span class=&quot;nt&quot;&gt;-webkit-appearance&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;nt&quot;&gt;carret&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;nt&quot;&gt;-webkit-appearance&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;nt&quot;&gt;none&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;;&lt;/span&gt; &lt;span class=&quot;c&quot;&gt;/* alernatively */&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;You can read more about this &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/CSS/-moz-appearance&quot;&gt;here&lt;/a&gt;.
I also found that changing box sizing could help in the “undesign” process. Smarter people than me explained
&lt;a href=&quot;http://www.paulirish.com/2012/box-sizing-border-box-ftw/&quot;&gt;how it works&lt;/a&gt;,
you can &lt;a href=&quot;http://quirksmode.org/css/user-interface/boxsizing.html&quot;&gt;read about it&lt;/a&gt; or try it out like this:&lt;/p&gt;

&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;css&quot;&gt;&lt;span class=&quot;nt&quot;&gt;-webkit-box-sizing&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;nt&quot;&gt;border-box&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;h3 id=&quot;removing-gray-highlight-when-tapping-links&quot;&gt;Removing Gray Highlight When Tapping Links&lt;/h3&gt;

&lt;p&gt;On mobile Safari, tapped links will get quickly highlighted, which
doesn’t look very “native” once embeded in a Steroids JS webview. This is especialy true
for images. Change this using:&lt;/p&gt;

&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;css&quot;&gt;&lt;span class=&quot;nt&quot;&gt;-webkit-tap-highlight-color&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;#123456&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;;&lt;/span&gt; &lt;span class=&quot;c&quot;&gt;/* To change it */&lt;/span&gt;
&lt;span class=&quot;nt&quot;&gt;-webkit-tap-highlight-color&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;nt&quot;&gt;transparent&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;;&lt;/span&gt; &lt;span class=&quot;c&quot;&gt;/* To remove it */&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;I found that changing the color feels better than removing it.&lt;/p&gt;

&lt;h3 id=&quot;overflow-scrolling&quot;&gt;Overflow Scrolling&lt;/h3&gt;

&lt;p&gt;If you have some elements that are set to scroll when overflowing, you
might feel that the scrolling itself doesn’t “feel right”. I suggest
looking in this direction:&lt;/p&gt;

&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;css&quot;&gt; &lt;span class=&quot;nt&quot;&gt;-webkit-overflow-scrolling&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;nt&quot;&gt;touch&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;h3 id=&quot;on-fluid-layouts&quot;&gt;On Fluid Layouts&lt;/h3&gt;

&lt;p&gt;Using percentages for size can be a good option to handle different screen sizes.
Just know that there is a &lt;a href=&quot;https://github.com/twbs/bootstrap/issues/9282&quot;&gt;known issue&lt;/a&gt; where Safari
rounds up percentages that can cause for weird behaviors when using fluid layouts.&lt;/p&gt;

&lt;h2 id=&quot;retina&quot;&gt;Retina&lt;/h2&gt;

&lt;p&gt;If you build for iOS, you have to take retina into account. Spoiler:
it’s a pain.&lt;/p&gt;

&lt;h3 id=&quot;the-big-idea&quot;&gt;The Big Idea&lt;/h3&gt;

&lt;blockquote&gt;
  &lt;p&gt;Retina Display is a brand name used by Apple for liquid crystal displays
that have a pixel density high enough that the human eye is unable to discern
individual pixels at a typical viewing distance.&lt;/p&gt;

  &lt;p&gt;&lt;a href=&quot;http://en.wikipedia.org/wiki/Retina_Display&quot;&gt;wikipedia&lt;/a&gt;&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;The short version of how to deal with it is pretty straightforward: create images twice as big, call them
my_image@2x.jpg and resize them in CSS.&lt;/p&gt;

&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;css&quot;&gt;&lt;span class=&quot;nt&quot;&gt;background&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;nt&quot;&gt;url&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;my_image&lt;/span&gt;&lt;span class=&quot;nc&quot;&gt;.jpg&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;);&lt;/span&gt;
&lt;span class=&quot;nt&quot;&gt;background-size&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;nt&quot;&gt;100px&lt;/span&gt; &lt;span class=&quot;nt&quot;&gt;100px&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;;&lt;/span&gt; &lt;span class=&quot;c&quot;&gt;/* with my_image.jpg being 200x200 px */&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;h3 id=&quot;dont-bother-with-normal-size&quot;&gt;Don’t Bother With Normal Size&lt;/h3&gt;

&lt;p&gt;If all your images are in your build and not on a remote server, I would recommend always loading the @2x version.
The rule of thumb is that if it looks fine in retina, it will look fine in 1x and embeding
the 1x image will only increase your build’s size and complexify the way you manage your assets.&lt;/p&gt;

&lt;h3 id=&quot;background-position&quot;&gt;Background Position&lt;/h3&gt;

&lt;p&gt;Be careful when using background positions with background sizes as they
sometimes &lt;a href=&quot;http://stackoverflow.com/questions/17033806/background-size-with-background-position-doesnt-scale-the-position&quot;&gt;don’t play well together&lt;/a&gt;.&lt;/p&gt;

&lt;h3 id=&quot;px-border&quot;&gt;1px Border&lt;/h3&gt;

&lt;p&gt;If you specify a 1px border in your CSS, a 2px border will be displayed
on retina displays. Yeah, this is pretty unituitive and a major pain.
There are a lot of ways to try to get this to work.&lt;/p&gt;

&lt;p&gt;This might not be best for you but, for my use case, I found
&lt;a href=&quot;https://excellenteasy.com/devblog/posts/how-to-target-physical-pixels-on-retina-screens-with-css/&quot;&gt;Stephan Bönnemann’s solution&lt;/a&gt;
simpler, and I ended adding a DOM element and styling it like this:&lt;/p&gt;

&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;html&quot;&gt;&lt;span class=&quot;nt&quot;&gt;&amp;lt;div&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;class=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&amp;quot;physical_1px&amp;quot;&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&amp;gt;&amp;lt;/div&amp;gt;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;css&quot;&gt;&lt;span class=&quot;nc&quot;&gt;.physical_1px&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
  &lt;span class=&quot;k&quot;&gt;background-image&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;linear&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;-&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;gradient&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;m&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;deg&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;m&quot;&gt;#DFDFDF&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;m&quot;&gt;#DFDFDF&lt;/span&gt; &lt;span class=&quot;m&quot;&gt;50&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;%,&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;transparent&lt;/span&gt; &lt;span class=&quot;m&quot;&gt;50&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;%&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
  &lt;span class=&quot;k&quot;&gt;background&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;-&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;size&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;m&quot;&gt;100&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;%&lt;/span&gt; &lt;span class=&quot;m&quot;&gt;1px&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
  &lt;span class=&quot;k&quot;&gt;background-repeat&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;no-repeat&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
  &lt;span class=&quot;k&quot;&gt;background-position&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;bottom&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
  &lt;span class=&quot;k&quot;&gt;height&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;m&quot;&gt;1px&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;This is not ideal, but I wasn’t a fan of the alternatives either. Check
them out and make an opinion for yourself:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;a href=&quot;http://atirip.com/2013/09/22/yes-we-can-do-fraction-of-a-pixel/&quot;&gt;Yes We Can Do Fraction Of A Pixel&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;http://n12v.com/css-retina-and-physical-pixels/&quot;&gt;CSS, Retina, and Physical Pixels&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;http://makandracards.com/makandra/12019-css-emulate-borders-with-inset-box-shadows&quot;&gt;CSS: Emulate borders with inset box shadows&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&quot;performances&quot;&gt;Performances&lt;/h2&gt;

&lt;h3 id=&quot;avoid-http-calls&quot;&gt;Avoid HTTP Calls&lt;/h3&gt;

&lt;p&gt;This seems obvious, but embed as many images and javascript libraries as possible in your build.
It will run on mobile, and connectivity is an issue there. Yes it does increases build size, but
it’s totally worth it.&lt;/p&gt;

&lt;h3 id=&quot;jquery-&quot;&gt;jQuery ?&lt;/h3&gt;

&lt;p&gt;I used jQuery. There, I said it.&lt;/p&gt;

&lt;p&gt;I knew it would degrade performances, but I benchmarked it a bit versus Vanilla JS and the
difference was not really noticable for my use cases, so I kept it because I’m used to the
syntax and it &lt;a href=&quot;/blog/2013/11/05/enough-with-the-language-trolls/&quot;&gt;gets the job done&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;Of course I followed &lt;a href=&quot;http://www.artzstudio.com/2009/04/jquery-performance-rules/&quot;&gt;the usual performances tips&lt;/a&gt;,
not too much DOM manipulation, do not reselect the same element over and
over etc.&lt;/p&gt;

&lt;h3 id=&quot;css-performances&quot;&gt;CSS Performances&lt;/h3&gt;

&lt;h4 id=&quot;animations&quot;&gt;Animations&lt;/h4&gt;

&lt;p&gt;On a lot of devices CSS animations are slow. Often it’s not slow enough
you want to stop using them altogether, but they are still not that good.&lt;/p&gt;

&lt;p&gt;My point is that you should not count on perfectly smooth animations when designing your app.&lt;/p&gt;

&lt;h4 id=&quot;linear-gradients-qtwebkit-and-graphics&quot;&gt;Linear Gradients, QtWebkit and Graphics&lt;/h4&gt;

&lt;p&gt;During development I did run into major CSS performance issues. I’m not even kidding.
This happened when I tried to apply an animation to a div with a linear-gradient.&lt;/p&gt;

&lt;blockquote&gt;
  &lt;p&gt;Sometimes it’s tempting to use webkit’s drawing features, like -webkit-gradient,
when it’s not actually necessary - maintaining images and dealing with Photoshop
and drawing tools can be a hassle. However, using CSS for those tasks moves that
hassle from the designer’s computer to the target’s CPU. Gradients, shadows,
and other decorations in CSS should be used only when necessary
(e.g. when the shape is dynamic based on the content) - &lt;strong&gt;otherwise, static images
are always faster&lt;/strong&gt;. On very low-end platforms, it’s even advised to use static images
for some of the text if possible.&lt;/p&gt;

  &lt;p&gt;&lt;a href=&quot;https://trac.webkit.org/wiki/QtWebKitGraphics#Usestaticimages&quot;&gt;webkit.org&lt;/a&gt;&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;The solution here is to prefer using images as background images rather
than CSS gradients. This is irritating, but I never found a way
around this performance issue.&lt;/p&gt;

&lt;h3 id=&quot;javascript&quot;&gt;JavaScript&lt;/h3&gt;

&lt;p&gt;I’m not going to explain everything about JS performances. This could be
a serie of articles in itself. It could even be a book.
Actually, it is a book! &lt;a href=&quot;http://shop.oreilly.com/product/9780596802806.do&quot;&gt;Go check it out&lt;/a&gt;!&lt;/p&gt;

&lt;p&gt;To sum it up: reuse objects, do not lock processes, be evented, large
arrays will slow everything down.&lt;/p&gt;

&lt;h2 id=&quot;working-with-steroidsjs&quot;&gt;Working with SteroidsJS&lt;/h2&gt;

&lt;p&gt;Alright, we talked a lot of general facts that could apply to any hybrid
HTML 5 / CSS 3 app, but what about SteroidsJS itself?&lt;/p&gt;

&lt;h3 id=&quot;learning&quot;&gt;Learning&lt;/h3&gt;

&lt;p&gt;Like any new libraries there will be problems, bugs and API changes.
It is important to keep up to date, I’d suggest:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;Following what goes on in the &lt;a href=&quot;http://forums.appgyver.com&quot;&gt;forums&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;Keep an eye on the &lt;a href=&quot;http://blog.appgyver.com/changelog/&quot;&gt;changelog&lt;/a&gt;
and the &lt;a href=&quot;http://blog.appgyver.com/&quot;&gt;blog&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;For documentation and tips on how to code:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;Use &lt;a href=&quot;http://docs.appgyver.com/en/edge/index.html&quot;&gt;the API documentation&lt;/a&gt; which is quite
extensive. Be aware that it is very poorly referenced on Google right now so
you’ll have to be precise in your searches.&lt;/li&gt;
  &lt;li&gt;Reading &lt;a href=&quot;http://academy.appgyver.com/&quot;&gt;the tutorials&lt;/a&gt;
is a must. They are well done and give a good overview of what the technology can do.
There are also a lot of good step by step examples.&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&quot;organizing-code&quot;&gt;Organizing Code&lt;/h3&gt;

&lt;p&gt;I personnally didn’t go the AngularJS route because it felt overkill for
what I tried to achieve. I also didn’t like the MVC solution proposed by
basic steroids scaffolding. In the end what worked for me was quite
view-centric approach that looked like this:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;/app/views/my_scope/action.html (a view in a separate webview)&lt;/li&gt;
  &lt;li&gt;/app/controllers/my_scope/action.js (all the JS related to a view)&lt;/li&gt;
  &lt;li&gt;/app/models/data_persistence.js (everything that is transversal and
relates to data)&lt;/li&gt;
  &lt;li&gt;/www/javascripts/application.js (shared code between all views)&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Overall once I set it up like this, it was easier to figure out what
would interact with what.&lt;/p&gt;

&lt;h2 id=&quot;basic-customization--features&quot;&gt;Basic Customization &amp;amp; Features&lt;/h2&gt;

&lt;h3 id=&quot;slider&quot;&gt;Slider&lt;/h3&gt;

&lt;p&gt;If you’re in need of a touch slider, I recommend using &lt;a href=&quot;https://github.com/thebird/Swipe&quot;&gt;Swipe.Js&lt;/a&gt;.
It’s both simple, effective and very customizable.&lt;/p&gt;

&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;javascript&quot;&gt;&lt;span class=&quot;nb&quot;&gt;window&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;mySwipe&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;Swipe&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;document&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;getElementById&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;&amp;#39;slider&amp;#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;));&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;The only gotcha is that you won’t be able to put inputs in a slide
because text edition (long press on iOS) will not work properly.&lt;/p&gt;

&lt;h3 id=&quot;hammerjs&quot;&gt;Hammer.js&lt;/h3&gt;

&lt;p&gt;&lt;a href=&quot;http://eightmedia.github.io/hammer.js/&quot;&gt;Hammer&lt;/a&gt; ships with Steroids JS, so I gave it a try.
Overall it works fine for some events such as tap or release, but the
way it handles clicks seemed buggy. I can’t quite put my finger on it,
but in some cases I was better of just using jQuery for click events.&lt;/p&gt;

&lt;h3 id=&quot;use-clicks&quot;&gt;Use Clicks&lt;/h3&gt;

&lt;p&gt;When in doubt, use links and their click event. It will feel better for
the end user than using tap or any other event. There is no need
to get fancy.&lt;/p&gt;

&lt;h3 id=&quot;loader&quot;&gt;Loader&lt;/h3&gt;

&lt;p&gt;I liked having a global way of calling a loader in any view and
centralize the style and retry logic. The javascript code is pretty
domain specific to my app, but I’ll share the CSS part if you want it to
look like this:&lt;/p&gt;

&lt;div style=&quot;text-align: center&quot;&gt;&lt;img src=&quot;/assets/misc/loader.jpg&quot; /&gt;&lt;/div&gt;

&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;html&quot;&gt;&lt;span class=&quot;nt&quot;&gt;&amp;lt;div&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;id=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&amp;quot;loader&amp;quot;&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;class=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&amp;quot;loader&amp;quot;&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&amp;gt;&lt;/span&gt;
  &lt;span class=&quot;nt&quot;&gt;&amp;lt;div&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;id=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&amp;quot;text_load&amp;quot;&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;class=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&amp;quot;loader_content&amp;quot;&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;data-t=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&amp;quot;loading&amp;quot;&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&amp;gt;&lt;/span&gt;...&lt;span class=&quot;nt&quot;&gt;&amp;lt;/div&amp;gt;&lt;/span&gt;
  &lt;span class=&quot;nt&quot;&gt;&amp;lt;div&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;id=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&amp;quot;retry_load&amp;quot;&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;class=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&amp;quot;loader_content&amp;quot;&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;data-t=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&amp;quot;retry&amp;quot;&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&amp;gt;&amp;lt;/div&amp;gt;&lt;/span&gt;
&lt;span class=&quot;nt&quot;&gt;&amp;lt;/div&amp;gt;&lt;/span&gt;
&lt;span class=&quot;nt&quot;&gt;&amp;lt;div&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;class=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&amp;quot;loader&amp;quot;&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;id=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&amp;quot;loader_overlay&amp;quot;&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&amp;gt;&amp;lt;/div&amp;gt;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;The loader overlay is to prevent any clicking to happened while the
loader is present on the screen. The retry_load and text_load are the
elements displayed when it succeeds or fails.&lt;/p&gt;

&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;css&quot;&gt;&lt;span class=&quot;nf&quot;&gt;#loader&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
  &lt;span class=&quot;k&quot;&gt;position&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;absolute&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
  &lt;span class=&quot;k&quot;&gt;top&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;m&quot;&gt;130px&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
  &lt;span class=&quot;k&quot;&gt;left&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;m&quot;&gt;70px&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
  &lt;span class=&quot;k&quot;&gt;background-color&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;m&quot;&gt;#000&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
  &lt;span class=&quot;k&quot;&gt;z-index&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;m&quot;&gt;9999&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
  &lt;span class=&quot;k&quot;&gt;width&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;m&quot;&gt;190px&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
  &lt;span class=&quot;k&quot;&gt;font-size&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;m&quot;&gt;1.2em&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
  &lt;span class=&quot;k&quot;&gt;opacity&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;m&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;m&quot;&gt;8&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
  &lt;span class=&quot;k&quot;&gt;border&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;-&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;radius&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;m&quot;&gt;10px&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
  &lt;span class=&quot;k&quot;&gt;color&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;m&quot;&gt;#fff&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
  &lt;span class=&quot;k&quot;&gt;text-align&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;center&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
&lt;span class=&quot;nf&quot;&gt;#retry_load&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
  &lt;span class=&quot;k&quot;&gt;display&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;none&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
&lt;span class=&quot;nc&quot;&gt;.loader_content&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
  &lt;span class=&quot;k&quot;&gt;display&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;block&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
  &lt;span class=&quot;k&quot;&gt;padding&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;m&quot;&gt;70px&lt;/span&gt; &lt;span class=&quot;m&quot;&gt;0px&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;

&lt;span class=&quot;nf&quot;&gt;#loader_overlay&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
  &lt;span class=&quot;k&quot;&gt;position&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;absolute&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
  &lt;span class=&quot;k&quot;&gt;top&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;m&quot;&gt;0px&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
  &lt;span class=&quot;k&quot;&gt;height&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;m&quot;&gt;620px&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
  &lt;span class=&quot;k&quot;&gt;width&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;m&quot;&gt;320px&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
  &lt;span class=&quot;k&quot;&gt;background-color&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;m&quot;&gt;#000&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
  &lt;span class=&quot;k&quot;&gt;opacity&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;m&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
  &lt;span class=&quot;k&quot;&gt;z-index&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;m&quot;&gt;500&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;As you can see, the CSS is very simple. Again, not claiming to provide the definitive
solution here, just some guidance. Feel free to improve on it and add a
comment.&lt;/p&gt;

&lt;h3 id=&quot;settings&quot;&gt;Settings&lt;/h3&gt;

&lt;p&gt;I think I managed to get a decent looking settings tab, but I didn’t
find anything that would do it out of the box. Here’s a screenshot:&lt;/p&gt;

&lt;div style=&quot;text-align: center&quot;&gt;&lt;img src=&quot;/assets/misc/settings_liff.jpg&quot; /&gt;&lt;/div&gt;

&lt;p&gt;I’m not perfectly happy with the way I had to do it, so I won’t share it even if it does look fine.
However you can take a look at what I used for the checkbox
&lt;a href=&quot;http://www.cyberantics.net/toggle.html&quot;&gt;here&lt;/a&gt;. I found it in a comment
on &lt;a href=&quot;http://www.designcouch.com/home/why/2013/09/19/ios7-style-pure-css-toggle/&quot;&gt;a very interesting article&lt;/a&gt;.
Based on this I only had to change a couple of things (webkit-appearance, mostly)
to get it to work perfectly within my app.&lt;/p&gt;

&lt;h3 id=&quot;local-storage&quot;&gt;Local Storage&lt;/h3&gt;

&lt;p&gt;Here is a quick extract of my User model using the
&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/Guide/API/DOM/Storage#localStorage&quot;&gt;localStorage API&lt;/a&gt;
for persistence.&lt;/p&gt;

&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;javascript&quot;&gt;&lt;span class=&quot;nb&quot;&gt;window&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;User&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;

  &lt;span class=&quot;nx&quot;&gt;id&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;kd&quot;&gt;function&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(){&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;window&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;localStorage&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;getItem&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&amp;quot;liff_id&amp;quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
  &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;

  &lt;span class=&quot;nx&quot;&gt;setStatsMode&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;kd&quot;&gt;function&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;val&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;){&lt;/span&gt;
    &lt;span class=&quot;nb&quot;&gt;window&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;localStorage&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;setItem&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&amp;quot;liff_stats_mode&amp;quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;val&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
  &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;

  &lt;span class=&quot;c1&quot;&gt;// Way more things go here&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;If I were to complexify my data model, I would consider using
&lt;a href=&quot;https://github.com/AppGyver/steroids-plugins/tree/master/sqlite&quot;&gt;SQLite&lt;/a&gt;.&lt;/p&gt;

&lt;h2 id=&quot;deeper-into-steroidsjs-and-cordova&quot;&gt;Deeper Into SteroidsJS and Cordova&lt;/h2&gt;

&lt;h3 id=&quot;i18n&quot;&gt;I18n&lt;/h3&gt;

&lt;p&gt;I decided to create my app in both French and English, so I had to deal
with internationalization right away. I prefered handling it in the app
rather than creating multiple builds or other complicated solutions. The
performance problem was a non issue thanks to preloading (as explained
further below).&lt;/p&gt;

&lt;p&gt;Working with SteroidsJS means working with Cordova/PhoneGap. In this case the
&lt;a href=&quot;http://docs.phonegap.com/en/2.2.0/cordova_globalization_globalization.md.html&quot;&gt;globalization API&lt;/a&gt;.&lt;/p&gt;

&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;javascript&quot;&gt;&lt;span class=&quot;nb&quot;&gt;document&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;addEventListener&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&amp;quot;deviceready&amp;quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;kd&quot;&gt;function&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(){&lt;/span&gt;
  &lt;span class=&quot;nx&quot;&gt;$&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;document&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;).&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;ready&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;kd&quot;&gt;function&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(){&lt;/span&gt;
    &lt;span class=&quot;nx&quot;&gt;navigator&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;globalization&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;getPreferredLanguage&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;
      &lt;span class=&quot;kd&quot;&gt;function&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;language&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
        &lt;span class=&quot;nx&quot;&gt;localize&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;language&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;value&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
      &lt;span class=&quot;p&quot;&gt;},&lt;/span&gt;
      &lt;span class=&quot;kd&quot;&gt;function&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;()&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
        &lt;span class=&quot;nx&quot;&gt;localize&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&amp;quot;en&amp;quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
      &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
    &lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
  &lt;span class=&quot;p&quot;&gt;})&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;})&lt;/span&gt;

&lt;span class=&quot;kd&quot;&gt;function&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;localize&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;language&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;){&lt;/span&gt;
  &lt;span class=&quot;nx&quot;&gt;$&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&amp;quot;body&amp;quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;).&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;attr&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&amp;quot;id&amp;quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;language&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
  &lt;span class=&quot;nx&quot;&gt;$&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&amp;quot;*[data-t]&amp;quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;).&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;each&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;kd&quot;&gt;function&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(){&lt;/span&gt;
    &lt;span class=&quot;nx&quot;&gt;$&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;this&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;).&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;html&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;I18n&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;language&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;][&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;$this&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;data&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&amp;quot;t&amp;quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)])&lt;/span&gt;
  &lt;span class=&quot;p&quot;&gt;})&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;… meaning it will use my I18n object (very basic JSON) and replace the
content of any HTML element with a data-t attribute. The body ID is set
so I can load different images in CSS if needed.&lt;/p&gt;

&lt;p&gt;I find it very easy to use every day and it’s decent performance wise if you don’t have
too much text displayed.&lt;/p&gt;

&lt;h3 id=&quot;preloading&quot;&gt;Preloading&lt;/h3&gt;

&lt;p&gt;Preloading is great, it really speeds up everything.&lt;/p&gt;

&lt;p&gt;As explained above, I internationalized my whole app. Because of this I’d have a couple of miliseconds blink before the text appears.
Preloading views fixed this.&lt;/p&gt;

&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;javascript&quot;&gt;&lt;span class=&quot;kd&quot;&gt;var&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;someView&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;steroids&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;views&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;WebView&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&amp;quot;/views/settings/some_view.html&amp;quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
&lt;span class=&quot;kd&quot;&gt;var&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;anotherView&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;steroids&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;views&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;WebView&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&amp;quot;/views/settings/another_view.html&amp;quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;

&lt;span class=&quot;kd&quot;&gt;function&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;preload&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(){&lt;/span&gt;
  &lt;span class=&quot;nx&quot;&gt;someView&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;preload&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt;
  &lt;span class=&quot;nx&quot;&gt;anotherView&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;preload&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;I also wait a bit before actually preloading the views, so the first app load
time is reduced. I think it’s better to only preload when you really need
it in order to preserve ressources.&lt;/p&gt;

&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;javascript&quot;&gt;&lt;span class=&quot;nx&quot;&gt;setTimeout&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;preload&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;3000&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;Learn more about it on &lt;a href=&quot;http://academy.appgyver.com/categories/3/contents/19&quot;&gt;AppGyver’s website&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;&lt;em&gt;Note that this not fully functional in production on my app because of
an issue in Steroids JS where loading the navigation bar in a certain
way disrupts preloading. Because of this you will see some minor
blinking in some internal setting screens. It will be fixed soon :)&lt;/em&gt;&lt;/p&gt;

&lt;h3 id=&quot;getting-out-of-the-background&quot;&gt;Getting Out Of The Background&lt;/h3&gt;

&lt;p&gt;You might want to do something when the user reopens the app after
putting it in the background. Here’s how to do it:&lt;/p&gt;

&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;javascript&quot;&gt;&lt;span class=&quot;nb&quot;&gt;document&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;addEventListener&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&amp;quot;resume&amp;quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;kd&quot;&gt;function&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(){&lt;/span&gt;
  &lt;span class=&quot;c1&quot;&gt;// Do things&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;},&lt;/span&gt; &lt;span class=&quot;kc&quot;&gt;false&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;h3 id=&quot;communicate-between-views&quot;&gt;Communicate Between Views&lt;/h3&gt;

&lt;p&gt;Using &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/API/Window.postMessage&quot;&gt;the postMessage API&lt;/a&gt;
to communicate between views is the way to go.&lt;/p&gt;

&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;javascript&quot;&gt;&lt;span class=&quot;cm&quot;&gt;/* In the first view */&lt;/span&gt;
&lt;span class=&quot;nb&quot;&gt;window&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;postMessage&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;({&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;type&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&amp;quot;something_happened&amp;quot;&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;},&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&amp;quot;*&amp;quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;

&lt;span class=&quot;cm&quot;&gt;/* In the second view */&lt;/span&gt;
&lt;span class=&quot;nb&quot;&gt;window&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;addEventListener&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&amp;quot;message&amp;quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;kd&quot;&gt;function&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;msg&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
  &lt;span class=&quot;k&quot;&gt;if&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;msg&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;data&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;type&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;==&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&amp;quot;something_happened&amp;quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;){&lt;/span&gt;
  &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;})&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;&lt;em&gt;Right now there is an open issue when adding alerts in the event listener
as discussed [on the forum)[http://forums.appgyver.com/#!/steroids:sometimes-alerts-block-th)&lt;/em&gt;.&lt;/p&gt;

&lt;h2 id=&quot;check-out-the-result&quot;&gt;Check Out The Result!&lt;/h2&gt;

&lt;p&gt;Of course you don’t have to take my word for it, give my application a try !&lt;/p&gt;

&lt;p&gt;It’s called Liff and is
&lt;a href=&quot;https://itunes.apple.com/en/app/liff-understand-your-life/id834944345&quot;&gt;available on the appstore&lt;/a&gt;.
The goal is to give a &lt;a href=&quot;http://liffapp.io&quot;&gt;relevant way to get insights on ones day&lt;/a&gt; and
we put in extra efforts in order to create a pleasant experience with a solid design.&lt;/p&gt;

&lt;div style=&quot;text-align: center&quot;&gt;&lt;img src=&quot;/assets/misc/liff_screen.jpg&quot; /&gt;&lt;/div&gt;

&lt;p&gt;Clearly creating an hybrid app is easier than ever, but there is still a
lot of things to keep in mind when doing so. Projects like PhoneGap push
the ball in the right direction and I can’t wait to see what kind of
apps we’ll be creating in a few years!&lt;/p&gt;
</content>
   </entry>
  
 
  
   <entry>
     <title>The Problem With Peak</title>
     <link href="http://marcgg.com/blog/2013/11/12/peak-productivity"/>
     <updated>2013-11-12T00:00:00+01:00</updated>
     <id>http://marcgg.com/blog/2013/11/12/peak-productivity</id>
     <content type="html">&lt;p&gt;A couple of days ago I ran into a new application by &lt;a href=&quot;http://metalabdesign.com/&quot;&gt;MetaLab&lt;/a&gt; called
&lt;a href=&quot;http://www.usepeak.com/&quot;&gt;Peak&lt;/a&gt;. The application is supposed to be “the automated way to keep track
of what everyone is working on”. Basically you plug in a bunch of
services such as Gmail, Github or Basecamp and the app gives your an
overview of what’s going on as well as metrics about your team.
Since I’m a big fan of what MetaLab produces, I decided to check it out.&lt;/p&gt;

&lt;p&gt;I was very disappointed.&lt;/p&gt;

&lt;p&gt;Don’t get me wrong, the app looks amazing. The UI is slick and
everything is very well organized. My problem with it is that
the product seems misguided.&lt;/p&gt;

&lt;p&gt;I might be mistaken and I’m totally open to change my mind if proven wrong,
but I’ll try to demonstrate in this article why I feel this way.&lt;/p&gt;

&lt;h2 id=&quot;about-metrics&quot;&gt;About metrics&lt;/h2&gt;

&lt;p&gt;I love The Daily WTF and its cautionary tales about software development.
Some are just funny, but others tell a lot about what can actually happens
in some misguided companies. For instance
&lt;a href=&quot;http://thedailywtf.com/Articles/Productivity-20.aspx&quot;&gt;what happens when you start measuring productivity by the number of
commits&lt;/a&gt; or &lt;a href=&quot;http://thedailywtf.com/Articles/Measured_By_The_Line.aspx&quot;&gt;by the
number of lines of code&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;Spoiler: it’s a disaster.&lt;/p&gt;

&lt;p&gt;Some metrics are interesting, such as progress on the
deadlines, what’s the team velocity, how much time is spent on a
given task and so on. Peak kind of track this thanks to the Github and
Harvest integration. They tell me something and I can act based on them.
For instance I could assign more people to a hard task, organize the roadmap or plan for team growth.&lt;/p&gt;

&lt;p&gt;Others are not interesting, and downright noise. For instance I don’t
see how the number of emails sent is relevant.&lt;/p&gt;

&lt;p&gt;Let’s say Alice sent 100 emails this week and Bob sent 10. What does it
tell me? Is Alice really productive and Bob slacking off? Is Alice
wasting time sending emails and Bob is very efficient? I just know, with
absolutely no context, that emails were exchanged. It might even be internal
emails with jokes in them.&lt;/p&gt;

&lt;p&gt;Same thing with file editions. If Bob edited 20 files, what does that
tell me? Is he working a lot? Is he reorganizing his dropbox? Again,
this tells me nothing of value.&lt;/p&gt;

&lt;p&gt;I might be able to get something out of these if I spend time talking
with Alice and Bob, but then it defeats the purpose of the app.
So I ask, why even bother looking at metrics if I can’t do anything based on the information they provide?&lt;/p&gt;

&lt;div style=&quot;text-align: center&quot;&gt;&lt;img src=&quot;/assets/blog/peak_emails.png&quot; /&gt;&lt;/div&gt;

&lt;h2 id=&quot;activity--productivity&quot;&gt;Activity ≠ Productivity&lt;/h2&gt;

&lt;p&gt;I’m going to make some assumptions about the way Peak works. I
don’t have an access to the app, so I’m just going to make educated guesses
based on the commercial websites. If I’m wrong, please let me know.&lt;/p&gt;

&lt;p&gt;It seems like that, based on the employees’ activity, the app will output metrics for the
managers or team leads to read.&lt;/p&gt;

&lt;h3 id=&quot;ranking-employees&quot;&gt;Ranking employees&lt;/h3&gt;

&lt;div style=&quot;text-align: center&quot;&gt;&lt;img src=&quot;/assets/blog/graph_peak.png&quot; /&gt;&lt;/div&gt;

&lt;p&gt;On one side we have “red employees”. Color coding seems to indicate that these
are not performing well as red is always related to something negative.
On the other side we have “green employees”, these must be working well
because green is usually a good thing.&lt;/p&gt;

&lt;p&gt;Since the metrics used are not relevant, this ranking is biased and
unusable. It just creates random ranks based on nothing else but
activity.&lt;/p&gt;

&lt;p&gt;The value of an employee is not her activity but what she produces. If
Jane sent 0 emails about a new feature, but delivered on time and
customers were happy, then Jane did a good job even if there is no perceivable
activity within the Peak app.&lt;/p&gt;

&lt;p&gt;On the other end, if William doesn’t produce anything but sends of lot of emails
while messing around with files on the dropbox, he will be deemed
“productive”. Jane will be “red” and William will be “green” in the eyes
of management. This can’t lead to good things when you reward people
based on the wrong kind of metric.&lt;/p&gt;

&lt;p&gt;One could say that the intent isn’t to say that “red” employees are bad,
but seriously, who would like to be flagged as the “least active
employee” of the company ?&lt;/p&gt;

&lt;div style=&quot;text-align: center&quot;&gt;&lt;img src=&quot;/assets/blog/activity_peak.png&quot; /&gt;&lt;/div&gt;

&lt;h3 id=&quot;measuring-work-hours&quot;&gt;Measuring work hours&lt;/h3&gt;

&lt;p&gt;I personally think that measuring hours doesn’t help producing value. You just
know that your employees were here, but they could be reading Facebook
all day. Still this is the oldest and easiest form of management so it’s
not surprising that it’s the way it is in most places.&lt;/p&gt;

&lt;blockquote&gt;
  &lt;p&gt;What [banning remote working] reveals more than anything is that Yahoo management doesn’t have a clue as to who’s
actually productive and who’s not. In their blindness they’re reaching for the lowest form of
control a manager can assert: Ensuring butts in seats for eight hours between 9-5+. Though while
they can make people come to the office under the threat of termination, they most certainly
cannot make those same people motivated to do great work.&lt;/p&gt;

  &lt;p&gt;&lt;a href=&quot;http://twitter.com/dhh&quot;&gt;@dhh&lt;/a&gt; about &lt;a href=&quot;http://37signals.com/svn/posts/3453-no-more-remote-work-at-yahoo&quot;&gt;Yahoo banning remote work&lt;/a&gt;&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;Again, this rewards employees that are not necessarily the best ones.
Someone completing her tasks working a 40 hours week is probably
more valuable than another person working 100 hours a week to produce
the same output. One could also add that long hours are not sustainable
and that the employee working crazy hours is more prone to burn out,
which is not good for anyone - employer included.&lt;/p&gt;

&lt;blockquote&gt;
  &lt;p&gt;Working overtime sucks the spirit and motivation out of your team.
When your team becomes tired and demoralized they will get less work done,
not more, no matter how many hours are worked.&lt;/p&gt;

  &lt;p&gt;&lt;a href=&quot;http://www.extremeprogramming.org/rules/overtime.html&quot;&gt;Extreme Programming Manifesto&lt;/a&gt;&lt;/p&gt;
&lt;/blockquote&gt;

&lt;div style=&quot;text-align: center&quot;&gt;&lt;img src=&quot;/assets/blog/brandon.png&quot; /&gt;&lt;/div&gt;

&lt;p&gt;Note that this applies mostly for qualified workers, but Peak seems to
be targeted to startups where there are a lot of engineers, product
managers or designers.&lt;/p&gt;

&lt;h2 id=&quot;automated-micromanagement&quot;&gt;Automated Micromanagement&lt;/h2&gt;

&lt;p&gt;A lot of people throw the term micromanagement around, so I’ll define
what I believe is micromanagement before continuing.&lt;/p&gt;

&lt;blockquote&gt;
  &lt;p&gt;In business management, micromanagement is a management style whereby a manager
closely observes or controls the work of subordinates or employees.
Micromanagement generally has a negative connotation.&lt;/p&gt;

  &lt;p&gt;&lt;a href=&quot;http://en.wikipedia.org/wiki/Micromanagement&quot;&gt;Wikipedia&lt;/a&gt;&lt;/p&gt;
&lt;/blockquote&gt;

&lt;blockquote&gt;
  &lt;p&gt;micromanage: to manage especially with excessive control or attention to details&lt;/p&gt;

  &lt;p&gt;&lt;a href=&quot;http://www.merriam-webster.com/dictionary/micromanage&quot;&gt;Merriam Webster&lt;/a&gt;&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;To me knowing what tasks someone is working
on and assuring that it is delivered on time is management. Checking how
many emails are sent is micromanagement, checking a detail that is irrelevant unless
your job description is to write and send as many emails as possible.&lt;/p&gt;

&lt;p&gt;Some features in Peak encourage micromanagement even if the automated
tweet when sharing from their website says otherwise.&lt;/p&gt;

&lt;div style=&quot;text-align: center&quot;&gt;&lt;img src=&quot;/assets/blog/micro.png&quot; /&gt;&lt;/div&gt;

&lt;p&gt;To me it feels that the solution here would be to stop micromanaging
altogether and not provide an app to make it easier! If, as a manager,
I have the need to interrupt my team every hours to know what they are
doing, I must be doing something wrong.&lt;/p&gt;

&lt;p&gt;There are no perfect solution for this and it’s a really hard subject.
I’m not trying to solve this issue here, there are a lot of smart people
theorizing about it out there. I just want to point out that making it
automated doesn’t make it something else than some kind of less
intrusive micromanagement.&lt;/p&gt;

&lt;h2 id=&quot;still-a-promising-app&quot;&gt;Still a promising app&lt;/h2&gt;

&lt;h3 id=&quot;risks&quot;&gt;Risks&lt;/h3&gt;

&lt;p&gt;It seems that Peak has a lot of potential, but the team working on it should
take all this into consideration. I’m sure that they mean well and,
in an ideal world, people will take the metrics as they
are - possibly flawed outputs of a complex process aimed at creating
value for the company. No one will consider the “red employee” factor.
No one will game the system.&lt;/p&gt;

&lt;p&gt;Except we’re not in a perfect world.&lt;/p&gt;

&lt;p&gt;Managers will abuse it, employees will game it.&lt;/p&gt;

&lt;p&gt;Of course this will not happen everywhere! There are some great companies that know how
to deal with these subjects, but it’s very likely that some will use this for “evil”.&lt;/p&gt;

&lt;h3 id=&quot;what-id-do&quot;&gt;What I’d do&lt;/h3&gt;

&lt;p&gt;I’m sure they have thought about it, and I’m not a product guy. But I
don’t like criticizing without giving ideas on how to improve the
situation.&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;Get rid of employee ranking, nothing good can come out of it&lt;/li&gt;
  &lt;li&gt;Remove Gmail integration, this is not relevant&lt;/li&gt;
  &lt;li&gt;Hour tracking should not judge people (red vs green) and should just be a neutral data&lt;/li&gt;
  &lt;li&gt;Make some things active, like allowing the employees to input what they are working on&lt;/li&gt;
  &lt;li&gt;Do not track hours if you don’t bill by the hour (with harvest for instance)&lt;/li&gt;
  &lt;li&gt;Keep up the good work with the UI. Loving it.&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&quot;hopes&quot;&gt;Hopes&lt;/h3&gt;

&lt;p&gt;I really hope that people will use this product for good (helping companies
create value and protect employees from interruptions) and not evil
(micromanagement).&lt;/p&gt;
</content>
   </entry>
  
 
  
   <entry>
     <title>Enough With The Trolls</title>
     <link href="http://marcgg.com/blog/2013/11/05/enough-with-the-language-trolls"/>
     <updated>2013-11-05T00:00:00+01:00</updated>
     <id>http://marcgg.com/blog/2013/11/05/enough-with-the-language-trolls</id>
     <content type="html">&lt;p&gt;Every week I see people arguing over languages, frameworks, hosting
solutions, architectural patterns… and every week it’s pointless.
I cringe when, interviewing candidates for a Rails developer position,
I hear something along the lines of “Hey, PHP is so bad, AMIRIGHT? *nudge*
*nudge*”. So much energy wasted into this.&lt;/p&gt;

&lt;p&gt;Because of that I felt like I should just write a post I can link people to when
they start talking about this, so here we go!&lt;/p&gt;

&lt;h2 id=&quot;a-mean-to-an-end&quot;&gt;A Mean To An End&lt;/h2&gt;

&lt;p&gt;The thing to understand is that languages and frameworks are just means
to an end. They are here to help us create software. If they accomplish
this, it’s a success. Everything else is a question of context and preferences.&lt;/p&gt;

&lt;p&gt;It’d be nice if there was a solution clearly superior to every other, with absolutely
no drawbacks whatsoever, but let’s be pragmatic here. Some languages are
slower, have complex syntax, do not scale well, have a small community,
use a lot of memory… so in the end it’s a mater of picking what would
work.&lt;/p&gt;

&lt;div style=&quot;width:560px; margin: auto&quot;&gt;
&lt;object width=&quot;560&quot; height=&quot;315&quot;&gt;&lt;param name=&quot;movie&quot; value=&quot;http://www.youtube.com/v/b2F-DItXtZs?version=3&amp;amp;hl=fr_FR&amp;amp;rel=0&quot; /&gt;&lt;param name=&quot;allowFullScreen&quot; value=&quot;true&quot; /&gt;&lt;param name=&quot;allowscriptaccess&quot; value=&quot;always&quot; /&gt;&lt;embed src=&quot;http://www.youtube.com/v/b2F-DItXtZs?version=3&amp;amp;hl=fr_FR&amp;amp;rel=0&quot; type=&quot;application/x-shockwave-flash&quot; width=&quot;560&quot; height=&quot;315&quot; allowscriptaccess=&quot;always&quot; allowfullscreen=&quot;true&quot; /&gt;&lt;/object&gt;
&lt;/div&gt;

&lt;h2 id=&quot;creating-a-new-product&quot;&gt;Creating A New Product&lt;/h2&gt;

&lt;p&gt;Let’s say I only knew PHP and MySQL and I wanted to create a very simple
website to test out an idea. No need for scalability, maintanability,
performances or even security. Just a simple prototype.&lt;/p&gt;

&lt;p&gt;I would probably use PHP and MySQL and that would be fine, because here the decision
factor is speed and simplicity.At that point I want to build something .
This doesn’t mean that using ElasticSearch wouldn’t be cool or that MySQL is
superior. It’s just a set of tools fitting my needs.&lt;/p&gt;

&lt;p&gt;Fast forward and I got very good feedbacks on the prototype. Maybe then I’d want to
improve on what I already have by refactoring it using a PHP framework like Symfony. I
could also rewrite it using NodeJS if I expect a lot of concurency.
Maybe if I met a really good Go developer willing to help me on this
project I could use Go.&lt;/p&gt;

&lt;p&gt;What I’m trying to say here is that there is no “NODEJS IS BETTER THAN PHP SO USE THIS,
YOU ARE THE WORST PERSON IF YOU USE THIS AND SHOULD BE ASHAMED”.&lt;/p&gt;

&lt;p&gt;If my project fails because I spent 2 months learning NodeJS, then NodeJS
was a bad choice. If my whole team is depressed because I enforced
using Rails instead of Django, then Rails was a bad choice.&lt;/p&gt;

&lt;h2 id=&quot;the-side-project&quot;&gt;The Side Project&lt;/h2&gt;

&lt;p&gt;There is never a definitive answer to what technology one should use, just different situations.&lt;/p&gt;

&lt;p&gt;If I start a &lt;a href=&quot;/blog/2012/01/09/start-working-on-your-side-project/&quot;&gt;side project&lt;/a&gt; to
learn cool new stuff, then it wouldn’t make sense to use what I already know.
In this case my whole technical knowledge is a bad choice for this project.&lt;/p&gt;

&lt;p&gt;This is simply because the goal here is different, so my choices need to
adapt.&lt;/p&gt;

&lt;h2 id=&quot;to-sum-it-up&quot;&gt;To Sum It Up&lt;/h2&gt;

&lt;blockquote&gt;
  &lt;p&gt;&amp;quot;Don&#39;t define yourself by hating other things. Define yourself by building cool stuff.&amp;quot;&lt;/p&gt;

  &lt;p&gt;&lt;a href=&quot;http://twitter.com/steveklabnik&quot;&gt;Steve Klabnik&lt;/a&gt; at &lt;a href=&quot;http://www.dotrb.eu/&quot;&gt;DotRB&lt;/a&gt;&lt;/p&gt;
&lt;/blockquote&gt;
</content>
   </entry>
  
 
  
   <entry>
     <title>Mixing Languages</title>
     <link href="http://marcgg.com/blog/2013/10/29/mixing-languages"/>
     <updated>2013-10-29T00:00:00+01:00</updated>
     <id>http://marcgg.com/blog/2013/10/29/mixing-languages</id>
     <content type="html">&lt;p&gt;I was born in France and lived there for the most part of my life. I have
the &lt;a href=&quot;http://bit.ly/17UlpMx&quot;&gt;frenchiest of names&lt;/a&gt;.
I’m not big into striped shirts, but I could easily switch to a cheese-only
diet if given the opportunity.&lt;/p&gt;

&lt;p&gt;It’s also fair to say that I love the French language.
I think that using it well enough can produce
&lt;a href=&quot;http://www.amazon.fr/L%C3%A9tranger-Albert-Camus/dp/2070360024&quot;&gt;amazing novels&lt;/a&gt;,
&lt;a href=&quot;http://www.youtube.com/watch?v=rslShTbqNbo&quot;&gt;songs&lt;/a&gt;
or just cool sounding conversations.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/assets/blog/french.png&quot; alt=&quot;Actual Google results&quot; style=&quot;margin:20px auto; display: block&quot; /&gt;
&amp;lt;div class=&quot;image_notes&quot;&amp;gt;Actual Google Search results page&amp;lt;/div&amp;gt;&lt;/p&gt;

&lt;p&gt;A few years back I went to live in the US. At that point I knew some
English from school, but never actually used it in real life. Also, my accent was
terrible. After a while I got better at it even if I never
got the accent quite down. However to my amusement I could pass for American
with French tourists asking for directions in Times Square.&lt;/p&gt;

&lt;p&gt;So really I think that the English language is very interesting as well. I wouldn’t say that I
love it as much as I love French, but it’s a close second. We can say
that it’s because I’m annoyed about the fact that I can’t be perfectly billingual.&lt;/p&gt;

&lt;p&gt;For the record, I got back to Paris in 2009 so I’ve lost a lot, so
please bear with my written English on this one. I’m sure talking about
mixing languages while writing poorly constructed sentences will sound
silly at some point, but hey.&lt;/p&gt;

&lt;h2 id=&quot;mixing&quot;&gt;Mixing&lt;/h2&gt;

&lt;p&gt;The thing is during my time abroad, I started to mix the two languages in my
head. In some cases a word in French would come up, sometimes in
English, and then, depending on the situation, I would translate it
approprietly.&lt;/p&gt;

&lt;p&gt;I’ve been told that you know you can speak a language when you dream in that language.
To be honest, while I can sometimes remember the subject of my dreams, I never know what language is being spoken.
Same goes for articles that I read online, I’ll remember the facts but
often forget if I read them in French or not. Of course right after I’ll
still have some memory of it, but a few months later some information would
stick but the language behind it gets blurry if there wasn’t some
memorable quote in the text.&lt;/p&gt;

&lt;p&gt;While staying in New York I met people that would speak English but also
some French. This was really a lot of fun since we could just switch
back and forth between languages as we felt, picking the most fitting
words to communicate. The novelty of doing that wearing off, I realized that it was
really the perfect way to go for me. In each languages there are
concepts that you can’t express in the other… or at least not a
specifically.&lt;/p&gt;

&lt;p&gt;For instance let’s take “whimsical”. &lt;a href=&quot;http://www.wordreference.com/enfr/whimsical&quot;&gt;WordReference&lt;/a&gt;
would say “Fantasque”, “Capricieux” or “Saugrenu”. To me it doesn’t
work, this is not what “whimsical” is at all. There is just no way to
capture the essence of this word in French.&lt;/p&gt;

&lt;h2 id=&quot;translating&quot;&gt;Translating&lt;/h2&gt;

&lt;p&gt;Here is a conversation I see myself having all the time:&lt;/p&gt;

&lt;blockquote&gt;
  &lt;p&gt;« Hey! How do you translate X in French/English ?&lt;/p&gt;

  &lt;p&gt;- You don’t !»&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;And I’m not just being annoying. This is quite true that you wouldn’t say
some things this way. Languages tend to lead you in a direction when it comes to
constructing sentences and sometimes even your reflection changes when
thinking with a given language. If you write something in X and translate to Y,
you lose the soul of the text.&lt;/p&gt;

&lt;p&gt;Obviously you can do some clever translating, but without moving huge blocks
of ideas around, it won’t sound good.&lt;/p&gt;

&lt;h2 id=&quot;back-in-france&quot;&gt;Back In France&lt;/h2&gt;

&lt;p&gt;When I got back to France I kept this habit going with some friends
of mine that could follow such a way of speaking.&lt;/p&gt;

&lt;p&gt;The problem was with the others. When unable to use English to complement my French, I would end
up stumbling on words, losing track of what I wanted to do… and
overall feeling like I couldn’t even speak French! Sometimes it could
get annoying because France loves to make fun of people mixing
languages. The perception of such a person is either that the guy is really smug or just an idiot.&lt;/p&gt;

&lt;p&gt;As time passed, my English got worse since I didn’t get any practice, but
I still had this mixing issue. This felt weird because I didn’t get to speak
English everyday anymore, but if you look at my situation it makes
sense. My job as a developer requires reading a lot of documentation
always written in English with terms that don’t even exist in French.
Once this is done I get to write code, bug reports, emails… all that in English.&lt;/p&gt;

&lt;p&gt;While I like listening to
&lt;a href=&quot;http://www.europe1.fr/MediaCenter/Emissions/Au-coeur-de-l-histoire/&quot;&gt;podcasts&lt;/a&gt;
in &lt;a href=&quot;http://www.franceculture.fr/emission-les-nouveaux-chemins-de-la-connaissance&quot;&gt;French&lt;/a&gt;,
I mostly find &lt;a href=&quot;http://www.radiolab.org/&quot;&gt;my&lt;/a&gt; &lt;a href=&quot;http://www.thisamericanlife.org/&quot;&gt;content&lt;/a&gt;
&lt;a href=&quot;http://continuecast.podomatic.com/&quot;&gt;in&lt;/a&gt; &lt;a href=&quot;http://themoth.org/about/programs/the-moth-podcast&quot;&gt;English&lt;/a&gt;.
Same goes for reading, I like novels written in French, but most of the
blog posts or in-depth articles that I read will be in English. Same
logic goes for movies, shows, songs…&lt;/p&gt;

&lt;p&gt;All this seems to keep the confusion alive, even if I don’t speak the
language.&lt;/p&gt;

&lt;h2 id=&quot;who-cares&quot;&gt;Who Cares&lt;/h2&gt;

&lt;p&gt;In the end this isn’t a real problem for me. I’d much rather be
understood by more people than be perfectly eloquent for less people.&lt;/p&gt;

&lt;p&gt;It has downsides, but it often consists in me having to repeat words again
in some situations. I manage to mostly use French words and only add English
when there is no good translation available. If the person I’m talking
to is not confortable with this I can shift to speaking only French -
I’ll just take a couple more seconds to translate in some cases.&lt;/p&gt;

&lt;p&gt;Maybe sometimes people will think that I’m an idiot, or that I’m smug… but I don’t mind.&lt;/p&gt;

&lt;p&gt;I grew to like the process of finding the best way to say something from two
sets of words instead of one. It allows me to expand the way I can
express a concept, convey an idea or construct a sentence.&lt;/p&gt;

&lt;p&gt;… and if they get to do it in &lt;a href=&quot;http://www.youtube.com/watch?v=crXVMTHZI1Q&quot;&gt;Quebec&lt;/a&gt;
I don’t see why I couldn’t either!&lt;/p&gt;
</content>
   </entry>
  
 
  
   <entry>
     <title>My First Impressions of AppGyver's Steroids.js</title>
     <link href="http://marcgg.com/blog/2013/08/29/appgyver-steroids-iphone-hybrid-javascript"/>
     <updated>2013-08-29T00:00:00+02:00</updated>
     <id>http://marcgg.com/blog/2013/08/29/appgyver-steroids-iphone-hybrid-javascript</id>
     <content type="html">&lt;p&gt;&lt;em&gt;&lt;strong&gt;Update 9 April 2014&lt;/strong&gt;: Since this post, I released a &lt;a href=&quot;http://liffapp.io&quot;&gt;quantified self app&lt;/a&gt;
using SteroidsJs and 
wrote another article with &lt;a href=&quot;/blog/2014/04/09/phonegap-steroids-hybrid-native-app-tips/&quot;&gt;tips &amp;amp; tricks to know when building a
Steroids.js app&lt;/a&gt; (or any hybrid app really).
300ms delay, overscroll, text rendering, 1px borders, local storage, performances, i18n … it’s all there!&lt;/em&gt;&lt;/p&gt;

&lt;p&gt;As I wrote before, I like the idea of developing mobile applications. I
don’t plan to focus exclusively on it, but having an iPhone app as a pet
project seems pretty cool and creating something for Android could be
interesting as well in the future.&lt;/p&gt;

&lt;p&gt;The problem is that, like a lot of people, I don’t enjoy the
experience of working with Objective C
and XCode. I thought I found a solution with &lt;a href=&quot;http://www.rubymotion.com/&quot;&gt;RubyMotion&lt;/a&gt;,
I even &lt;a href=&quot;/blog/2012/10/22/custom-slider-ios-rubymotion/&quot;&gt;wrote about it&lt;/a&gt;…
but I was mistaken. While RubyMotion is a great project, it’s not for me.&lt;/p&gt;

&lt;p&gt;Yes you get to write Ruby code, but that’s pretty much it. You still
have to learn about the SDK to even start to create something simple.
This can be perfectly fine for some with more experience or wanting to
get experience with the iOS SDK, but I just want to build something.
Overall it felt like using Ruby just complexified development for me. I couldn’t
use code snippets or the main iPhone resources available, and RubyMotion lacked
documentation and tutorials. I got something done, but it wasn’t good enough and I
never released anything.&lt;/p&gt;

&lt;p&gt;I tried again a couple of months later with an idea more simple: create a web view wrapper using
RubyMotion and do everything inside a single page HTML 5 app. Sadly the
lack of native UI made everything feel a bit off, so I scrapped that as well.
I thought about using &lt;a href=&quot;http://phonegap.com/&quot;&gt;PhoneGap&lt;/a&gt;
but I figured that the app would end up with the same problem.&lt;/p&gt;

&lt;p&gt;Fast forward 6 months and I read that AppGyver released
&lt;a href=&quot;http://www.appgyver.com/steroids&quot;&gt;Steroids.js&lt;/a&gt;, an solution
promising to
“&lt;a href=&quot;http://techcrunch.com/2013/08/20/steroids-js-bridges-the-performance-gap-between-phonegap-and-native-apps-by-using-native-ui-components-and-animations/&quot;&gt;Bridge The Performance Gap Between PhoneGap And Native Apps By Using Native UI Components And Animations&lt;/a&gt;”.
I immediatly thought that it was what I wanted! The next day AppGyver
announced that Steroids would be
&lt;a href=&quot;http://appgyver.blogspot.fr/2013/08/steroids-is-now-free-for-everyone.html&quot;&gt;free for everyone&lt;/a&gt;,
so I decided to give it a try and write about it here.&lt;/p&gt;

&lt;div style=&quot;text-align: center&quot;&gt;&lt;img src=&quot;/assets/blog/steroids.png&quot; /&gt;&lt;/div&gt;

&lt;p&gt;Before reading more, please take this article as it is: feedback on this new solution to create mobile apps.
I’m not trying to  educate anyone on how to do things or evangelize. I
only played with it for a few days and haven’t put anything in
production using Steroids. I also know I’m making a lot of mistakes because, while
I’m a decent web developer, I’m not really a great mobile developer.&lt;/p&gt;

&lt;p&gt;Alright.&lt;/p&gt;

&lt;h2 id=&quot;installation&quot;&gt;Installation&lt;/h2&gt;

&lt;p&gt;AppGiver provides a pretty good documentation. It’s far from complete, but
what is there is well written and very clear. To set my development
environment I followed their &lt;a href=&quot;http://academy.appgyver.com/courses/2/lessons/32&quot;&gt;tutorial&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;Overall everything went smoothly aside from a couple of gotchas very
easy to figure out.&lt;/p&gt;

&lt;p&gt;For instance Steroids uses an older version of node.js so I had to set up &lt;a href=&quot;https://github.com/creationix/nvm&quot;&gt;nvm&lt;/a&gt;
in order to get it to run. The thing is that nvm creates a
.bash_profile, but since I use &lt;a href=&quot;http://www.zsh.org/&quot;&gt;zsh&lt;/a&gt; it wouldn’t pick up the correct path
automatically as promised. Moving the concerned code to .zshrc fixed
that.&lt;/p&gt;

&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;bash&quot;&gt;&lt;span class=&quot;o&quot;&gt;[[&lt;/span&gt; -s /Users/marcgg/.nvm/nvm.sh &lt;span class=&quot;o&quot;&gt;]]&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;amp;&amp;amp;&lt;/span&gt; . /Users/marcgg/.nvm/nvm.sh &lt;span class=&quot;c&quot;&gt;# This loads NVM&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;nvm requires that you specify the version you need in order for you to
access the steroids command. It’s similar to what rvm does, but you still have to think about it.&lt;/p&gt;

&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;bash&quot;&gt;nvm use 0.8.0
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;h2 id=&quot;first-impression&quot;&gt;First Impression&lt;/h2&gt;

&lt;p&gt;After completing the installation, I executed the script to scaffold a new application,
downloaded the scanner app, started the application, scanned the QR code and …
Wow! It’s really neat!
The application ran on my iPhone just a few minutes after starting
working.&lt;/p&gt;

&lt;p&gt;By the way, if you run the Steroids connect script with the watch option it will reload the app
automatically on every device connected for maximum effect.&lt;/p&gt;

&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;bash&quot;&gt;steroids connect --watch
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;h2 id=&quot;organizing-files&quot;&gt;Organizing Files&lt;/h2&gt;

&lt;p&gt;Right away you don’t really get a full structured project.
To do so you have to run some generators.
The default approach is to give you free
choice over what you want to do about file organisation. Personnally I
would have prefered it was the other way around, giving me the structure
but allowing me to remove it… or maybe an option in the scaffolding
script.&lt;/p&gt;

&lt;h2 id=&quot;building-the-ui&quot;&gt;Building The UI&lt;/h2&gt;

&lt;h3 id=&quot;drawer&quot;&gt;Drawer&lt;/h3&gt;

&lt;p&gt;Steroids comes with a very cool “native” Drawer, meaning that it will
display a webview on the side of your app with a native animation. The
&lt;a href=&quot;http://academy.appgyver.com/courses/4/lessons/44&quot;&gt;tutorial&lt;/a&gt; explaining
that got me excited so I decided that my app would have a drawer!&lt;/p&gt;

&lt;p&gt;Getting it to work was almost as simple as going:&lt;/p&gt;

&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;javascript&quot;&gt;&lt;span class=&quot;kd&quot;&gt;var&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;drawer&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;steroids&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;views&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;WebView&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&amp;quot;/views/drawer/show.html&amp;quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
&lt;span class=&quot;kd&quot;&gt;function&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;openDrawer&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
  &lt;span class=&quot;nx&quot;&gt;steroids&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;drawers&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;show&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;drawer&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;And then create a webview with a link to open it.&lt;/p&gt;

&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;html&quot;&gt;&lt;span class=&quot;nt&quot;&gt;&amp;lt;div&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;ontouchend=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&amp;quot;openDrawer()&amp;quot;&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&amp;gt;&lt;/span&gt;Open&lt;span class=&quot;nt&quot;&gt;&amp;lt;/div&amp;gt;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;Doing this will work, but you’d prefer to have a gesture to open and
close the drawer. This is handled by Steroids as well, but this
breaks gestures inside your webview. It’s also a bit more complicated to
have the drawer on some screens and not others.&lt;/p&gt;

&lt;p&gt;After a few hours playing with it and talking with
&lt;a href=&quot;http://twitter.com/jeclic&quot;&gt;a real iOS developer&lt;/a&gt;
(“you have a drawer for your app with 4 screens???”) I decided that it wasn’t really the
UI I needed for this project.&lt;/p&gt;

&lt;h3 id=&quot;natives-navs--tabs&quot;&gt;Natives Navs &amp;amp; Tabs&lt;/h3&gt;

&lt;p&gt;The next day I dropped everything and went for a more classical
approach with tabs at the bottom and a nav bar up top. It turned out it was way simpler and
actually pretty straightforward to do with Steroids.&lt;/p&gt;

&lt;p&gt;Adding the following in a controller gives you a nav bar:&lt;/p&gt;

&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;javascript&quot;&gt;&lt;span class=&quot;nx&quot;&gt;steroids&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;view&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;navigationBar&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;show&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&amp;quot;My Nav Bar&amp;quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;This added in the config gives you a tab menu:&lt;/p&gt;

&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;javascript&quot;&gt;&lt;span class=&quot;nx&quot;&gt;steroids&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;config&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;statusBar&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;enabled&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;kc&quot;&gt;false&lt;/span&gt;

&lt;span class=&quot;nx&quot;&gt;steroids&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;config&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;tabBar&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;tabs&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;
 &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
   &lt;span class=&quot;nx&quot;&gt;title&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&amp;quot;Fun&amp;quot;&lt;/span&gt;
   &lt;span class=&quot;nx&quot;&gt;icon&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&amp;quot;icons/myicon@2x.png&amp;quot;&lt;/span&gt;
   &lt;span class=&quot;nx&quot;&gt;location&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&amp;quot;http://localhost/views/fun/have_it.html&amp;quot;&lt;/span&gt;
 &lt;span class=&quot;p&quot;&gt;},&lt;/span&gt;
 &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
   &lt;span class=&quot;nx&quot;&gt;title&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&amp;quot;Excitement&amp;quot;&lt;/span&gt;
   &lt;span class=&quot;nx&quot;&gt;icon&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&amp;quot;icons/myothericon@2x.png&amp;quot;&lt;/span&gt;
   &lt;span class=&quot;nx&quot;&gt;location&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&amp;quot;http://localhost/views/excitement/amazing.html&amp;quot;&lt;/span&gt;
 &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;You then get access to ways to customize colors for everything as
explained &lt;a href=&quot;http://academy.appgyver.com/courses/4/lessons/50&quot;&gt;here&lt;/a&gt;,
and… tadaaaa:&lt;/p&gt;

&lt;div style=&quot;text-align: center&quot;&gt;&lt;img src=&quot;/assets/blog/app_steroids.jpg&quot; /&gt;&lt;/div&gt;

&lt;p&gt;The text displayed is contained in the have_it.html file placed in the
project.&lt;/p&gt;

&lt;p&gt;It is really simple and, even if this was written with javascript, it
looks native. The result feels really right and it didn’t take long to
create.&lt;/p&gt;

&lt;p&gt;There are some limits to this. For instance, while you can add buttons
in the nav bar, you can’t add icons yet. I’m sure they will improve on
it, but for customization you don’t have as much options as going full
native.&lt;/p&gt;

&lt;h3 id=&quot;login-modal&quot;&gt;Login Modal&lt;/h3&gt;

&lt;p&gt;The application I’m building requires that you login. At first I wanted
to have two different webviews and shift between disconnected and
connected mode, but it got complicated because of the tab menu… so in
the end I just put a modal window that pops up when the user is not
logged in. It’s not perfect but it gets the job done for now.&lt;/p&gt;

&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;javascript&quot;&gt;&lt;span class=&quot;kd&quot;&gt;var&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;webView&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;steroids&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;views&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;WebView&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&amp;quot;../views/login/show.html&amp;quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
&lt;span class=&quot;nx&quot;&gt;steroids&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;modal&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;show&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;webView&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;Hiding it is pretty simple as well:&lt;/p&gt;

&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;javascript&quot;&gt;&lt;span class=&quot;nx&quot;&gt;steroids&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;modal&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;hide&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;h3 id=&quot;the-layer-stack&quot;&gt;The Layer Stack&lt;/h3&gt;

&lt;p&gt;A cool feature provided by Steroids is the layer stack.&lt;/p&gt;

&lt;p&gt;This gives you a navigation between independent webviews within your
application. You just display a single HTML page and can organize all
your files into a tree structure in a pretty straightforward fashion.
Steroids also handles adding and removing views so that it feels native.&lt;/p&gt;

&lt;p&gt;They explain it better than me in their tutorials,
&lt;a href=&quot;http://academy.appgyver.com/courses/15/lessons/10&quot;&gt;Enhancing Your App with Native UI&lt;/a&gt;
and
&lt;a href=&quot;http://academy.appgyver.com/courses/4/lessons/12&quot;&gt;Layer stack&lt;/a&gt;.&lt;/p&gt;

&lt;h2 id=&quot;some-random-features&quot;&gt;Some Random Features&lt;/h2&gt;

&lt;h3 id=&quot;session&quot;&gt;Session&lt;/h3&gt;

&lt;p&gt;I needed to have some kind of session. I knew about local storage but
wasn’t sure how to go about it, so I quickly hacked something based on
cookies.&lt;/p&gt;

&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;javascript&quot;&gt;&lt;span class=&quot;nb&quot;&gt;window&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;User&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
  &lt;span class=&quot;nx&quot;&gt;setSession&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;kd&quot;&gt;function&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;val&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;){&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;this&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;createCookie&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&amp;quot;my_session&amp;quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;val&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;20&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
  &lt;span class=&quot;p&quot;&gt;},&lt;/span&gt;

  &lt;span class=&quot;nx&quot;&gt;logout&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;kd&quot;&gt;function&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(){&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;this&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;eraseCookie&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&amp;quot;my_session&amp;quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
  &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;

  &lt;span class=&quot;c1&quot;&gt;// And so on ...&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;It works well, but I don’t think this is the best way to go.&lt;/p&gt;

&lt;h3 id=&quot;calling-external-api&quot;&gt;Calling External API&lt;/h3&gt;

&lt;p&gt;My application will work with an API that I am also developing.
Overall it’s just like developing a website: you get jQuery or whatever
library you want and make calls and display the result on the page.&lt;/p&gt;

&lt;p&gt;It might seem obvious, but it is still good to mention that the API will need to accept
&lt;a href=&quot;http://en.wikipedia.org/wiki/Cross-origin_resource_sharing&quot;&gt;cross-origin resource sharing&lt;/a&gt;
for the calls to work.&lt;/p&gt;

&lt;p&gt;I use Rails, and the quick way to do that was to use the
&lt;a href=&quot;https://github.com/cyu/rack-cors&quot;&gt;rack-cors gem&lt;/a&gt;
and set it up as such:&lt;/p&gt;

&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;ruby&quot;&gt;&lt;span class=&quot;n&quot;&gt;config&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;middleware&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;use&lt;/span&gt; &lt;span class=&quot;no&quot;&gt;Rack&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;::&lt;/span&gt;&lt;span class=&quot;no&quot;&gt;Cors&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;do&lt;/span&gt;
  &lt;span class=&quot;n&quot;&gt;allow&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;do&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;origins&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;&amp;#39;*&amp;#39;&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;resource&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;&amp;#39;*&amp;#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;ss&quot;&gt;headers&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;ss&quot;&gt;:any&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;methods&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;ss&quot;&gt;:get&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;ss&quot;&gt;:post&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;ss&quot;&gt;:options&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;]&lt;/span&gt;
  &lt;span class=&quot;k&quot;&gt;end&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;end&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;h2 id=&quot;workflow&quot;&gt;Workflow&lt;/h2&gt;

&lt;h3 id=&quot;the-scanner-app&quot;&gt;The Scanner App&lt;/h3&gt;

&lt;p&gt;You can download an application on the
&lt;a href=&quot;https://itunes.apple.com/us/app/appgyver-scanner/id575076515?mt=8&quot;&gt;appstore&lt;/a&gt;,
scan a QR code with it, and it will take you straight to your application. This
is great to show previews to people and iterate quickly and saves time
compared to solution like TestFlight that requires you to upload a
build.&lt;/p&gt;

&lt;p&gt;Of course it has limitation as your app runs inside the scanner
application, but in some cases it can be enought if it’s just about
displaying the latest modifications, checking the design or proofreading
the wording.&lt;/p&gt;

&lt;h3 id=&quot;creating-a-build&quot;&gt;Creating a Build&lt;/h3&gt;

&lt;p&gt;AppGyver provides a solution to build in the cloud. You need to spend
some time setting it up, but once it’s done a new build can be scheduled
in the click of a button.&lt;/p&gt;

&lt;div style=&quot;text-align: center&quot;&gt;&lt;img src=&quot;/assets/blog/cloudbuild.jpg&quot; /&gt;&lt;/div&gt;

&lt;p&gt;This works fine, but still needs some polishing, mainly on ways to get an
ETA for the build. Right now I’ve seen build times varying between 12
hours and a couple of minutes. Apparently
&lt;a href=&quot;http://forums.appgyver.com/#!/steroids#how-long-does-a-adhoc-build&quot;&gt;it should be better moving forward&lt;/a&gt;,
so I’ll wait and see.&lt;/p&gt;

&lt;h2 id=&quot;the-documentation--community&quot;&gt;The Documentation &amp;amp; Community&lt;/h2&gt;

&lt;p&gt;The documentation provided by Appgyver is very clean, but could use some
more tutorials and examples. This was to be expected since the project has only been
released very recently.&lt;/p&gt;

&lt;p&gt;It’s worth mentioning that the team is very responsive on
&lt;a href=&quot;https://twitter.com/appgyver&quot;&gt;twitter&lt;/a&gt; or the
&lt;a href=&quot;http://developers.appgyver.com/forums&quot;&gt;forums&lt;/a&gt;. For instance I was confused about
customizing colors, so I asked on the site. The next day they would have
put up a new tutorial with concrete examples. Pretty sweet.&lt;/p&gt;

&lt;p&gt;The community is small right now, and looking online for documentation
or blog posts will yield absolutely no results. Hopefully this will
improve.&lt;/p&gt;

&lt;h2 id=&quot;wrapping-it-up&quot;&gt;Wrapping It Up&lt;/h2&gt;

&lt;p&gt;I think that this is a very interesting project so I will keep on
working with Steroids to get as far as I can creating my app. You can
see that the team put a lot of work into it and the product feels right.&lt;/p&gt;

&lt;p&gt;The next steps on my part is to stop playing around and actually start developing something more concrete.
I’m also waiting for some features that are supposed to be in the roadmap,
such as icons in nav bar or iOS 7 native UI.&lt;/p&gt;

&lt;p&gt;&lt;em&gt;&lt;strong&gt;2014 Update&lt;/strong&gt;: Since this, I’ve released an application using Steroids.js, it’s a &lt;a href=&quot;http://liffapp.io&quot;&gt;quantified self application
to track your day&lt;/a&gt;. You can check it out &lt;a href=&quot;https://itunes.apple.com/en/app/liff-understand-your-life/id834944345&quot;&gt;on the appstore&lt;/a&gt;!&lt;/em&gt;&lt;/p&gt;

&lt;p&gt;If you have any remarks, I’ll be happy to hear them in the comments. For
questions, I’m not sure to be able to answer all of them - but I’ll try!&lt;/p&gt;
</content>
   </entry>
  
 
  
   <entry>
     <title>J'ai Passé Un Deuxième Bac. Pour Voir.</title>
     <link href="http://marcgg.com/blog/2013/07/09/passer-deuxieme-bac"/>
     <updated>2013-07-09T00:00:00+02:00</updated>
     <id>http://marcgg.com/blog/2013/07/09/passer-deuxieme-bac</id>
     <content type="html">&lt;p&gt;J’ai obtenu mon baccalauréat scientifique en 2004. Malgré cela, ces deux dernières années j’ai mis un peu
de temps de côté pour passer mon bac L en candidat libre.&lt;/p&gt;

&lt;p&gt;Cet article relate cette petite aventure. Je donnerai les différentes étapes par
lesquelles je suis passé ainsi que toutes mes notes - glorieuses ou non.&lt;/p&gt;

&lt;h2 id=&quot;la-motivation&quot;&gt;La motivation&lt;/h2&gt;

&lt;p&gt;J’avais donc mon Bac S en poche, cependant à l’époque j’avais hésité
avec la possibilité de faire un bac L. Il faut dire que
j’ai toujours eu un attrait pour le côté littéraire des choses, mais comme mon
objectif était de travailler dans l’informatique, le S s’est imposé.&lt;/p&gt;

&lt;p&gt;Un jour je finis par me motiver pour tenter de
passer le bac à nouveau. Juste comme ça.
Cette fois ci j’ai 25 ans, j’ai fini mes études
depuis quelques années et je n’ai aucune envie de changer de carrière. Je
m’amuse même plutôt bien à écrire
&lt;a href=&quot;http://marcgg.com/blog/2013/01/14/html5-nodejs-websockets-games-learning/&quot;&gt;des lignes de code&lt;/a&gt;,
mais je me demande vraiment si j’ai les capacités pour réussir l’épreuve sans passer des heures à
bachoter et sans avoir à m’inscrire au &lt;a href=&quot;http://www.cned.fr/&quot;&gt;CNED&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;Je finis donc par m’inscrire, ce qui se s’avéra être beaucoup plus simple que prévu.
&lt;a href=&quot;http://ocean.siec.education.fr/&quot;&gt;Un formulaire en ligne&lt;/a&gt; et me voila
candidat individuel au Bac L, spécialité Anglais.&lt;/p&gt;

&lt;p&gt;Je devrais donc passer les épreuves réparties sur deux ans, la première séance
proposant le français et les sciences, le reste venant l’année d’après.
L’objectif à ce moment là était de voir si j’arriverais à m’en sortir lors des épreuves
anticipées. Si je partais avec des points de retard j’arrêterais les frais ici,
par contre, si tout se passait bien, je devrais continuer jusqu’au bout.&lt;/p&gt;

&lt;p&gt;Mes deux plus grosses questions étaient: vais-je l’avoir et combien aurais-je
en philo ? J’avais été un peu vexé de n’avoir eu que 10/20 dans cette
matière lors de mon Bac S et j’espèrais faire mieux cette fois-ci.&lt;/p&gt;

&lt;h2 id=&quot;le-dbut-des-rvisions&quot;&gt;Le début des révisions&lt;/h2&gt;

&lt;p&gt;J’oublie un peu mon projet, et tout d’un coup juin - et donc les
épreuves - s’approche dangereusement. N’étant plus lycéen je me retrouve
avec très peu de temps pour réviser, mais j’arrive à potasser le
programme entier de science. Ce dernier est vraiment très différent de
ce que j’avais pu voir en S à l’époque.
Pour ce qui est du français, l’écrit n’est pas un problème: je
prendrais l’écriture d’invention quoi qu’il arrive, ce qui me permet de
ne pas vraiment travailler pour viser une improvisation sur le moment.&lt;/p&gt;

&lt;p&gt;Pour l’oral cependant les problèmes commencent. Le programme spécifie
que l’élève doit venir avec une suite de texte &lt;em&gt;étudiés en cours&lt;/em&gt;. Je
n’ai pas eu de cours, je n’ai donc pas de textes - duh. Il est très difficile
de trouver quels types de documents sont valides, je me retrouve donc à
créer un dossier frankenstein fait de morceaux d’anabac, de souvenirs de
2004 et de mes lectures personnelles.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/assets/blog/anabacs.jpg&quot; alt=&quot;Anabacs&quot; style=&quot;margin:20px auto; display: block&quot; /&gt;&lt;/p&gt;

&lt;h2 id=&quot;les-preuves-anticipes&quot;&gt;Les épreuves anticipées&lt;/h2&gt;

&lt;p&gt;Je ne m’y attendais pas du tout, mais les épreuves se déroulaient toutes
dans un lycée. Sans vraiment de raisons je supposais être avec
d’autres candidats individuels dans un centre d’examen…
Me voila donc à gratter ma copie double avec des ados qui ont 10
ans de moins que moi! On me regarde un peu avec surprise, la barbe
n’aidant rien.&lt;/p&gt;

&lt;p&gt;L’oral de français est assez surprenant aussi bien pour moi que pour
l’examinatrice. Déjà les documents que j’ai choisi sont assez
approximatifs. Comme j’ai vu dans une circulaire que si les documents
fournis ne sont pas suffisants l’examinateur peut en donner de nouveaux,
je propose l’idée, mais je dois faire peine à voir et elle me laisse
passer sur un livre de Camus… le problème est que je l’ai lu
il y a au moins 5 ans et je ne me rappelle plus très bien. Je fais donc une
présentation plus qu’approximative, oubliant la moitié de ce que je dois
faire.&lt;/p&gt;

&lt;p&gt;Une fois les 20 minutes écoulées, l’examinatrice me demande pourquoi
je passe le bac en candidat libre.
Vu la performance que j’ai pu donner j’imagine qu’elle pense que
je ne l’ai pas eu. Je ne sais pas. En tout cas elle parait fort surprise
quand je lui explique les vraies raisons. Elle me pose énormément de
questions, bien plus interessée que quand je démontrais le parallèle
entre &lt;em&gt;La Peste&lt;/em&gt; et le nazisme. Notre discussion se conclue par
l’examinatrice m’expliquant qu’en 15 ans de correction de bac elle
n’avait jamais vu ça - mais que ça n’influerait pas sur ma note. Dommage.&lt;/p&gt;

&lt;p&gt;Après quelques semaines d’attente, les résultats tombent et je m’en sors
pas trop mal avec 15 au français écrit, 12 au français oral et 12 en sciences.
J’ai donc atteint mon objectif et je suis obligé de continuer l’année
prochaine avec la suite des épreuves.&lt;/p&gt;

&lt;h2 id=&quot;la-suite-des-rvisions&quot;&gt;La suite des révisions&lt;/h2&gt;

&lt;p&gt;La deuxième vague d’épreuves s’annonce être bien plus compliquée que la
première. Tout d’abord parce qu’il y en a bien plus, mais également parce
que mon emploi du temps est bien plus compliqué. Je viens de changer de
travail en début d’année et j’ai un voyage au Canada prévu juste avant
le début des épreuves orales.&lt;/p&gt;

&lt;p&gt;Comme la première année je prépare un plan de bataille par
matière, mais je me rend compte que je ne pourrais pas tout réviser. En
effet le programme est incroyablement vaste. Par exemple la
géographie parle aussi bien de la mondialisation que de Mumbai ou bien
des Caraïbes. L’histoire quant à elle traite de sujets obscurs comme le socialisme en
allemagne. La littérature se penche sur une pièce de théâtre qui a
énormément de liens avec la situation politique en France durant la
révolution de juillet…&lt;/p&gt;

&lt;p&gt;Il y a également beaucoup de choses à apprendre par coeur, comme les
cartes de géographie ou les dates d’histoire. Sachant très bien que je
n’arrive pas à mener tous les combats de front, je décide de faire
l’impasse sur énormément de points et me concentrer sur les grandes lignes du
programme.&lt;/p&gt;

&lt;p&gt;Comme pour moi la philosophie est non seulement ce qui m’intéresse le
plus dans ce bac, mais également ce qui déterminera si je l’obtient ou
non du fait de son coefficient très élevé, j’accorde le plus clair de mon temps de
révision sur cette matière. Hormis les fiches de révision que j’ai pu
acheter, je trouve quelques podcasts spécialisés comme
&lt;a href=&quot;http://www.sfr.com/les-mondes-numeriques/sfr-player/05232012-1009-tendance-bob-radio-les-revisions-dans-la-poche&quot;&gt;Bob Radio&lt;/a&gt;
ou bien des émissions de France Culture comme
&lt;a href=&quot;http://www.franceculture.fr/emission-les-nouveaux-chemins-de-la-connaissance&quot;&gt;les nouveaux chemins de la connaissance&lt;/a&gt;
que j’écoute en boucle dans le métro pour me mettre dans le bain.&lt;/p&gt;

&lt;h2 id=&quot;les-surprises&quot;&gt;Les surprises&lt;/h2&gt;

&lt;p&gt;A mon grand découragement, je découvre avec ma convocation que la LV2 possède un oral. Je
n’ai pas parlé un mot d’espagnol depuis des années et, même à l’époque,
j’étais plutôt médiocre. Je peux sauver les meubles à l’écrit, mais
m’envoyer passer l’épreuve orale c’est du suicide.
Je me lance donc dans des révisions avec &lt;a href=&quot;http://www.duolingo.com/&quot;&gt;duolingo&lt;/a&gt;,
mais sans grand espoir.&lt;/p&gt;

&lt;p&gt;L’autre petite blague est que je suis sensé passer les épreuves de sport, c’est à dire le
badminton et le 3x500m. Ouch. Bien sûr je pourrais me faire dispenser, mais ça serait tricher. Je me
retrouve donc à recruter un ami et, deux semaines avant l’épreuve,
je dois louer un terrain pour voir si je me rappelle comment jouer avec ces raquettes.&lt;/p&gt;

&lt;p&gt;Enfin revient l’horrible &lt;em&gt;dossier préparé en cours&lt;/em&gt; pour les oraux
d’espagnol et d’anglais. Je dois donc concocter à nouveau une suite de
documents en espérant que les examinateurs ne soient pas trop regardants
sur la cohérence générale.&lt;/p&gt;

&lt;h2 id=&quot;les-preuves&quot;&gt;Les épreuves&lt;/h2&gt;

&lt;p&gt;Les épreuves de 2013 commencèrent par le sport, qui fut un grand moment de solitude.
Imaginez un groupe d’ados de 17-18 ans qui se sont entraînés toute l’année pour l’épreuve,
et moi qui sais à peine ce qu’il doit se passer.&lt;/p&gt;

&lt;p&gt;Le 3x500 est une catastrophe car
même si je ne suis pas complètement rouillé, c’est une distance assez
batarde car rapide mais également longue.
Pendant la course je trouve quelqu’un qui a l’air d’avoir les mêmes
difficultés que moi, ce qui me rassure. C’est donc avec une grande
détresse que je le vois vomir et à moitié tomber dans les pommes à la
fin du premier 500m… Par contre le badmiton fut une réussite,
j’imagine que ces années à m’entraîner aux raquettes de plage ont enfin
payé.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/assets/blog/stade.jpg&quot; alt=&quot;Stade&quot; style=&quot;margin:20px auto; display: block&quot; /&gt;&lt;/p&gt;

&lt;p&gt;Les oraux de langue vivantes furent littéralement une épreuve.
J’étais parti au Canada et
mon avion revenait lundi matin, ce qui coïncidait avec mon oral
d’espagnol… &lt;em&gt;lundi après midi&lt;/em&gt;. C’est donc au saut de l’avion, épuisé et jet laggué, que je me
suis présenté pour expliquer des textes que je ne comprenais qu’à moitié
dans une langue que je ne parlais pas. Magique.&lt;/p&gt;

&lt;p&gt;Le reste des épreuves se déroulaient dans un lycée du 16ème arrondissement, ce qui a permis de
réaliser l’incroyable différence d’environnement avec le lycée de
banlieue dans lequel j’ai passé 3 années. Nettement plus charmant.&lt;/p&gt;

&lt;p&gt;Dans la salle, pour la première fois, j’ai pu avoir la satisfaction de
ne pas être le plus vieux. En effet un autre candidat libre qui semblait
avoir un petit début de quarantaine se trouvait vers le début des
rangées de table. C’était réconfortant car pendant toute la durée des
épreuves les gens croyaient que j’étais un surveillant et pas un élève.&lt;/p&gt;

&lt;p&gt;Sur cette deuxième série, j’ai eu beaucoup de chance. En effet l’épreuve
d’histoire géo est tombée sur des sujets que je connaissais relativement
bien juste par mes intérêts personnels: la mondialisation et les
différentes visions de l’implication de l’état dans la vie de ses
citoyens. L’épreuve d’espagnol était honnêtement
&lt;a href=&quot;http://baccalaureat.blog.lemonde.fr/2013/06/20/bac-2013-les-sujets-de-langues-vivantes-trop-faciles/&quot;&gt;beaucoup trop simple&lt;/a&gt;.
La moitié des points étaient donnés pour simplement citer le texte, et il y
avait même une question à laquelle on pouvait répondre en français!&lt;/p&gt;

&lt;h2 id=&quot;la-philo&quot;&gt;La philo&lt;/h2&gt;

&lt;p&gt;L’épreuve de philosophie était non seulement celle ouvrant la semaine d’hostilités,
mais c’est surtout la plus mythique. J’ai choisi le sujet “La science se
limite-t-elle à constater les faits?” car le deuxième sujet sur le
langage semblait rempli de pièges et que je ne voulais même pas regarder
le commentaire de documents… je n’y peux rien, l’épreuve de philo ça sera toujours pour
moi répondre à une question un peu obscure pendant 4 heures!&lt;/p&gt;

&lt;p&gt;A la fin de la journée je surveillais les sites de correction en ligne
afin de voir si j’avais pris un plan qui collait aux leurs, et à mon
plus grand désespoir tous les sites étaient partis dans une autre direction que moi,
mettant plus le poids sur le fait que la science doit surtout analyser
les faits et pas seulement les constater. Moi de mon côté j’essayais
d’expliquer pourquoi les faits ne sont pas pertinents en rebondissant
entre Descartes et les nombres imaginaires.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/assets/blog/sujets.jpg&quot; alt=&quot;Sujets&quot; style=&quot;margin:20px auto; display: block&quot; /&gt;&lt;/p&gt;

&lt;h2 id=&quot;les-rsultats&quot;&gt;Les résultats&lt;/h2&gt;

&lt;p&gt;Pour être honnête, je n’ai pas réellement ressenti de stress pendant les épreuves ou
même après. Si je n’étais pas reçu, ça ne changerait absolument rien à
ma vie… mais le jour des résultats j’ai eu l’impression d’être en
terminale à nouveau. Mine de rien j’avais passé pas mal de temps à faire
les démarches, monter les dossiers, réviser… et si c’était pour
rien? J’ai donc hâté le pas pour arriver au lycée qui affichait les
résultats.&lt;/p&gt;

&lt;p&gt;Pour rajouter au suspens je me suis trompé de panneau de jury, et j’ai
donc passé 2 minutes à chercher désespérément mon nom dans une liste
dont j’étais forcément absent. De la joie à l’état pur.
Finalement je retrouve mon nom sur la liste des reçus, accolé de la
mention Bien! Je mentirais si je disais que ce n’était pas un gros
soulagement.&lt;/p&gt;

&lt;p&gt;A partir de là il m’a fallu récupérer le détail de mes notes et je me suis retrouvé à
nouveau incrédule: 9 en littérature, 18 en histoire/géo, 17 en anglais,
14 en espagnol, 14 en LELE (littérature étrangère en langue étrangère),
20 en philosophie et 10 en sport.&lt;/p&gt;

&lt;p&gt;Je pense avoir complètement bloqué sur le 20 en philo. J’ai du fixer
cette ligne dans le relevé de note, d’abord en supposant m’être trompé de
ligne, puis en imaginant que c’était 20 après pondération et que j’avais
donc environ 2,8… mais non. Je suis donc sorti calmement entre les
lycéens hurlant de joie et ceux pleurant et j’ai effectué une petite danse
de la victoire.&lt;/p&gt;

&lt;h2 id=&quot;alors-&quot;&gt;Alors ?&lt;/h2&gt;

&lt;p&gt;Déjà, je ne vais pas le cacher, je suis content que tout soit fini.
Revenir à une époque où il me fallait réviser n’était pas un
plaisir. Mon mode de vie actuel me laisse peu de temps libre et le
remplir ainsi était parfois frustrant. De plus poser des congés pour
passer des épreuves était assez contrariant.&lt;/p&gt;

&lt;p&gt;Cependant si c’était à refaire, je le referais avec joie. J’ai pu me
replonger dans des sujets que j’avais complètement oublié et pu
donner une nouvelle chance à la philosophie.
Je me suis d’ailleurs rendu compte à quel point cette matière est difficile
à l’âge où les lycéens l’abordent.
Je vois bien qu’à 17 ans j’étais incapable de produire le même
raisonnement que maintenant, car il suppose plus d’expérience et une
culture générale plus solide.
C’est d’autant plus vrai pour un élève de Terminale S car la philosophie demande de produire un
raisonnement assez proche du raisonnement scientifique classique, mais
basé sur un autre groupe de repères et avec une production écrite tout a fait
différente. Je comprend donc mieux pourquoi je ne comprenais pas vraiment ce
que l’on attendait de moi.&lt;/p&gt;

&lt;p&gt;Sur ce, je vous laisse. Je dois mettre à jour mon CV pour dérouter tous les futurs
recruteurs qui le liront!&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/assets/blog/ressmall.jpg&quot; alt=&quot;Résultats&quot; style=&quot;margin:20px auto; display: block&quot; /&gt;&lt;/p&gt;

</content>
   </entry>
  
 
  
   <entry>
     <title>Why I'm Not Proud To Be French</title>
     <link href="http://marcgg.com/blog/2013/06/24/not-proud-to-be-french"/>
     <updated>2013-06-24T00:00:00+02:00</updated>
     <id>http://marcgg.com/blog/2013/06/24/not-proud-to-be-french</id>
     <content type="html">&lt;p&gt;A few years back, when I was living in the US, a lot of people asked me if I
were proud of being French. I always found this question very strange and
never knew exactly how to respond without getting into a two hours long
argumentation… because no, I am not proud to be French.
Of course to be fair I have to mention at that point that if I were born
American I wouldn’t be proud of it either.&lt;/p&gt;

&lt;p&gt;So here’s my humble written reflexion that I will redirect people to next
time I’m asked how I feel about my nationality.
Note that I won’t get into the negative aspects of national pride because I think
it’s beside the point. I can get how people are proud of their countries
without being radical nationalists.&lt;/p&gt;

&lt;p&gt;Alright.&lt;/p&gt;

&lt;p&gt;To me being proud of one’s nationality makes very little sense. I’m
usually proud of the things I accomplish or, at the very least, that I helped create. If I
work months on a project that succeeds, obviously I’ll be very proud. If I spend
time helping out a friend and she turns out very successfull, I’ll share
a subset of the pride while being happy for her. Being proud
of where I was born sounds a bit like being proud to be blond, or being
proud to be right handed. It’s a fact about me, true, but it does not
define me and I had no choice in it.&lt;/p&gt;

&lt;p&gt;I can honestly say that I love France and that being French is a good
situation to be in. I’m not necessarily a big fan of
&lt;a href=&quot;http://www.hadopi.fr/&quot;&gt;every aspect of it&lt;/a&gt;,
but it’s a great place to live. I don’t have to pay
ridiculous tuitions for my education, I get a fair share of freedom,
Paris is one of my favorite cities, I can go in most places in Europe
without having to worry about visas and being able to
speak french will make me seem sophisticated and charming abroad.&lt;/p&gt;

&lt;p&gt;It’s pretty cool if you ask me!&lt;/p&gt;

&lt;p&gt;The thing is that, while I can feel glad to be born french, I won’t take any
pride in the mere act of being born that is really a product of pure luck.&lt;/p&gt;

&lt;p&gt;If my country achieved a lot 300 years ago, what does it has to do with
me and why should all of this influence the way I feel? If I start
to think this way, then comes the question of what
events I should take into account to make up my mind about the way
I “live” my nationality.
It’s a hard question because France did great things and was host
of &lt;a href=&quot;http://en.wikipedia.org/wiki/Voltaire&quot;&gt;amazing&lt;/a&gt;
&lt;a href=&quot;http://www.amazon.com/L%C3%A9tranger-Collection-Folio-French-Edition/dp/2070360024&quot;&gt;minds&lt;/a&gt;,
but also had some dark sides, both &lt;a href=&quot;http://en.wikipedia.org/wiki/Vichy_France&quot;&gt;relatively recently&lt;/a&gt;
or &lt;a href=&quot;http://en.wikipedia.org/wiki/Reign_of_Terror&quot;&gt;way back&lt;/a&gt;. I’m sure
it’s a harder one for countries with a harsher history.&lt;/p&gt;

&lt;p&gt;Of course I’m not asking for a clean slate or to forget what happened in
the past as it’s obvious that we be able to look back at
what occurred before and learn from it. I just think that such a gut
feeling as pride (or shame) has no place here.&lt;/p&gt;

&lt;p&gt;There are situations where I could be proud of be a part of my country,
but that would be more the pride of of belonging to a movement I judge
positive or important than something related to my nationality.
To illustrate, if I lived in Canada and the country as a whole, myself included,
did something great, I would have the exact same feeling even though I’m not Canadian.&lt;/p&gt;

&lt;p&gt;To conclude I’ll leave you with a song by Brassens, another one of my
most talented fellow countryman.&lt;/p&gt;

&lt;div style=&quot;width:560px; margin: auto&quot;&gt;
&lt;object width=&quot;560&quot; height=&quot;315&quot;&gt;&lt;param name=&quot;movie&quot; value=&quot;http://www.youtube.com/v/RSJmN-Mg978?version=3&amp;amp;hl=fr_FR&amp;amp;rel=0&quot; /&gt;&lt;param name=&quot;allowFullScreen&quot; value=&quot;true&quot; /&gt;&lt;param name=&quot;allowscriptaccess&quot; value=&quot;always&quot; /&gt;&lt;embed src=&quot;http://www.youtube.com/v/RSJmN-Mg978?version=3&amp;amp;hl=fr_FR&amp;amp;rel=0&quot; type=&quot;application/x-shockwave-flash&quot; width=&quot;560&quot; height=&quot;315&quot; allowscriptaccess=&quot;always&quot; allowfullscreen=&quot;true&quot; /&gt;&lt;/object&gt;
&lt;/div&gt;
</content>
   </entry>
  
 
  
   <entry>
     <title>Information About Bots & People Clicking a Link</title>
     <link href="http://marcgg.com/blog/2013/05/20/track-link-clicks"/>
     <updated>2013-05-20T00:00:00+02:00</updated>
     <id>http://marcgg.com/blog/2013/05/20/track-link-clicks</id>
     <content type="html">&lt;p&gt;A couple of days ago I saw
&lt;a href=&quot;http://www.zdnet.com/is-microsoft-reading-your-skype-instant-messages-7000015388/&quot;&gt;articles popping around&lt;/a&gt;
saying that Microsoft
&lt;a href=&quot;http://www.h-online.com/security/news/item/Skype-with-care-Microsoft-is-reading-everything-you-write-1862870.html&quot;&gt;is visiting links posted on Skype&lt;/a&gt;. In my opinion it got a bit blown out of proportion, but I’m
not writing this to discuss the matter.&lt;/p&gt;

&lt;p&gt;The thing is that the first thing that came to me is that it would have
been pretty hard for a regular user to identify such a thing.
This is why I created a very simple project that does just that.
You can create a link by entering a password. Then the site gives you
two links: one to see your access logs, the other to paste around.
If someone clicks the link it saves some info about the user.&lt;/p&gt;

&lt;h2 id=&quot;what-it-looks-like&quot;&gt;What It Looks Like&lt;/h2&gt;

&lt;p&gt;&lt;img src=&quot;/assets/blog/t1.png&quot; alt=&quot;&quot; style=&quot;margin:20px auto; display: block&quot; /&gt;&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/assets/blog/t2.png&quot; alt=&quot;&quot; style=&quot;margin:20px auto; display: block&quot; /&gt;&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/assets/blog/t3.png&quot; alt=&quot;&quot; style=&quot;margin:20px auto; display: block&quot; /&gt;&lt;/p&gt;

&lt;h2 id=&quot;its-not-good---but-it-could-be&quot;&gt;It’s Not Good - But It Could Be&lt;/h2&gt;

&lt;p&gt;Right now it’s only a couple hours of work. As it is, it won’t scale.
This is mainly because I deploy it on heroku and heroku doesn’t provide a good
database solution for free. After 10000 people try it out I’ll run out
of space and the server will go down.&lt;/p&gt;

&lt;p&gt;It also lacks features and needs a better UI.&lt;/p&gt;

&lt;p&gt;I could improve it a bit and open source the code for people to set up on
their own heroku server - or whatever they like. The only thing is that
I don’t really know if there is a point. Web developers can already
easily set this up without my help, and I suspect others to not care about this.&lt;/p&gt;

&lt;p&gt;I also had feedbacks of people saying that it could be used for “evil” as
it gives a very easy way to get the IP and referer of someone… but
again, for anyone with a webserver this is all very basic stuff so I
feel like this won’t be a problem.&lt;/p&gt;

&lt;h2 id=&quot;for-now&quot;&gt;For Now&lt;/h2&gt;

&lt;p&gt;Anyways, for the moment being I’ll put the link out there:
&lt;a href=&quot;http://tracklink.herokuapp.com&quot;&gt;tracklink.herokuapp.com&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Depending on the feedbacks I’ll get - or don’t get - I’ll decide what to
do with this! Worst case scenario I keep this as a pet project that I
use once in a while when feeling paranoid.&lt;/p&gt;
</content>
   </entry>
  
 
  
   <entry>
     <title>What I Learned While Teaching</title>
     <link href="http://marcgg.com/blog/2013/04/22/what-i-learned-teaching-web"/>
     <updated>2013-04-22T00:00:00+02:00</updated>
     <id>http://marcgg.com/blog/2013/04/22/what-i-learned-teaching-web</id>
     <content type="html">&lt;p&gt;A few months back I wrote &lt;a href=&quot;/blog/2013/02/04/developers-teach-non-tech-startup/&quot;&gt;an article about how developers should share
their knowledge with others&lt;/a&gt;.
Once it was published I received tons of very positive feedbacks from
both developers and non tech people, some of them even asking what
they should do to learn more about how the web works.&lt;/p&gt;

&lt;p&gt;At the same time I happened to be talking with a &lt;a href=&quot;http://emiland.me/&quot;&gt;friend of mine&lt;/a&gt;
who started giving classes to young entrepreneurs via &lt;a href=&quot;http://leeaarn.com/&quot;&gt;leeaarn&lt;/a&gt;
and it seemed pretty cool.
One thing lead to another and I decided it would be a good experiment to take this
blog post even further and actually try to create a series of classes to
teach something to non developers.&lt;/p&gt;

&lt;h2 id=&quot;the-class&quot;&gt;The Class&lt;/h2&gt;

&lt;p&gt;After discuting with &lt;a href=&quot;https://twitter.com/antoamiel&quot;&gt;one of leeaarn’s co-founders&lt;/a&gt;
we decided on a format of 3 classes of 2 hours each dedicated to
people with little to no experience in creating websites.&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;Class #1: What is the web (internet, client/servers, networks, IP, DNS…)&lt;/li&gt;
  &lt;li&gt;Class #2: What is coding (Front/Back, HTML/CSS/JS, algorithms…)&lt;/li&gt;
  &lt;li&gt;CLass #3: How to work with developers&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;I spent quite a while laying out the content of these classes.&lt;/p&gt;

&lt;p&gt;Of course I already knew
the subjects quite well but making complex ideas simple can get pretty hard!
Also I had to find a good middle point in technical accuracy and not
boring everyone to death with details or wasting too much time.&lt;/p&gt;

&lt;h2 id=&quot;what-i-learned&quot;&gt;What I Learned&lt;/h2&gt;

&lt;p&gt;While I already helped out friends or teammates learning new concepts,
this was the first time where I’d give a more formal class to complete strangers.
In the process I learned a lot.&lt;/p&gt;

&lt;h3 id=&quot;people-are-interested&quot;&gt;People are interested&lt;/h3&gt;

&lt;p&gt;I was really surprised when around 10 people showed up,
and even more surprised by how involved they were. A lot of
relevant questions were asked and there often was a discussion going on.
It was great to see a non tech crowd so genuinely interested in concepts
as obscure to them as DNS or source control. This made my day every time.&lt;/p&gt;

&lt;h3 id=&quot;some-obvious-things-are-not--vice-versa&quot;&gt;Some obvious things are not (&amp;amp; vice versa)&lt;/h3&gt;

&lt;p&gt;While writing my slides for the first class I overlooked some concepts
that seemed obvious to me and focused on others that felt more complex.&lt;/p&gt;

&lt;p&gt;In some cases I was way off, like when I thought that the word “protocol” was known by everyone.
Spoiler: it’s not. On the other hand people understood very quickly what
HTML, CSS and Javascript were and how they intereacted with one another
when I thought it would take half the class to get this point accross.&lt;/p&gt;

&lt;h3 id=&quot;people-dont-know-much-about-security&quot;&gt;People don’t know much about security&lt;/h3&gt;

&lt;p&gt;I feel there is a great need of education regarding this
topic. For instance it didn’t shock a lot of people that some websites
would store their password without encryption and send them back by
email when pressing “I forgot my password”.&lt;/p&gt;

&lt;p&gt;I hope I freaked them out enough about the risks they’ll spend the extra
time needed to properly secure their company’s website :evilsmileyface:&lt;/p&gt;

&lt;h3 id=&quot;examples-are-great&quot;&gt;Examples are great&lt;/h3&gt;

&lt;p&gt;I did some live coding and it seemed like it helped them a lot to understand what
programming is all about. Overall I’d say that 2 minutes spent in the Chrome
inspector are worth 10 slides of tedious HTML syntax description or
any other kind of theory.&lt;/p&gt;

&lt;p&gt;I also spent time in the console, using whois, dig, ping, curl and so on to
showcase a bit of the web’s behind the scene. While I think that the
console felt a bit weird to people present (the “wtf is that black screen
with lines of text scrolling?” effect), it helped demonstrate that there is a lot
going on when you try to access a website.&lt;/p&gt;

&lt;p&gt;It was also very fun to crash one of the student’s website with a simple
&lt;a href=&quot;http://en.wikipedia.org/wiki/Denial-of-service_attack&quot;&gt;DoS attack&lt;/a&gt;
to explain what this was all about and introduce a part of the class about performances!&lt;/p&gt;

&lt;h3 id=&quot;two-hours-is-short&quot;&gt;Two hours is short&lt;/h3&gt;

&lt;p&gt;At first I was really worried I wouldn’t have enough material to keep
people interested for two hours… but by the last session it seemed
like we should have spent a full day talking and there would still be
discussions to be had! The subjects I presented are very broad and each have immense
ramifications, so staying focused and not taking too much time was
actually the hard part.&lt;/p&gt;

&lt;p&gt;To sum it up, I now think that it isn’t an overstatement when I say “I
could talk about the web for days”.&lt;/p&gt;

&lt;h3 id=&quot;public-speaking-is-a-skill-that-requires-practice&quot;&gt;Public speaking is a skill that requires practice&lt;/h3&gt;

&lt;p&gt;While working on my engineering degree we had quite a lot of projects and keynotes.
This taught us to talk in public, and at the end I felt that I got decent at
it… but damn does it go away! This is clearly something you need
to work on every once in a while to be efficient right away.&lt;/p&gt;

&lt;p&gt;In my case it came back very quickly, but the first minutes of the class
were painful and a better preparation would have fixed that.&lt;/p&gt;

&lt;h3 id=&quot;making-complex-things-simple-is-hard&quot;&gt;Making complex things simple is hard&lt;/h3&gt;

&lt;p&gt;Ok, this isn’t news to anyone who tried to explain how to use a computer to
an old relative, but it’s always worth mentionning that it really is a challenge.
While preparing for the class I realized that I wasn’t really able to explain some
concepts off the top of my head. Just like public speaking it’s a skill that needs practice.&lt;/p&gt;

&lt;p&gt;No wonder the &lt;a href=&quot;http://www.reddit.com/r/explainlikeimfive&quot;&gt;Explain Like I’m 5 subreddit&lt;/a&gt;
is so popular, it truly is an intellectual and stylistic exercice!&lt;/p&gt;

&lt;h2 id=&quot;overall&quot;&gt;Overall&lt;/h2&gt;

&lt;p&gt;This was a great experience. I got to teach things I am pasionated about and so far
I got some very positive feedbacks. I think that I’ll do it again sometimes!&lt;/p&gt;

&lt;p&gt;In the meantime, here’s a picture of me looking all teachery:&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/assets/blog/leeaarn.jpg&quot; alt=&quot;Presenting&quot; style=&quot;margin:20px auto; display: block&quot; /&gt;&lt;/p&gt;

</content>
   </entry>
  
 
  
   <entry>
     <title>Please Keep a Changelog For Your Open Source Lib</title>
     <link href="http://marcgg.com/blog/2013/03/25/please-changelog-open-source"/>
     <updated>2013-03-25T00:00:00+01:00</updated>
     <id>http://marcgg.com/blog/2013/03/25/please-changelog-open-source</id>
     <content type="html">&lt;p&gt;I love open source. I think it’s amazing that some people are willing to
share their hard work with everyone and accepting contributions.
I don’t help out myself as much as I’d like to (couple of commits in
&lt;a href=&quot;https://github.com/fog/fog/commit/c35f4affa79dea5cf520dd1c954c8f32022dfb96&quot;&gt;fog&lt;/a&gt;,
&lt;a href=&quot;http://contributors.rubyonrails.org/contributors/marc-g-gauthier/commits&quot;&gt;rails&lt;/a&gt;,
&lt;a href=&quot;https://github.com/arsduo/koala/commit/85d5e16bccde1b153f861043a7ac818f61409633&quot;&gt;koala&lt;/a&gt;
&lt;a href=&quot;https://github.com/marcgg/Simple-Placeholder&quot;&gt;…&lt;/a&gt;)
but I use open source frameworks and software every day both professionnally and at home.&lt;/p&gt;

&lt;p&gt;Today I’m writing this article because something has been bothering me in a lot
of projects I use: they don’t keep any form of changelog.&lt;/p&gt;

&lt;p&gt;Before I get started, I just want to make clear that
if you have an open source project and don’t keep a changelog, I don’t
want to be pointing fingers going “shame on you! shame on you!”. Not at all.
I really appreciate and respect the fact that you put your code out there for me
to use.&lt;/p&gt;

&lt;p&gt;It’d just be extra awesome if it was there, that’s all.&lt;/p&gt;

&lt;h2 id=&quot;sometimes-you-just-have-to-update&quot;&gt;Sometimes You Just Have To Update&lt;/h2&gt;

&lt;p&gt;Say I use LibY for a project and it’s great. So great that it does
exactly what I want perfectly and I end up leaving it there without looking at it
too much. Maybe after a couple of months I’ll run
into a weird bug that requires me to update LibY, or maybe another
project has a dependency to a more recent version of LibY.
The result will be that I need to update.&lt;/p&gt;

&lt;p&gt;So I’ll go to the repository / website / tracker / github’s page or
whatever and look up the latest version… and have no clue what
changed since last time.&lt;/p&gt;

&lt;p&gt;Of course I could look up every commit since last version, but often my
knowledge of the project is too basic to fully understand everything
that happened. This is particulary true for very large projects of
which I only use a very small subset.&lt;/p&gt;

&lt;h2 id=&quot;i-know-i-know&quot;&gt;I Know, I Know&lt;/h2&gt;

&lt;p&gt;At that point someone will point out that I should keep all my libraries
up to date. Obviously that someone would be right, but let’s stay realistic.
While I can find time to update my main dependencies, it is really hard
to keep up and have everything at the latest version. And even then, if
there is a minor update in one of the libraries I use and there
is no changelog… well it would still be complicated to know if it’s updatable!&lt;/p&gt;

&lt;p&gt;I’m sure someone else will say that my automated tests should find any bug when I
update. This is true as well, it is always better to be able to have an
exhaustive test suite that guaranties you that nothing will break. But
we live in the real world and test suites are not perfect. You could
even argue that testing your libraries is not within the scope of your
app.&lt;/p&gt;

&lt;p&gt;And hey, if &lt;a href=&quot;https://github.com/blog/1440-today-s-email-incident&quot;&gt;Github&lt;/a&gt;
can get it wrong, how can I not fail every once in a while!&lt;/p&gt;

&lt;p&gt;Lastly I also wanted to point out that sometimes checking the changelog
is not the only thing you need to do.
If you want to update a very major and central library, checking quickly
the changelog is clearly not enough. You need to make sure everything
still works fine, maybe look up the discussion that went on to lead to
this new release and so on.&lt;/p&gt;

&lt;p&gt;However, even in that case, a simple list of the changes is still a good
point to start your reflexion on how you should update.&lt;/p&gt;

&lt;h2 id=&quot;the-changelog-i-need&quot;&gt;The Changelog I Need&lt;/h2&gt;

&lt;p&gt;I don’t need much to be in a changelog. If you want to make me (and probably other developers)
happy, here’s what would do the trick.&lt;/p&gt;

&lt;h3 id=&quot;a-version-number-that-makes-sense&quot;&gt;A Version Number That Makes Sense&lt;/h3&gt;

&lt;p&gt;If it’s a release candidate, label it RC. If it’s a beta or an alpha, write it down
as well. I want to know if this version is supposed to be stable.&lt;/p&gt;

&lt;p&gt;Keep a logical versioning logic and stick to it. I don’t care exactly how you do it,
as long as you explain it. People like to go MAJOR.MINOR.PATCH,
so if it’s like that it’s even better, but really anything that helps me
understand if there are bug fixes, new features or breaking DSL changes
in the update is perfect.&lt;/p&gt;

&lt;h3 id=&quot;a-changelog-file&quot;&gt;A Changelog File&lt;/h3&gt;

&lt;p&gt;A file called “changelog” somewhere at the root of your project. Maybe you want to
keep track of changing versions on your website and that’s fine. I would still love
if the file was there and referenced the place you want to keep the
actual changes.&lt;/p&gt;

&lt;h3 id=&quot;a-brief-list-of-what-changed&quot;&gt;A Brief List Of What Changed&lt;/h3&gt;

&lt;p&gt;Again, you don’t need to be exhaustive. I usually want to know:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;Did anything changed so much I’d need to update my code?&lt;/li&gt;
  &lt;li&gt;What are the new features?&lt;/li&gt;
  &lt;li&gt;Are there bugfixes? Security updates?&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;No need to make it long, no need to reference the commits or tickets.
While it’s a nice thing to have, a simple bullet point list with a
sentence for each major change is usually enough for me to get the big picture.&lt;/p&gt;

&lt;h2 id=&quot;example-why-i-love-thins-changelog&quot;&gt;Example: Why I Love Thin’s Changelog&lt;/h2&gt;

&lt;p&gt;Let’s look at some of what
&lt;a href=&quot;http://macournoyer.com/&quot;&gt;Marc-André Cournoyer&lt;/a&gt; did
with &lt;a href=&quot;https://github.com/macournoyer/thin&quot;&gt;thin&lt;/a&gt;’s
&lt;a href=&quot;https://github.com/macournoyer/thin/blob/master/CHANGELOG&quot;&gt;changelog&lt;/a&gt;.&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;== 1.5.1 Straight Razor
 * Fix issue when running as another user/group without a PID file.
 * Allow overriding Connection &amp;amp; Server response headers.
 * Update vlad example [Mathieu Lemoine]
 * Keep connections in a Hash to speedup deletion [slivu]
 * Force kill using already known pid. Prevents &quot;thin stop&quot;
   from leaving a process that removed its pid file,
    but is still running
    (e.g. hung on some at_exit callback) [Michal Kwiatkowski]

== 1.5.0 Knife
 * Fix compilation under Ubuntu 12.04
   with -Werror=format-security option.
 * Raise an error when no PID file.
 * Prevent duplicate response headers.
 * Make proper response on exception [MasterLambaster].
 * Automatically close idling pipeline connections on
   server stop [MasterLambaster].

== 1.4.1 Chromeo Fix
 * Fix error when sending USR1 signal and no log file is supplied.

== 1.4.0 Chromeo
 * kill -USR1 $PID for log rotation [catwell].
 * Fix HUP signal being reseted after deamonization [atotic].
 * Fix error with nil addresses in Connection#socket_address.
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;&lt;img src=&quot;/assets/blog/rainbows.png&quot; alt=&quot;Rainbows&quot; style=&quot;margin: 0px auto 20px auto; display: block;&quot; /&gt;&lt;/p&gt;

&lt;p&gt;To me it’s perfect. Not too long and very clear.
He mentions contributors and even have codenames for each release making
it extra easy to remember.
You can clearly see what’s new in each release and what will happen if you
update. This also gives a good overview of how the project is doing.&lt;/p&gt;

&lt;h2 id=&quot;pretty-please&quot;&gt;Pretty Please?&lt;/h2&gt;

&lt;p&gt;If you have an open source project and want to be even nicer to the
people using it, please please please keep a changelog.&lt;/p&gt;

&lt;p&gt;You don’t need to make it fancy, but anything would be better than
random version numbers with no explanations.&lt;/p&gt;

&lt;p&gt;Thanks!&lt;/p&gt;
</content>
   </entry>
  
 
  
   <entry>
     <title>Developers, Share Your Technical Knowledge</title>
     <link href="http://marcgg.com/blog/2013/02/04/developers-teach-non-tech-startup"/>
     <updated>2013-02-04T00:00:00+01:00</updated>
     <id>http://marcgg.com/blog/2013/02/04/developers-teach-non-tech-startup</id>
     <content type="html">&lt;p&gt;When you think startup, you might get the picture of a bunch of
developers writing code all day. While this can be true, the vast
majority will incorporate some people that have absolutely no technical
background.&lt;/p&gt;

&lt;p&gt;I’m thinking about the ones working on marketing, sales, project management, product design,
support, business development, graphic design and so on. All of them like the
idea of working in a small and promising company, but they never learned
anything about coding - and I’m not here to blame them.&lt;/p&gt;

&lt;h2 id=&quot;no-need-to-learn-how-to-code&quot;&gt;No need to learn how to code&lt;/h2&gt;

&lt;p&gt;I’m personnaly not an advocate of the concept of &lt;a href=&quot;http://www.codeyear.com/&quot;&gt;getting everybody to code&lt;/a&gt;.
Of course I love this field, but I wouldn’t say that it is a
required skill to live a successful life, no matter how big technology is today.&lt;/p&gt;

&lt;p&gt;However I’m all for giving people a basic overview of how everything
works behind the scene of a successfull piece of software. Then, if the
person wants to learn how to code for fun or to make a living out of it,
great! But if not, I wouldn’t mind.&lt;/p&gt;

&lt;p&gt;To each his own and bla bla bla.&lt;/p&gt;

&lt;h2 id=&quot;just-get-the-big-picture&quot;&gt;Just get the big picture&lt;/h2&gt;

&lt;p&gt;As a developer, I’m always trying to give some technical references
to my colleagues. Of course I won’t get into
the details about how I optimized a complicated database query, but I
might say that I got a page to load faster because I did &lt;em&gt;something&lt;/em&gt; to
the way the app talks to the database.&lt;/p&gt;

&lt;p&gt;To sum it up:&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Don’t say&lt;/strong&gt;: “I refactored module X to speed up the GC in order to stop the memory
leak occuring for the workers processing the queue Y.”&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Say&lt;/strong&gt;: “Our machines would use too much memory doing Y, so I had to improve how we
would handle that.”&lt;/p&gt;

&lt;p&gt;As time passes I might add some information and complexify my
vocabulary as people get the idea. It’s all about introducing concepts
step by step.&lt;/p&gt;

&lt;p&gt;I’m absolutely not saying take them for idiots. They are not. They just
do not have the same vocabulary and the same background as me. Imagine a
marketing guy showing up and starting to talk about &lt;a href=&quot;http://en.wikipedia.org/wiki/Marketing_mix&quot;&gt;4Ps&lt;/a&gt;
without giving you any indication of what all those Ps are about.&lt;/p&gt;

&lt;h2 id=&quot;what-everyone-should-know&quot;&gt;What everyone should know&lt;/h2&gt;

&lt;p&gt;Spoilers: all that is written here is nothing more than my opinion.&lt;/p&gt;

&lt;p&gt;I think that everyone in a startup working
on a web product should know some things about how the software works.
This is not the definitive ultimate most awesomest list,
so feel free to add your points in the comments and I might update the
article accordingly.&lt;/p&gt;

&lt;p&gt;Here we go.&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;What code is. The fact that a bunch of text files can
create a website, a game or whatever can be surprising for a lot of people.&lt;/li&gt;
  &lt;li&gt;What a browser is and understand that there are differences between
browsers.&lt;/li&gt;
  &lt;li&gt;Recognize different kinds of problems. A complete crash is way worse
than a CSS alignment issue or a word change!&lt;/li&gt;
  &lt;li&gt;How to report a bug and understand that developers are not wizards that can
guess the steps to reproduce it (if only).&lt;/li&gt;
  &lt;li&gt;What &lt;a href=&quot;http://en.wikipedia.org/wiki/Software_regression&quot;&gt;software regression&lt;/a&gt; is,
or why sometimes a feature working yesterday is broken today.&lt;/li&gt;
  &lt;li&gt;What a server is.&lt;/li&gt;
  &lt;li&gt;Understand that something can be really complicated even if it seems
simple. It’s rarely about just “adding a button”, there is &lt;strong&gt;way more&lt;/strong&gt; to
a feature than the UI.&lt;/li&gt;
  &lt;li&gt;What it means to deploy something in production. What is a migration.
Why every once in a while you need to put the site down for maintenance.&lt;/li&gt;
  &lt;li&gt;What a URL is.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;It’s not much, but knowing all this will help a lot communication between the development
team and everyone else. To an extent it will also help the team be more
efficient. Obviously it’s easier when everyone within a team
can have a &lt;a href=&quot;http://martinfowler.com/bliki/UbiquitousLanguage.html&quot;&gt;common vocabulary&lt;/a&gt;
to talk about what occurs during development.&lt;/p&gt;

&lt;p&gt;Going further, there are some subjects that can be very interesting if
someone wanted to learn more. This can be particularly good for a person
working on the product or selling it. Knowing more gives a better insight on what
the app &lt;em&gt;could&lt;/em&gt; do based on what is already there.&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;Databases. How things are stored, how the data can be used.&lt;/li&gt;
  &lt;li&gt;What are the possibilities and &lt;a href=&quot;/blog/2012/09/24/working-with-apis-facebook/&quot;&gt;risks&lt;/a&gt;
of using third party APIs.&lt;/li&gt;
  &lt;li&gt;Performances. What can make a site slow. Understand what asynchronous means.&lt;/li&gt;
  &lt;li&gt;Code reusability and its limit. Why it’s good to have a consistent product.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Bonus points to learn if you want to show off at dinner parties:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;In most cases the cloud is really just a fancy way of talking about the internet.&lt;/li&gt;
  &lt;li&gt;Developers are just as bad as you at fixing printers.&lt;/li&gt;
  &lt;li&gt;Internet Explorer is terrible. Critize it and befriend developers.&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&quot;learning-something-different-is-also-for-developers&quot;&gt;Learning something different is also for developers&lt;/h2&gt;

&lt;p&gt;Working in a small structure like a startup is a lot of fun because you
get to see what everybody is doing. All the people involved should take
this opportunity to learn more.&lt;/p&gt;

&lt;p&gt;So far I’ve talked a lot about non-technical people learning technical things,
but a good idea for another blog post would be developers learning things
non related to coding!&lt;/p&gt;

&lt;p&gt;For instance knowing a bit about product design can help you
catch wireframe mistakes before implementing them, or see an easy to
create feature that could improve the application because you knew exactly what
is possible with the current code base.&lt;/p&gt;

&lt;p&gt;A front-end with an eye for graphic design could add a little polish to
a website using the latest CSS3 techniques that the designer maybe
didn’t know about.&lt;/p&gt;

&lt;h2 id=&quot;be-nice&quot;&gt;Be nice&lt;/h2&gt;

&lt;p&gt;This part is mainly a few tips for my fellow developers.&lt;/p&gt;

&lt;p&gt;If you decide to follow my advice - or if you already do what I’m
talking about, keep in mind that a lot of things that we take for granted are only
obvious because we’ve been playing around with computers for waaay too
long. If someone doesn’t get it, take the time to explain. No matter what it
is. Remember that you had to learn this too at some point.&lt;/p&gt;

&lt;p&gt;Be aware that what you can find amazing can
be really boring for others, so don’t go too far harassing people with technical facts.
Stick to what’s important, but stay available and helpful.
Of course if the person wants to know more, go crazy.&lt;/p&gt;

&lt;p&gt;To help you be clear in your explanations, it’s convenient to have some graphs,
simple flow charts or even drawings that you can refer to when discussing a subject.
Also, remember that
&lt;a href=&quot;http://programmers.stackexchange.com/questions/2410/whats-a-good-programming-metaphor&quot;&gt;metaphors&lt;/a&gt;
can go a &lt;a href=&quot;http://xenia.media.mit.edu/~mt/thesis/mt-thesis-2.2.html&quot;&gt;long way&lt;/a&gt;. Extrem programming
even lists this as &lt;a href=&quot;http://en.wikipedia.org/wiki/Extreme_programming_practices#System_metaphor&quot;&gt;a good practice&lt;/a&gt;
that can &lt;a href=&quot;http://reports-archive.adm.cs.cmu.edu/anon/isri/CMU-ISRI-03-103.pdf&quot;&gt;have positive results&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;Personnaly, I like talking about robots walking around a warehouse doing tasks while
I’m yelling orders from afar… and now that I’m writing that, I think I might pass for someone with a very odd job!&lt;/p&gt;

&lt;h2 id=&quot;go&quot;&gt;Go!&lt;/h2&gt;

&lt;p&gt;If you agree that this is important and you’re a developer,
go ahead and start explaining what you’re doing to others!&lt;/p&gt;

&lt;p&gt;If you are on the non technical side of things, ask your colleagues writing code what’s up. Most of them
would be happy to explain. If they aren’t, drop me a line &lt;a href=&quot;http://twitter.com/marcgg&quot;&gt;on twitter&lt;/a&gt;
and if I can, I’ll happily take a few minutes to help you out!&lt;/p&gt;
</content>
   </entry>
  
 
  
   <entry>
     <title>2 Days Trying To Create a Multiplayer HTML5 Game</title>
     <link href="http://marcgg.com/blog/2013/01/14/html5-nodejs-websockets-games-learning"/>
     <updated>2013-01-14T00:00:00+01:00</updated>
     <id>http://marcgg.com/blog/2013/01/14/html5-nodejs-websockets-games-learning</id>
     <content type="html">&lt;p&gt;Okay. Let’s start by saying that I’m a developer that does mostly web stuff.&lt;/p&gt;

&lt;p&gt;This means that a majority of the code I write will end up displaying something in a browser.
Of course I do &lt;a href=&quot;/2012/09/24/working-with-apis-facebook/&quot;&gt;interact with APIs&lt;/a&gt;, write background jobs, add some
security, optimize databases and so on… the point here is that, professionnally, I do not write
entire projects that have nothing to do with a web app.&lt;/p&gt;

&lt;p&gt;My friend &lt;a href=&quot;http://www.andreberlemont.com/portfolio/&quot;&gt;André&lt;/a&gt; on the other hand
has a different background as he mainly &lt;a href=&quot;http://www.oneliferemains.com/&quot;&gt;develops games&lt;/a&gt;.
One evening we started talking about how complex it would be to create an online multiplayer
game from scratch. Being the web guy, I felt that I should know how all this was supposed to work… after
all, the multiplayer happens over the internet, right?&lt;/p&gt;

&lt;h2 id=&quot;i-can-code-that-with-my-eyes-closed&quot;&gt;I Can Code That With My Eyes Closed…?&lt;/h2&gt;

&lt;p&gt;On paper it seemed pretty simple.&lt;/p&gt;

&lt;p&gt;People connect to a server.
This server keeps the game board and broadcasts it to everyone when
needed. Each player keeps some kind of state on its side for caching.
Everything related to drawing the game board as well as UI should be
handled by the client.&lt;/p&gt;

&lt;p&gt;Of course I knew it couldn’t be that simple and I was 100% sure
I was disregarding most of the problems that can occur when creating an online game.&lt;/p&gt;

&lt;p&gt;I &lt;a href=&quot;/2012/01/09/start-working-on-your-side-project/&quot;&gt;already blogged&lt;/a&gt; about how side projects are the best response to such
situation, therefore at that point I pretty much had to create some kind of game to try it out!&lt;/p&gt;

&lt;h2 id=&quot;stack&quot;&gt;Stack&lt;/h2&gt;

&lt;p&gt;Time being a factor, I didn’t want to go all out game development with C++, Unity or
something like that. Instead I kept it in my “safe” zone by using
technologies I had a bit of experience with:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;a href=&quot;http://nodejs.org/&quot;&gt;NodeJS&lt;/a&gt; (for the server)&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/HTML/Canvas/Tutorial&quot;&gt;HTML5 Canvas&lt;/a&gt; (to display the game board)&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;http://en.wikipedia.org/wiki/WebSocket&quot;&gt;Websockets&lt;/a&gt; with &lt;a href=&quot;http://socket.io/&quot;&gt;Socket.io&lt;/a&gt; (to make it fast)&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;img src=&quot;/assets/blog/stackgame.png&quot; alt=&quot;logos&quot; style=&quot;margin:20px auto; display: block&quot; /&gt;&lt;/p&gt;

&lt;h2 id=&quot;building-the-game&quot;&gt;Building The Game&lt;/h2&gt;

&lt;p&gt;I wanted a simple game so that I could focus on the online aspect of it.
The rules I came up with are:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;There are n players represented as squares on a board.&lt;/li&gt;
  &lt;li&gt;1 player is the target and earns 1 point per 30 movements.&lt;/li&gt;
  &lt;li&gt;If another player hits the target, she becomes the target and win 1 point.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;I also added a simplistic chat system so that players could talk
to one another during the game.&lt;/p&gt;

&lt;p&gt;The first version of the multiplayer code was pretty simple:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;When the player connects she gets the latest version of the game board.&lt;/li&gt;
  &lt;li&gt;Each time the player moves it sends an event to the server that
updates the world and broadcasts it to everyone connected.&lt;/li&gt;
  &lt;li&gt;Client side javascript renders the board in the canvas at each change.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;This is when I started to see why it wouldn’t be as simple.&lt;/p&gt;

&lt;h2 id=&quot;oh-wait-problems&quot;&gt;Oh Wait. Problems.&lt;/h2&gt;

&lt;h3 id=&quot;speed&quot;&gt;Speed&lt;/h3&gt;

&lt;p&gt;My first version was hosted on Heroku and lagged like crazy. This is
because right now Heroku doesn’t support Websockets and forces socket.io
to fall back to its polling mode. After some &lt;a href=&quot;https://github.com/joyent/node/wiki/Node-Hosting&quot;&gt;research&lt;/a&gt;
I moved to &lt;a href=&quot;https://www.dotcloud.com/&quot;&gt;DotCloud&lt;/a&gt; and got an impressive boost in speed.&lt;/p&gt;

&lt;p&gt;I also had to rewrite a lot of code using &lt;a href=&quot;http://expressjs.com/&quot;&gt;Express&lt;/a&gt; because it would make
deployment way easier.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/assets/blog/morestackgaming.png&quot; alt=&quot;logos&quot; style=&quot;margin:20px auto; display: block&quot; /&gt;&lt;/p&gt;

&lt;p&gt;Now that hosting and basic interactions were a bit more optimized, I started to see
another problem: passing around the whole board was still too costly
network-wise.&lt;/p&gt;

&lt;p&gt;At that moment of development the board was just a JSON object containing
all the players, their names, positions, scores and other meta data
regarding the game. It seemed pretty small but it wasn’t, and as the
game would grow the problem would only get worse.&lt;/p&gt;

&lt;p&gt;The solution here would be to only broadcast what changed instead of
redrawing everything. This was annoying because it meant that you need to be able
to draw the board from scratch (when you connect) as well as
incrementally (while you play). Twice the logic.&lt;/p&gt;

&lt;p&gt;I also noticed a lag for the player’s own actions. This was because it
would always go via the server before updating the board. As a matter of
fact there wasn’t even a board on the client side, just its rendering
on the HTML5 Canvas.&lt;/p&gt;

&lt;p&gt;Soooo to fix this the client code should also be able to know the state of the world
and update it locally.&lt;/p&gt;

&lt;h3 id=&quot;fun-gameplay--complexity&quot;&gt;Fun, Gameplay &amp;amp; Complexity&lt;/h3&gt;

&lt;p&gt;A game needs to be fun, or else there is no point. And a couple of laggy
squares moving around is clearly not fun. This seems trivial, but when
you spend your time working on web apps, you don’t spend a lot of time thinking about
whether the app is fun or not. Making it efficient, fast and user friendly
is complicated enought!&lt;/p&gt;

&lt;p&gt;I added some rules and gameplay elements to make it feel more like
something one would like to play, including:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;Feedbacks when you get hit&lt;/li&gt;
  &lt;li&gt;Scoreboards during game&lt;/li&gt;
  &lt;li&gt;Invicibility frames when you get hit&lt;/li&gt;
  &lt;li&gt;Board boundaries&lt;/li&gt;
  &lt;li&gt;Changing a player’s name&lt;/li&gt;
  &lt;li&gt;Tweaks in the player’s speed &amp;amp; size&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;It’s also good to know that some of the gameplay elements are based on constants.
For instance you always move of X, and your player is Y pixel-wide. When you get hit you
are invicible for Z frames and so on. To tweak it I had to add a debug
mode to change everything while playing to quickly see how it felt.&lt;/p&gt;

&lt;p&gt;All these changes made my simple game complex and it became harder to maintain the code,
even only after something like 6 hours of work in.
I had to throw away a lot of code and start again fresh.&lt;/p&gt;

&lt;h3 id=&quot;concurent-access&quot;&gt;Concurent Access&lt;/h3&gt;

&lt;p&gt;When you have a lot of players connected and modifying the same board,
you’re bound to run into some &lt;a href=&quot;http://en.wikipedia.org/wiki/Concurrency_control&quot;&gt;concurent access&lt;/a&gt; issues.
For instance let’s say two players touch the target at the same time.
Who gets +1 point?&lt;/p&gt;

&lt;p&gt;To fix this I hacked together a basic
&lt;a href=&quot;http://en.wikipedia.org/wiki/Mutual_exclusion&quot;&gt;mutex&lt;/a&gt; system
to handle the simple problems that kept on happening. This did the trick
after an hour of code, but it wasn’t something I’d put in production!&lt;/p&gt;

&lt;h2 id=&quot;conclusion&quot;&gt;Conclusion&lt;/h2&gt;

&lt;p&gt;Overall I’m pretty happy with the results.
Even with my lack of experience in the subject I still got
something running and gained a better grasp of why game developers
tremble when you mention online multiplayer.&lt;/p&gt;

&lt;p&gt;Now I think the next step would be to design a game taking the
constraints discovered into account in order to simplify development. You don’t want a
game where precision and timing is key.
You could instead create a massively online turn-by-turn game and
save yourself major headaches while still producing something fun! It all
depends if you seek a technical challenge or if you just want to create
a cool project.&lt;/p&gt;

&lt;p&gt;Also I’ll need to find a graphic designer because my game looked like shit, but
that’s another story.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/assets/blog/screengame.png&quot; alt=&quot;the game&quot; style=&quot;margin:20px auto; display: block&quot; /&gt;&lt;/p&gt;

</content>
   </entry>
  
 
  
   <entry>
     <title>I Left Tigerlily</title>
     <link href="http://marcgg.com/blog/2013/01/06/left-tigerlily-job"/>
     <updated>2013-01-06T00:00:00+01:00</updated>
     <id>http://marcgg.com/blog/2013/01/06/left-tigerlily-job</id>
     <content type="html">&lt;p&gt;I joined &lt;a href=&quot;http://tigerlilyapps.com&quot;&gt;Tigerlily&lt;/a&gt; even before it was called that and, for 3 years, I contributed to the creation of &lt;a href=&quot;http://www.tigerlilyapps.com/products&quot;&gt;amazing products&lt;/a&gt; that are now used by major companies in France and abroad. We built a great team of very talented people, brought innovation to how brands would interact with their users on social networks and always thrived to be the best at what we’d put our minds into.&lt;/p&gt;

&lt;p&gt;It was a great experience in which I learned a lot and enjoyed the &lt;a href=&quot;/2011/12/12/developer-from-ssii-to-startup/&quot;&gt;startup atmosphere&lt;/a&gt;. I became really invested in the project and became the lead developer, but now I feel that it is time for another adventure.&lt;/p&gt;

&lt;p&gt;There are a few personal reasons that made me decide to leave. The main one is the opportunity that was given to me by &lt;a href=&quot;http://www.drivy.com/&quot;&gt;Drivy&lt;/a&gt; (&lt;a href=&quot;http://blog.drivy.com/2013/voiturelib-change-de-nom-et-devient-drivy/&quot;&gt;formerly known as VoitureLib&lt;/a&gt;), the startup I’m going to join.&lt;/p&gt;

&lt;p&gt;This company is centered around a product that can be roughly summarized by « It’s like &lt;a href=&quot;https://www.airbnb.com/&quot;&gt;AirBnB&lt;/a&gt;, but for cars ». The idea of &lt;a href=&quot;http://vimeo.com/14408878&quot;&gt;collaborative consumption&lt;/a&gt; always attracted me because I think this is what will make a difference in the long run. Instead of buying products we barely need, why not collaborate? Picture a city where you can get a car, quickly, for cheap and without having to go through the hassle of the main renting companies. That’d be pretty cool!&lt;/p&gt;

&lt;p&gt;On the technical side, yes, I’ll still be working with &lt;a href=&quot;http://rubyonrails.org/&quot;&gt;Ruby On Rails&lt;/a&gt;. Of course changing job will put me in front of new problems to solve or ones I haven’t tackled in years, so it’s going to be interesting!&lt;/p&gt;

&lt;p&gt;Don’t get me wrong, I still think that what Tigerlily is doing is cool and that the team is amazing. I simply feel like I’ve done everything I needed to do there and that I must seek something different. It’s very hard to leave the people and not be able to contribute to the progress the company will make, but there are times when you have to look for something else.&lt;/p&gt;

&lt;p&gt;Life, heh.&lt;/p&gt;

&lt;p&gt;I wish the best to the Tigerlily team, and now I’m looking forward to my first day tomorrow!&lt;/p&gt;
</content>
   </entry>
  
 
  
   <entry>
     <title>How We Made Third Place At AngelHack Paris</title>
     <link href="http://marcgg.com/blog/2012/12/10/angelhack-third-place-paris-hackathon"/>
     <updated>2012-12-10T00:00:00+01:00</updated>
     <id>http://marcgg.com/blog/2012/12/10/angelhack-third-place-paris-hackathon</id>
     <content type="html">&lt;p&gt;A couple of weeks ago &lt;a href=&quot;http://twitter.com/kevintunc&quot;&gt;Kevin&lt;/a&gt;, &lt;a href=&quot;http://twitter.com/etiennebarrie&quot;&gt;Étienne&lt;/a&gt;, &lt;a href=&quot;http://twitter.com/benjaminbouwyn&quot;&gt;Benjamin&lt;/a&gt;, &lt;a href=&quot;http://twitter.com/emilanddc&quot;&gt;Emiland&lt;/a&gt; and I decided to go to the the Paris’ session of &lt;a href=&quot;http://angelhack.com&quot;&gt;AngelHack&lt;/a&gt;. This is a worldwide &lt;a href=&quot;http://en.wikipedia.org/wiki/Hackathon&quot;&gt;hackathon&lt;/a&gt; with fancy &lt;a href=&quot;http://angelhack.com/#sponsors&quot;&gt;sponsors&lt;/a&gt; giving you the opportunity to build and pitch a new product in 24 hours. This edition gathered 165 attendees and 47 projects.&lt;/p&gt;

&lt;p&gt;In this article I’ll try to present what we did while hopefully recreating a bit the experience and giving some tips.&lt;/p&gt;

&lt;h2 id=&quot;brainstorming&quot;&gt;Brainstorming&lt;/h2&gt;

&lt;p&gt;Two weeks prior, we started brainstorming over lunch. We knew we wanted to make a product with a positive concept, original if possible, and not try to build yet another Twitter connected app plugging your instagram to your last.fm account or whatever.&lt;/p&gt;

&lt;p&gt;We started by talking about a time sharing solution based on the concept that 1 hour of someone is worth 1 hour of anyone else. You would give a way for people to exchange services. Since there was already a lot of projects doing this we focused on the education niche: how we could apply this idea to make teaching better. From this idea we jumped to sharing goods. From sharing to trading, to giving.&lt;/p&gt;

&lt;p&gt;We liked the idea of giving objects, but &lt;a href=&quot;http://www.freecycle.org/&quot;&gt;some websites&lt;/a&gt; did that already, so we looked for incentives for people to give away their things and found the idea of tracking every steps of an object’s life very interesting. This concept has a lot of potential. It not only made giving an object more fun, it could also lead to great stories and maybe give the feeling that property can be temporary, lasting just long enough to have an experience.&lt;/p&gt;

&lt;h2 id=&quot;getting-ready&quot;&gt;Getting Ready&lt;/h2&gt;

&lt;p&gt;According to the &lt;a href=&quot;http://angelhack.com/rules&quot;&gt;rules&lt;/a&gt; of AngelHack, you can’t start coding before the limit, but you are allowed to prepare wireframes and use cases… so we did that!&lt;/p&gt;

&lt;div style=&quot;text-align: center&quot;&gt;&lt;img style=&quot;width: 320px; float: right;&quot; src=&quot;http://distilleryimage7.instagram.com/8e2b7cae3b1a11e2ab4c22000a1faffd_7.jpg&quot; /&gt;&lt;img style=&quot;width: 320px; float: left; margin: 0px !important;&quot; src=&quot;/assets/blog/ready.png&quot; /&gt;&lt;/div&gt;

&lt;div style=&quot;clear:both&quot;&gt;&amp;nbsp;&lt;/div&gt;

&lt;p&gt;The hardest part at that point was to determine what our minimal viable product would be.&lt;/p&gt;

&lt;p&gt;In this kind of situation it is very easy to get side tracked and try to build too much. Obviously you want to make your project as good as possible, with a ton of awesome features and shiny graphics. The bad news is, by doing that, you’ll end up with nothing, or an app messy and bugged beyond belief. We also knew we’d only get 2 minutes to present our work… which is REALLY short. Therefore it was important to focus and get the most important feature done and polished.&lt;/p&gt;

&lt;p&gt;Tech-wise, the stack was pretty obvious since we are all well versed with Ruby on Rails and wanted to get the project as complete as possible. However we left some room for improvisation in terms of what &lt;a href=&quot;http://en.wikipedia.org/wiki/RubyGems&quot;&gt;gems&lt;/a&gt; or database we’d use.&lt;/p&gt;

&lt;p&gt;The day before the hackathon, in order to gain some time, we prepared how the first hour would go, dispatching tasks and so on.&lt;/p&gt;

&lt;h2 id=&quot;hacking&quot;&gt;Hacking&lt;/h2&gt;

&lt;p&gt;The first day started around 9am with presentations, pitches from teams missing members and sponsors. Around noon we started coding. Right away we got some issues with the internet, leading to my deepest despair as we installed most of what we needed to work, but not everything. After a while it got fixed and we were finally able to install the gems we needed.&lt;/p&gt;

&lt;div style=&quot;text-align:center&quot;&gt;&lt;img style=&quot;width: 500px;&quot; src=&quot;/assets/blog/githack.png&quot; /&gt;&lt;/div&gt;

&lt;p&gt;In the middle of the development we got the crazy idea of switching database from MySQL to Posgres in case we’d need it for its geospatial features. It didn’t break everything we made before or destroy one of our dev machine, which was pretty good.&lt;/p&gt;

&lt;p&gt;We also quickly got the need to get everyone to test the site. Since the non technical people on the team didn’t have a laptop fully setup for development, we had to deploy the project to Heroku. This lead to an awesome moment where we had a problem and just had to turn around to get help from the guys on the Heroku stand sitting feets away from us.&lt;/p&gt;

&lt;p&gt;Since we like the added challenge, one of our team member had to leave
for a couple of hours to see a &lt;a href=&quot;http://www.youtube.com/watch?v=56E8yYgLNHE&quot;&gt;Crystal Castle&lt;/a&gt;
concert nearby… but it worked out fine and to our surprise,
the minimal viable product was more or less ready around 4am! This was great
news because it meant that we could spend the remaining time adding the extra
features like some Facebook &lt;a href=&quot;https://developers.facebook.com/docs/concepts/opengraph/&quot;&gt;open graph&lt;/a&gt;
 or a better integration of &lt;a href=&quot;http://mapbox.com/&quot;&gt;mapbox&lt;/a&gt; to show how an object travelled.&lt;/p&gt;

&lt;div style=&quot;text-align: center&quot;&gt;&lt;img style=&quot;width: 350px; float: right;&quot; src=&quot;/assets/blog/screen2.png&quot; /&gt;&lt;img style=&quot;width: 350px; float: left; margin: 0px !important;&quot; src=&quot;/assets/blog/screen1.png&quot; /&gt;&lt;/div&gt;

&lt;div style=&quot;clear:both&quot;&gt;&amp;nbsp;&lt;/div&gt;

&lt;p&gt;It’s also good to note that at that point we already entered the phase where we didn’t really cared
about best practices, and it shows a lot in our &lt;a href=&quot;https://github.com/marcgg/thegoodslife/commits/master&quot;&gt;git log&lt;/a&gt;.&lt;/p&gt;

&lt;div style=&quot;text-align:center&quot;&gt;&lt;img style=&quot;width: 500px;&quot; src=&quot;/assets/blog/gitlol.png&quot; /&gt;&lt;/div&gt;

&lt;p&gt;This is when I decided to get a couple hours of sleep while others stayed to work a bit more. Some will say that &lt;a href=&quot;/assets/blog/sleep.jpg&quot;&gt;sleep is for the weak&lt;/a&gt;, but I still think that getting rest in a hackathon is important. When you need to be able to focus and think, it’s always better to have some kind of sanity left or you’ll just end up coding bugs after bugs and get frustrated.&lt;/p&gt;

&lt;p&gt;There is also the solution of some of my teammates which was taking advantage of the free Redbulls. I guess it can work too.&lt;/p&gt;

&lt;div style=&quot;width:640px; margin: auto&quot;&gt;
&lt;iframe width=&quot;640&quot; height=&quot;400&quot; src=&quot;http://www.youtube.com/embed/c2iqbAirnAk?rel=0&quot; frameborder=&quot;0&quot;&gt;Loading&lt;/iframe&gt;
&lt;/div&gt;

&lt;h2 id=&quot;pitching&quot;&gt;Pitching&lt;/h2&gt;

&lt;p&gt;Some of us started to prepare the pitch, while others were fixing the
last remaining bugs. For this presentation we decided before that we’d do a
a couple of slides followed by a screencast serving as demo.
This was a choice in order to avoid internet connections issues, aspect ratio problems on the video projector…
or really any Murphy’s law related incident.&lt;/p&gt;

&lt;div style=&quot;width:560px; margin: auto&quot;&gt;
&lt;iframe width=&quot;560&quot; height=&quot;315&quot; src=&quot;http://www.youtube.com/embed/mDdNOf0EKy4?rel=0&quot; frameborder=&quot;0&quot;&gt;Loading&lt;/iframe&gt;
&lt;/div&gt;

&lt;p&gt;While waiting we got to see the other teams’ presentation. When it was
close to our turn we were sent to another room, and let me tell you that even
I wasn’t the one giving the presentation,
&lt;a href=&quot;http://emiland.me/&quot;&gt;Emiland&lt;/a&gt; was, but I was stressing out for him.
I got the opportunity to pitch at the
&lt;a href=&quot;http://blog.tigerlilyapps.com/en/tigerlily-wins-the-facebook-mobile-hack-with-watchify-a-social-tv-web-app/&quot;&gt;last hackathon&lt;/a&gt;
I participated in, so I know how hard it can be. The fact that everything was in english
and we’re not native speakers didn’t help either.&lt;/p&gt;

&lt;div style=&quot;text-align:center&quot;&gt;&lt;img style=&quot;width: 500px;&quot; src=&quot;/assets/blog/pres.png&quot; /&gt;&lt;/div&gt;

&lt;p&gt;Overall the presentation went well, even if I failed to answer a question while
trying to save Emiland from failing to answer another question. We got
some very good feedbacks from the judges and then had to wait.&lt;/p&gt;

&lt;p&gt;After what seemed like a very long time, the winners and prizes were announced:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;(1) Lugga.me, Track your bag talk to her. Tickets to San Francisco.&lt;/li&gt;
  &lt;li&gt;(2) Cubes, Unleash Your God Power. Tickets to San Francisco.&lt;/li&gt;
  &lt;li&gt;(3) The Goods Life, Give your goods a second life - or a third. 5 Macbook Pro 13” Retina Display.&lt;/li&gt;
  &lt;li&gt;(4) Hvid.io, World Wide Watch - Watch our World live. 3 iPad mini.&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&quot;conclusion&quot;&gt;Conclusion&lt;/h2&gt;

&lt;p&gt;While we didn’t make it to San Francisco we still got a cool prize
courtesy of &lt;a href=&quot;http://www.heroku.com/&quot;&gt;Heroku&lt;/a&gt; and
managed to finish our project. It was also a great experience to create
something from the ground up quickly and get instantly feedbacks on it.&lt;/p&gt;

&lt;p&gt;I’m very proud of what we accomplished during this weekend. The team was
awesome as everybody had complementary skills and each team member had a major impact on the
result. This left me with the feeling that with the right group of people
and a good mindset you can really create great things.&lt;/p&gt;

&lt;p&gt;Overall I’d advise anyone that like &lt;a href=&quot;/2012/01/09/start-working-on-your-side-project/&quot;&gt;starting projects&lt;/a&gt;
to participate in events like these. Gather a group of people or just find
teammates on the spot, it’ll be great.&lt;/p&gt;

&lt;p&gt;Exhausting, but great.&lt;/p&gt;

&lt;div style=&quot;text-align:center&quot;&gt;&lt;img style=&quot;&quot; src=&quot;/assets/blog/team.png&quot; /&gt;&lt;/div&gt;
</content>
   </entry>
  
 
  
   <entry>
     <title>Web Views &amp; RubyMotion</title>
     <link href="http://marcgg.com/blog/2012/11/12/webviews-javascript-ios-rubymotion"/>
     <updated>2012-11-12T00:00:00+01:00</updated>
     <id>http://marcgg.com/blog/2012/11/12/webviews-javascript-ios-rubymotion</id>
     <content type="html">&lt;p&gt;Here we go, another article on &lt;a href=&quot;http://www.rubymotion.com/&quot;&gt;RubyMotion&lt;/a&gt;!
For those of you that don’t know what’s that’s all about, it’s a
toolchain created by &lt;a href=&quot;https://twitter.com/lrz&quot;&gt;Laurent Sansonetti&lt;/a&gt;
(of &lt;a href=&quot;http://macruby.org/&quot;&gt;MacRuby&lt;/a&gt; fame)
allowing you to create native iOS application using
&lt;a href=&quot;http://www.ruby-lang.org/&quot;&gt;Ruby&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;I like it a lot, but please keep in mind that while I have a decent knowledge of Ruby, I’m
only using RubyMotion on a side project. I worked hard to get everything here
to work, but it still might not be the most
efficient way of doing it. If you do know a better solution, please
share it in the comments and I’ll update the article.&lt;/p&gt;

&lt;h2 id=&quot;our-objective&quot;&gt;Our Objective&lt;/h2&gt;

&lt;p&gt;Right now the general feeling is that in order to get the highest level of quality in
an app, you have to go native. I’m not disputing that, but there are some cases
where you just need to have some HTML, JS and CSS displaying. To do that,
the best way is to use the
&lt;a href=&quot;http://developer.apple.com/library/ios/#documentation/uikit/reference/UIWebView_Class/Reference/Reference.html&quot;&gt;UIWebView&lt;/a&gt;
element. It allows you to open html file and display them as if you were
in a browser.&lt;/p&gt;

&lt;p&gt;In this article I’ll try to demonstrate how to:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;Open a given website in a simple web view within a RubyMotion project.&lt;/li&gt;
  &lt;li&gt;Open a locally stored HTML file&lt;/li&gt;
  &lt;li&gt;Customize a bit the feel of the web view&lt;/li&gt;
  &lt;li&gt;Send a signal from the web view back to the application&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&quot;prerequisites&quot;&gt;Prerequisites&lt;/h2&gt;

&lt;p&gt;I won’t get into the details on how to set up a project and will assume you have basic knowledge of how this works.
If you never created something with RubyMotion, please take a look at &lt;a href=&quot;http://rubymotion-tutorial.com/1-hello-motion/&quot;&gt;this tutorial&lt;/a&gt;
 before reading the rest of this article.&lt;/p&gt;

&lt;p&gt;RubyMotion uses &lt;a href=&quot;http://www.ruby-lang.org/&quot;&gt;Ruby&lt;/a&gt;. If you are not familiar with it, there
are tons of tutorials and books on how to code with this language. I
recommend &lt;a href=&quot;http://ruby.learncodethehardway.org/&quot;&gt;Learn Ruby The Hard
Way&lt;/a&gt; by &lt;a href=&quot;http://zedshaw.com/&quot;&gt;Zed A. Shaw&lt;/a&gt;.&lt;/p&gt;

&lt;h2 id=&quot;setting-up-the-appdelegate&quot;&gt;Setting up the AppDelegate&lt;/h2&gt;

&lt;p&gt;This is pretty basic, we just set up a
&lt;a href=&quot;http://rubymotion-tutorial.com/3-controllers/&quot;&gt;controller&lt;/a&gt;
and assign it to be the root.&lt;/p&gt;

&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;ruby&quot;&gt;&lt;span class=&quot;k&quot;&gt;class&lt;/span&gt; &lt;span class=&quot;nc&quot;&gt;AppDelegate&lt;/span&gt;
  &lt;span class=&quot;k&quot;&gt;def&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;application&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;application&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;ss&quot;&gt;didFinishLaunchingWithOptions&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;launchOptions&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
    &lt;span class=&quot;vi&quot;&gt;@window&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;no&quot;&gt;UIWindow&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;alloc&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;initWithFrame&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;no&quot;&gt;UIScreen&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;mainScreen&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;bounds&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;

    &lt;span class=&quot;n&quot;&gt;main_controller&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;no&quot;&gt;MainController&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;alloc&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;init&lt;/span&gt;
    &lt;span class=&quot;vi&quot;&gt;@window&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;rootViewController&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;main_controller&lt;/span&gt;

    &lt;span class=&quot;vi&quot;&gt;@window&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;rootViewController&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;wantsFullScreenLayout&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;kp&quot;&gt;true&lt;/span&gt;
    &lt;span class=&quot;vi&quot;&gt;@window&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;makeKeyAndVisible&lt;/span&gt;
    &lt;span class=&quot;kp&quot;&gt;true&lt;/span&gt;
  &lt;span class=&quot;k&quot;&gt;end&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;end&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;h2 id=&quot;opening-a-given-url&quot;&gt;Opening A Given URL&lt;/h2&gt;

&lt;p&gt;We’ll create the structure for a basic controller and set its view to be
a UIWebView. Then we’ll build an URL and load it.&lt;/p&gt;

&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;ruby&quot;&gt;&lt;span class=&quot;k&quot;&gt;class&lt;/span&gt; &lt;span class=&quot;nc&quot;&gt;MainController&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;lt;&lt;/span&gt; &lt;span class=&quot;no&quot;&gt;UIViewController&lt;/span&gt;

  &lt;span class=&quot;k&quot;&gt;def&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;initWithNibName&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;name&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;ss&quot;&gt;bundle&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;bundle&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;super&lt;/span&gt;
    &lt;span class=&quot;nb&quot;&gt;self&lt;/span&gt;
  &lt;span class=&quot;k&quot;&gt;end&lt;/span&gt;

  &lt;span class=&quot;k&quot;&gt;def&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;loadView&lt;/span&gt;
    &lt;span class=&quot;nb&quot;&gt;self&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;view&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;no&quot;&gt;UIWebView&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;alloc&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;init&lt;/span&gt;
  &lt;span class=&quot;k&quot;&gt;end&lt;/span&gt;

  &lt;span class=&quot;k&quot;&gt;def&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;viewDidLoad&lt;/span&gt;
    &lt;span class=&quot;nb&quot;&gt;self&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;view&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;loadRequest&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;
      &lt;span class=&quot;no&quot;&gt;NSURLRequest&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;requestWithURL&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;no&quot;&gt;NSURL&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;URLWithString&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&amp;quot;http://marcgg.com&amp;quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;))&lt;/span&gt;
    &lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
  &lt;span class=&quot;k&quot;&gt;end&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;end&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p class=&quot;sidenote&quot;&gt;
EDIT: I moved the UIWebView.alloc.init to loadView
to avoid creating a UIView just to throw it away. Thanks to
&lt;a href=&quot;https://twitter.com/colinta&quot;&gt;Colin&lt;/a&gt; for pointing this out.
&lt;/p&gt;

&lt;p&gt;If we slow down things a bit, we have this:&lt;/p&gt;

&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;ruby&quot;&gt;&lt;span class=&quot;c1&quot;&gt;# Creating a URL&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;url&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;no&quot;&gt;NSURL&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;URLWithString&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&amp;quot;http://marcgg.com&amp;quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;

&lt;span class=&quot;c1&quot;&gt;# Creating a request based on the URL&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;request&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;no&quot;&gt;NSURLRequest&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;requestWithURL&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;url&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;

&lt;span class=&quot;c1&quot;&gt;# Loading the request into the view (that is set to be our UIWebView)&lt;/span&gt;
&lt;span class=&quot;nb&quot;&gt;self&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;view&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;loadRequest&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;request&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;Now if we run rake we see my website, and how badly it’s optimized for
mobile:&lt;/p&gt;

&lt;div style=&quot;text-align: center&quot;&gt;&lt;img src=&quot;/assets/misc/uiweb1.png&quot; /&gt;&lt;/div&gt;

&lt;h2 id=&quot;opening-a-local-file&quot;&gt;Opening A Local File&lt;/h2&gt;

&lt;p&gt;It’s good to open a website, but what if you don’t have internet access,
or if you don’t need to load anything since you have already everything
you need ? That’s when you load your locally stored file.&lt;/p&gt;

&lt;p&gt;First, create an &lt;code&gt;index.html&lt;/code&gt; file that you’ll store in &lt;code&gt;/resources&lt;/code&gt;.
Put whatever HTML you want inside, maybe a background color or something
similar to know if the file loaded properly.&lt;/p&gt;

&lt;p&gt;Once it’s done, tweak the controller so that it knows what’s up.&lt;/p&gt;

&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;ruby&quot;&gt;&lt;span class=&quot;k&quot;&gt;def&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;viewDidLoad&lt;/span&gt;
  &lt;span class=&quot;n&quot;&gt;path&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;no&quot;&gt;NSBundle&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;mainBundle&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;pathForResource&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;&amp;#39;index&amp;#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;ss&quot;&gt;ofType&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;&amp;#39;html&amp;#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
  &lt;span class=&quot;n&quot;&gt;url&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;no&quot;&gt;NSURL&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;fileURLWithPath&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;path&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
  &lt;span class=&quot;nb&quot;&gt;self&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;view&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;loadRequest&lt;/span&gt; &lt;span class=&quot;no&quot;&gt;NSURLRequest&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;requestWithURL&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;url&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;end&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;Run rake again, and you should see your file displaying.&lt;/p&gt;

&lt;div style=&quot;text-align: center&quot;&gt;&lt;img src=&quot;/assets/misc/uiweb2.png&quot; /&gt;&lt;/div&gt;

&lt;p&gt;At this point you can customize the HTML however you want. Keep in mind
that if you use other files (css, js, images), they need to be stored in
&lt;code&gt;/ressources&lt;/code&gt; as well in order to be accessible. You might also need to
think about how you want to handle retina/non retina images.&lt;/p&gt;

&lt;h2 id=&quot;customize-the-uiwebview&quot;&gt;Customize The UIWebView&lt;/h2&gt;

&lt;p&gt;Here what I wanted to do is to forbid scrolling and just have a nice,
fixed, piece of HTML. This way it’ll feel more like a native piece of UI
than a web browser. To do so, you can change these parameters:&lt;/p&gt;

&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;ruby&quot;&gt;&lt;span class=&quot;nb&quot;&gt;self&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;view&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;scrollView&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;scrollEnabled&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;kp&quot;&gt;false&lt;/span&gt;
&lt;span class=&quot;nb&quot;&gt;self&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;view&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;scrollView&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;bounces&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;kp&quot;&gt;false&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;h2 id=&quot;javascript-communication&quot;&gt;Javascript Communication&lt;/h2&gt;

&lt;p&gt;It’s the part where it gets a bit more tricky. Here I want to have a
link somewhere in my HTML that triggers something in my RubyMotion code.
It could be a “cancel” link, a form… it doesn’t matter.&lt;/p&gt;

&lt;p&gt;To do that we’re going to use the logic behind &lt;code&gt;shouldStartLoadWithRequest&lt;/code&gt;
and the whole &lt;a href=&quot;http://developer.apple.com/library/ios/#documentation/uikit/reference/UIWebViewDelegate_Protocol/Reference/Reference.html&quot;&gt;UIWebViewDelegate&lt;/a&gt; thing. I’m not an iOS master yet, so please bear with me on
the domain-specific vocabulary.&lt;/p&gt;

&lt;p&gt;First we’re going to add a delegate to our view. Here I’ll use the
current controller because it’s a rather small project, but feel free to
use any object you want.&lt;/p&gt;

&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;ruby&quot;&gt;&lt;span class=&quot;nb&quot;&gt;self&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;view&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;delegate&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;self&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;Now we can use the fact that our controller, being the delegate of a
UIWebview, will have its shouldStartLoadWithRequest method called before
any frame is loaded. Let’s write our own method and see how it goes.&lt;/p&gt;

&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;ruby&quot;&gt;&lt;span class=&quot;k&quot;&gt;def&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;webView&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;inWeb&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;ss&quot;&gt;shouldStartLoadWithRequest&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;inRequest&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;ss&quot;&gt;navigationType&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;inType&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
  &lt;span class=&quot;nb&quot;&gt;puts&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;inRequest&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;URL&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;absoluteString&lt;/span&gt;
  &lt;span class=&quot;kp&quot;&gt;true&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;end&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;Here we have the bare minimum to get started. You’ll notice we have a couple of
parameters. In this article I’ll just use the request, but know that the
others can be usefull too. Read the
&lt;a href=&quot;http://developer.apple.com/library/ios/#documentation/uikit/reference/UIWebViewDelegate_Protocol/Reference/Reference.html&quot;&gt;documentation&lt;/a&gt;
if you want to learn more.&lt;/p&gt;

&lt;p&gt;Now if we launch rake one more time and look at the trace, we can see the
current path to the local file we’re loading.&lt;/p&gt;

&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;ruby&quot;&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;main&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;gt;&lt;/span&gt; &lt;span class=&quot;ss&quot;&gt;file&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;sr&quot;&gt;//&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;your_path&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;/&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;to&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;/&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;your_project&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;app&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;/&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;index&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;html&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;This is useless, but now let’s add a link in the &lt;code&gt;index.html&lt;/code&gt; file. Now
if you point it to a regular website, it’ll just load it. It’s not what
we want right now. Instead we’ll create our own protocol (lol) as such:&lt;/p&gt;

&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;html&quot;&gt;&lt;span class=&quot;nt&quot;&gt;&amp;lt;a&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;href=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&amp;quot;myapp://do/something&amp;quot;&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&amp;gt;&lt;/span&gt;Click this&lt;span class=&quot;nt&quot;&gt;&amp;lt;/a&amp;gt;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;By now you must have figured out where we’re heading like that. Since we
have our callback thanks to the UIWebViewDelegate protocol, we can parse
the URL and do process it how we want. I added a basic example below,
but really you can do whatever.&lt;/p&gt;

&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;ruby&quot;&gt;&lt;span class=&quot;k&quot;&gt;def&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;webView&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;inWeb&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;ss&quot;&gt;shouldStartLoadWithRequest&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;inRequest&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;ss&quot;&gt;navigationType&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;inType&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
  &lt;span class=&quot;k&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;inRequest&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;URL&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;absoluteString&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=~&lt;/span&gt; &lt;span class=&quot;sr&quot;&gt;/myapp:\/\//&lt;/span&gt;
    &lt;span class=&quot;nb&quot;&gt;puts&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&amp;quot;Do something!&amp;quot;&lt;/span&gt;
  &lt;span class=&quot;k&quot;&gt;else&lt;/span&gt;
    &lt;span class=&quot;nb&quot;&gt;puts&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&amp;quot;This is just another link&amp;quot;&lt;/span&gt;
  &lt;span class=&quot;k&quot;&gt;end&lt;/span&gt;
  &lt;span class=&quot;kp&quot;&gt;true&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;end&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;In the same fashion you can trigger the page change using javascript.
This should be pretty basic stuff here.&lt;/p&gt;

&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;javascript&quot;&gt;&lt;span class=&quot;nb&quot;&gt;window&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;location&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&amp;quot;myapp://some_awesome/message&amp;quot;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;By now you should have noticed how I always return true. It’s because if
you return false the frame won’t load. You can use this fact to forbid
the user to click certain links on the page, or disable browsing
altogether.&lt;/p&gt;

&lt;h2 id=&quot;a-quick-security-note&quot;&gt;A Quick Security Note&lt;/h2&gt;

&lt;p&gt;We now have an HTML page talking to your iOS app ! Pretty cool, but be carefull
on how you allow this to happen, since you really don’t want
any website sending funky signals to your app. Make sure you don’t
execute any message you receive.&lt;/p&gt;

&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;ruby&quot;&gt;&lt;span class=&quot;k&quot;&gt;def&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;webView&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;inWeb&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;ss&quot;&gt;shouldStartLoadWithRequest&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;inRequest&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;ss&quot;&gt;navigationType&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;inType&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
  &lt;span class=&quot;c1&quot;&gt;# I&amp;#39;m an Idiot&lt;/span&gt;
  &lt;span class=&quot;no&quot;&gt;MyVeryImportantModel&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;send&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;inRequest&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;URL&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;absoluteString&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;end&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;It should be pretty obvious, but it’s still worth mentioning.&lt;/p&gt;

&lt;h2 id=&quot;hurray-&quot;&gt;Hurray !&lt;/h2&gt;

&lt;p&gt;We now have a web view loading a local file and talking to the Ruby part
of the application using Javascript. Neat ! Of course there’s a lot more you can do with
this, and you should probably add some kind of cool DSL in front of it
if you’re going to do this frequently.&lt;/p&gt;

&lt;p&gt;As always, you can look up the whole project on &lt;a href=&quot;https://github.com/marcgg/rubymotion-uiwebview&quot;&gt;github&lt;/a&gt;.
It is compiling and working as I write this article, but keep in mind that RubyMotion is a fast moving
project and it might not be the case in a few months.&lt;/p&gt;
</content>
   </entry>
  
 
  
   <entry>
     <title>Create a Custom Slider With RubyMotion</title>
     <link href="http://marcgg.com/blog/2012/10/22/custom-slider-ios-rubymotion"/>
     <updated>2012-10-22T00:00:00+02:00</updated>
     <id>http://marcgg.com/blog/2012/10/22/custom-slider-ios-rubymotion</id>
     <content type="html">&lt;p&gt;I always liked the idea of developing mobile applications, but also found the Objective C + XCode experience not very enjoyable. I gave alternatives like &lt;a href=&quot;http://www.appcelerator.com/platform/titanium-sdk/&quot;&gt;Titanium&lt;/a&gt; a try, but wasn’t fully convinced. Lately I’ve been getting into &lt;a href=&quot;http://www.rubymotion.com/&quot;&gt;RubyMotion&lt;/a&gt; and so far I’m really impressed by the general feel of it.&lt;/p&gt;

&lt;p&gt;Alas it’s not perfect. My main grief right now about the project
is the terrible lack of documentation.
The community is also still small and while you can still
find &lt;a href=&quot;https://twitter.com/vacawama&quot;&gt;helpful&lt;/a&gt; &lt;a href=&quot;https://twitter.com/julienXX&quot;&gt;people&lt;/a&gt;,
you often end up alone with your code.
That’s why I figured I would contribute my share of blog posts on the subject! Hopefully it’ll help out some people.&lt;/p&gt;

&lt;p&gt;Keep in mind that while I’m well versed in Ruby, I’m quite new to RubyMotion and might make some mistakes… so please comment if I do and I’ll fix the article. RubyMotion is also evolving, therefore while this article works perfectly today, it might not be the case in a few months.&lt;/p&gt;

&lt;p&gt;With all that in mind, let’s get started shall we?&lt;/p&gt;

&lt;h2 id=&quot;prerequisites&quot;&gt;Prerequisites&lt;/h2&gt;

&lt;p&gt;I won’t get into the details on how to set up a project and will assume you have basic knowledge of how this works.
If you never created something with RubyMotion, please take a look at &lt;a href=&quot;http://rubymotion-tutorial.com/1-hello-motion/&quot;&gt;this tutorial&lt;/a&gt;
 before reading the rest of this article.&lt;/p&gt;

&lt;p&gt;RubyMotion uses &lt;a href=&quot;http://www.ruby-lang.org/&quot;&gt;Ruby&lt;/a&gt;. If you are not familiar with it, there
are tons of tutorials and books on how to code with this language. I
recommend &lt;a href=&quot;http://ruby.learncodethehardway.org/&quot;&gt;Learn Ruby The Hard
Way&lt;/a&gt; by &lt;a href=&quot;http://zedshaw.com/&quot;&gt;Zed A. Shaw&lt;/a&gt;.&lt;/p&gt;

&lt;h2 id=&quot;our-objective&quot;&gt;Our Objective&lt;/h2&gt;

&lt;p&gt;I’ll try to explain how to customize a
&lt;a href=&quot;http://developer.apple.com/library/ios/#documentation/uikit/reference/UISlider_Class/Reference/Reference.html&quot;&gt;UISlider&lt;/a&gt;
 to get the look and feel matching the design of your application. 
Here’s what’s the demo code will give you:&lt;/p&gt;

&lt;iframe src=&quot;http://www.screenr.com/embed/v0y8&quot; width=&quot;100%&quot; height=&quot;396&quot; frameborder=&quot;0&quot;&gt;Loading&lt;/iframe&gt;

&lt;h2 id=&quot;setting-up-the-appdelegate&quot;&gt;Setting up the AppDelegate&lt;/h2&gt;

&lt;p&gt;This is pretty basic, we just set up a
&lt;a href=&quot;http://rubymotion-tutorial.com/3-controllers/&quot;&gt;controller&lt;/a&gt;
and assign it to be the root.&lt;/p&gt;

&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;ruby&quot;&gt;&lt;span class=&quot;k&quot;&gt;class&lt;/span&gt; &lt;span class=&quot;nc&quot;&gt;AppDelegate&lt;/span&gt;
  &lt;span class=&quot;k&quot;&gt;def&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;application&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;application&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;ss&quot;&gt;didFinishLaunchingWithOptions&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;launchOptions&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
    &lt;span class=&quot;vi&quot;&gt;@window&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;no&quot;&gt;UIWindow&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;alloc&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;initWithFrame&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;no&quot;&gt;UIScreen&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;mainScreen&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;bounds&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;

    &lt;span class=&quot;n&quot;&gt;main_controller&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;no&quot;&gt;MainController&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;alloc&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;init&lt;/span&gt;
    &lt;span class=&quot;vi&quot;&gt;@window&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;rootViewController&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;main_controller&lt;/span&gt;

    &lt;span class=&quot;vi&quot;&gt;@window&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;rootViewController&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;wantsFullScreenLayout&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;kp&quot;&gt;true&lt;/span&gt;
    &lt;span class=&quot;vi&quot;&gt;@window&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;makeKeyAndVisible&lt;/span&gt;
    &lt;span class=&quot;kp&quot;&gt;true&lt;/span&gt;
  &lt;span class=&quot;k&quot;&gt;end&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;end&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;h2 id=&quot;displaying-a-uislider&quot;&gt;Displaying a UISlider&lt;/h2&gt;

&lt;p&gt;Now we need to create the MainController. I like to put it in app/controllers,
with the usual basic structure.&lt;/p&gt;

&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;ruby&quot;&gt;&lt;span class=&quot;k&quot;&gt;class&lt;/span&gt; &lt;span class=&quot;nc&quot;&gt;MainController&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;lt;&lt;/span&gt; &lt;span class=&quot;no&quot;&gt;UIViewController&lt;/span&gt;
  &lt;span class=&quot;k&quot;&gt;def&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;loadView&lt;/span&gt;
    &lt;span class=&quot;nb&quot;&gt;self&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;view&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;no&quot;&gt;UIView&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;new&lt;/span&gt;
  &lt;span class=&quot;k&quot;&gt;end&lt;/span&gt;

  &lt;span class=&quot;k&quot;&gt;def&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;initWithNibName&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;name&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;ss&quot;&gt;bundle&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;bundle&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;super&lt;/span&gt;
    &lt;span class=&quot;nb&quot;&gt;self&lt;/span&gt;
  &lt;span class=&quot;k&quot;&gt;end&lt;/span&gt;

  &lt;span class=&quot;k&quot;&gt;def&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;viewDidLoad&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;super&lt;/span&gt;
    &lt;span class=&quot;c1&quot;&gt;# Everything is now going to go there&lt;/span&gt;
  &lt;span class=&quot;k&quot;&gt;end&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;end&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;Now you can run the application with rake and it’ll display a black
screen. This means we’re all set up and it’s time to actually start
coding. Everything we’re going to write from now on will be after the super the
viewDidLoad method.&lt;/p&gt;

&lt;p&gt;First, the slider:&lt;/p&gt;

&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;ruby&quot;&gt;&lt;span class=&quot;n&quot;&gt;slider&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;no&quot;&gt;UISlider&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;alloc&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;initWithFrame&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;[[&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;200&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;]&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;320&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;40&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;]]&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;This will create a slider taking the whole width of the screen and position it
more or less in the center. Once it’s created, we need add it to the
view so it’ll display correctly.&lt;/p&gt;

&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;ruby&quot;&gt;&lt;span class=&quot;n&quot;&gt;view&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;addSubview&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;slider&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;Run rake again, and you should see something like this:&lt;/p&gt;

&lt;div style=&quot;text-align: center&quot;&gt;&lt;img src=&quot;/assets/misc/slider1.png&quot; alt=&quot;Custom Sliders Demo&quot; /&gt;&lt;/div&gt;

&lt;p&gt;If you want, you can set the maximum and default values:&lt;/p&gt;

&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;ruby&quot;&gt;&lt;span class=&quot;n&quot;&gt;slider&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;maximumValue&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;100&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;slider&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;value&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;slider&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;maximumValue&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;/&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;2&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;h2 id=&quot;setting-track-images&quot;&gt;Setting Track Images&lt;/h2&gt;

&lt;p&gt;A UISlider is composed of different elements. The sliding thingy is
called the track and the other round thingy you grab to drag is the thumb.
On the left of the thumb we have the minimum track, on the right the
maximum track. The &lt;a href=&quot;http://developer.apple.com/library/ios/#documentation/uikit/reference/UISlider_Class/Reference/Reference.html&quot;&gt;official documentation&lt;/a&gt;
explains that with a better display of vocabulary than I do, but you get the idea.&lt;/p&gt;

&lt;p&gt;Let’s change the track image to display and image.&lt;/p&gt;

&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;ruby&quot;&gt;&lt;span class=&quot;n&quot;&gt;full_image&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;no&quot;&gt;UIImage&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;imageNamed&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&amp;quot;full&amp;quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;empty_image&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;no&quot;&gt;UIImage&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;imageNamed&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&amp;quot;empty&amp;quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;slider&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;setMinimumTrackImage&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;full_image&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;ss&quot;&gt;forState&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;no&quot;&gt;UIControlStateNormal&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;slider&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;setMaximumTrackImage&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;empty_image&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;ss&quot;&gt;forState&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;no&quot;&gt;UIControlStateNormal&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;You can notice that I use two images “full” and “empty”. To get them to
load correctly, put them in the resources folder of your rubymotion
project. If they are PNGs you don’t need to specify the format.&lt;/p&gt;

&lt;p&gt;Right now the minimum track image is stretching to fit its space.
It might be what you want, but that’s not my case so let’s add the
following code before giving the image to the slider.&lt;/p&gt;

&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;ruby&quot;&gt;&lt;span class=&quot;c1&quot;&gt;# You need an image that is the exact size of the slider&lt;/span&gt;
&lt;span class=&quot;c1&quot;&gt;# or else it might not look good&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;full_image&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;full_image&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;resizableImageWithCapInsets&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;
  &lt;span class=&quot;no&quot;&gt;UIEdgeInsetsZero&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;ss&quot;&gt;resizingMode&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;no&quot;&gt;UIImageResizingModeTile&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;At this point we have this:&lt;/p&gt;

&lt;div style=&quot;text-align: center&quot;&gt;&lt;img src=&quot;/assets/misc/slider2.png&quot; alt=&quot;Custom Sliders Demo&quot; /&gt;&lt;/div&gt;

&lt;p&gt;This is pretty good, but the thumb in the middle doesn’t look like it
belongs. Let’s fix that.&lt;/p&gt;

&lt;h2 id=&quot;customizing-the-thumb&quot;&gt;Customizing The Thumb&lt;/h2&gt;

&lt;p&gt;You can pass an image to set the thumb to whatever you want using the
same logic as what we did with the tracks. Personnally I prefer removing
the thumb entirely, so here’s how to do that:&lt;/p&gt;

&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;ruby&quot;&gt;&lt;span class=&quot;n&quot;&gt;slider&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;setThumbImage&lt;/span&gt; &lt;span class=&quot;no&quot;&gt;UIImage&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;alloc&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;ss&quot;&gt;forState&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;no&quot;&gt;UIControlStateNormal&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;This gives you:&lt;/p&gt;

&lt;div style=&quot;text-align: center&quot;&gt;&lt;img src=&quot;/assets/misc/rubymotion_sliders.png&quot; alt=&quot;Custom Sliders Demo&quot; /&gt;&lt;/div&gt;

&lt;p&gt;Of course you could have done something like:&lt;/p&gt;

&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;ruby&quot;&gt;&lt;span class=&quot;n&quot;&gt;whatever&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;no&quot;&gt;UIImage&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;imageNamed&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&amp;quot;whatever&amp;quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;slider&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;setThumbImage&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;whatever&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;ss&quot;&gt;forState&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;no&quot;&gt;UIControlStateNormal&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;h2 id=&quot;making-the-slider-easier-to-slide&quot;&gt;Making The Slider Easier to Slide&lt;/h2&gt;

&lt;p&gt;Right now it’s looking how we want it, but the problem the thumb is
hidden, but you still have to click exactly where it used to be in order
to change the slider’s value. Since the
UISlider is a taller than the default one, you have have to click right
in the middle of your new slider in order to grab it.&lt;/p&gt;

&lt;p&gt;That’s not good UX. I order to avoid this we can enlarge the size of the area that
is selectable:&lt;/p&gt;

&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;ruby&quot;&gt;&lt;span class=&quot;n&quot;&gt;slider&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;trackRectForBounds&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;
  &lt;span class=&quot;no&quot;&gt;CGRect&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;new&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;no&quot;&gt;CGPoint&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;new&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;200&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;200&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;),&lt;/span&gt; &lt;span class=&quot;no&quot;&gt;CGSize&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;new&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;100&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;100&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)))&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;Depending on the size of your images and the general feeling you want to
get, play around with this area you’re defining.&lt;/p&gt;

&lt;h2 id=&quot;thats-it&quot;&gt;That’s It!&lt;/h2&gt;

&lt;p&gt;Obviously these are not the only customizations you can make to a
UISlider, but I think it’s a good start. If people are interested
I might make another one on events or visual tricks you can use
to make a slider look cooler.&lt;/p&gt;

&lt;p&gt;If you find this avalanche of code snippets not very usuable,
you can look at the whole project
on &lt;a href=&quot;https://github.com/marcgg/rubymotion-custom-slider&quot;&gt;github&lt;/a&gt;. It is
compiling and working as I write this article, but keep in mind that
RubyMotion is a fast moving project and it might not be the case in a
few months.&lt;/p&gt;
</content>
   </entry>
  
 
  
   <entry>
     <title>Don’t Accept Brokenness</title>
     <link href="http://marcgg.com/blog/2012/10/15/dont-accept-brokeness-deal-with-annoyances"/>
     <updated>2012-10-15T00:00:00+02:00</updated>
     <id>http://marcgg.com/blog/2012/10/15/dont-accept-brokeness-deal-with-annoyances</id>
     <content type="html">&lt;p&gt;For a while I had a problem with my jaw. Ten years back I got elbowed in the face (don’t ask), and since then I had trouble yawning or just opening my mouth wide open. I could try to do it, but it would result in the whole thing locking and a good deal of pain.&lt;/p&gt;

&lt;p&gt;The first months I was annoyed, but as time passed I learned to live with it. After all, it was really nothing important. I could eat, speak and do pretty much anything normally. I accepted this as part of how my body functions. Some can’t do a right split, I can’t open my mouth that wide, who cares? I learned how to avoid doing this, and carried on.&lt;/p&gt;

&lt;p&gt;This year I had to see a doctor regarding some unrelated issue, and I ended up mentioning this fact. She told me that she could take a look at it and, in literally a matter of seconds, she fixed the problem. It’s been a few months and while it’s still not perfect, it’s incredibly better.&lt;/p&gt;

&lt;p&gt;In seconds a ten years problem was fixed.&lt;/p&gt;

&lt;p&gt;Seconds.&lt;/p&gt;

&lt;p&gt;Of course this got me thinking: what else is broken that I’m accepting as it is ? At first I went through all the very minor physical problem I was having and discussed it with her. While some were fixable, others were not and some could be improved.&lt;/p&gt;

&lt;p&gt;But here’s the thing, that approach doesn’t only apply to health issues. As a matter of fact it works for pretty much everything ! When facing a problem, the easiest response is to simply accept it and deal with it… while sometimes trying to fix the problem is actually faster, requires less work and is less expensive!&lt;/p&gt;

&lt;p&gt;Another example I could give is a door in my appartment that would require you lifting a bit the handle before being able to close it. I did that for months until one day I decided to stop for one second and look at what was going on. In ten minutes I figured it out and was able to fix it by replacing a screw or two.&lt;/p&gt;

&lt;p&gt;These are just my examples, but for you it could be one piece of legacy code that’s always getting in your way inside your application, or this door that just won’t open without having to jiggle your keys for minutes. It could be this light that flickers a bit, or the fact that you keep on smashing your toes in the same piece of furniture.&lt;/p&gt;

&lt;p&gt;All these are minor inconveniences, but you deal with them every day. They waste your time, build frustration, and you don’t even see it because it’s always been like that as far as you can remember!&lt;/p&gt;

&lt;p&gt;I’m not saying that everything is fixable, because it’s not true. I’m saying you should take a minute every once in a while to ask yourself if this tiny thing really is unavoidable, if doing something to fix it wouldn’t actually be easier than dealing with it every day.&lt;/p&gt;
</content>
   </entry>
  
 
  
   <entry>
     <title>How I Avoid Thumb Pain From Too Much Coding</title>
     <link href="http://marcgg.com/blog/2012/10/01/thumb-pain-developer-keyboard"/>
     <updated>2012-10-01T00:00:00+02:00</updated>
     <id>http://marcgg.com/blog/2012/10/01/thumb-pain-developer-keyboard</id>
     <content type="html">&lt;p&gt;Most coders complain about wrist pain. For some reason I never had major trouble there except when working for hours on a laptop. My main issue seemed more original and was located in &lt;a href=&quot;http://en.wikipedia.org/wiki/Thenar_eminence&quot;&gt;the group of muscles controlling the thumb&lt;/a&gt;. Suddently it would hurt for days, then go away, then come back… good times.&lt;/p&gt;

&lt;p&gt;Eventually I mentioned it to a kinesiotherapist, and the conversation was very similar to the famous joke that goes something like:&lt;/p&gt;

&lt;blockquote&gt;
  &lt;p&gt;« Doctor, it hurts when I do this.&lt;/p&gt;

  &lt;p&gt;-Don’t do it then! »&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;Of course this got me thinking: why do I use my thumb so much?&lt;/p&gt;

&lt;p&gt;Turns out that the movement of pressing a combination of keys was the thing causing the pain. Of course doing it every once in a while has no consequence, but as a web developer I spend my day opening browser tabs (cmd+T), refreshing pages (cmd+R) and copy and pasting (cmd+C, cmd+V).&lt;/p&gt;

&lt;div style=&quot;width:560px; margin: auto&quot;&gt;
&lt;object width=&quot;560&quot; height=&quot;315&quot;&gt;&lt;param name=&quot;movie&quot; value=&quot;http://www.youtube.com/v/tCJSJBV85cw?version=3&amp;amp;hl=fr_FR&amp;amp;rel=0&quot; /&gt;&lt;param name=&quot;allowFullScreen&quot; value=&quot;true&quot; /&gt;&lt;param name=&quot;allowscriptaccess&quot; value=&quot;always&quot; /&gt;&lt;embed src=&quot;http://www.youtube.com/v/tCJSJBV85cw?version=3&amp;amp;hl=fr_FR&amp;amp;rel=0&quot; type=&quot;application/x-shockwave-flash&quot; width=&quot;560&quot; height=&quot;315&quot; allowscriptaccess=&quot;always&quot; allowfullscreen=&quot;true&quot; /&gt;&lt;/object&gt;
&lt;/div&gt;

&lt;p&gt;As you can see on this terribly filmed video, I tend to twist a bit the thumb to press both keys at the same time. It’s not much but because it’s not a natural position, the repetition of this hundreds of times a day would cause pain.&lt;/p&gt;

&lt;p&gt;My first idea was to force myself to use the second cmd button, but I didn’t like it since it would require taking my hand off the mouse for a second. What worked for me was &lt;a href=&quot;http://stackoverflow.com/questions/127591/using-caps-lock-as-esc-in-mac-os-x&quot;&gt;changing the mapping of Caps Lock&lt;/a&gt; to Cmd so I could do the gesture with one hand. This allowed me to use my little finger for these action and avoid stressing the thumb muscles.&lt;/p&gt;

&lt;p&gt;I’ve been doing this for a few months now, and I do see a difference. If you encounter the same problem, feel free to try this solution out and let me know if it helped!&lt;/p&gt;
</content>
   </entry>
  
 
  
   <entry>
     <title>The Risks of Working With Another Company's API</title>
     <link href="http://marcgg.com/blog/2012/09/24/working-with-apis-facebook"/>
     <updated>2012-09-24T00:00:00+02:00</updated>
     <id>http://marcgg.com/blog/2012/09/24/working-with-apis-facebook</id>
     <content type="html">&lt;p&gt;Before we begin let me give you a little background on why I’m writing this article.&lt;/p&gt;

&lt;p&gt;I’ve been working with the Facebook platform for almost 3 years now. I also wrote code using the APIs provided by Twitter, Instagram, Flickr, Google, Foursquare, Amazon, Youtube, Spotify and others. I’ve participated in building products like the &lt;a href=&quot;http://www.tigerlilyapps.com/conversation&quot;&gt;Tigerlily Conversation Suite&lt;/a&gt; or &lt;a href=&quot;http://ffocused.com&quot;&gt;ffocused&lt;/a&gt;, both heavily relying on some of those API. In the process I learned a lot on how to handle these services, their evolutions and their problems.&lt;/p&gt;

&lt;p&gt;This post is nothing but my point of view and advices to people wanting to build on top of an existing platform. I don’t know everything, I just know the problems I’ve encountered, how I delt with them and how I avoided them afterward.&lt;/p&gt;

&lt;p&gt;That’s all for disclaimer, let’s dig in.&lt;/p&gt;

&lt;h2 id=&quot;being-cautious-the-real-cost-of-a-feature&quot;&gt;Being Cautious: The Real Cost of a Feature&lt;/h2&gt;

&lt;p&gt;The main thing I learned in the process is that you have to be very cautious in how you start using a new API. When you discover all the possibilities for the first time, you just want to jump in and create something. The catch is that everything might not be as bright as it seems.&lt;/p&gt;

&lt;p&gt;Some features may be buggy while others are deprecated. I’m not saying that they often are, just that they might be. You should consider the fact that everything will not go as planed and that this is going to have a cost.&lt;/p&gt;

&lt;p&gt;It’s all about understanding that &lt;a href=&quot;http://gettingreal.37signals.com/ch05_Start_With_No.php&quot;&gt;the real cost of the feature&lt;/a&gt; is not the time it’s going to take to develop it. You also have to take into account the time you’re going to spend maintaining it, and the friction it’s going to have with other components of your system. I like how &lt;a href=&quot;https://twitter.com/tenderlove&quot;&gt;Aaron Patterson&lt;/a&gt; describes this feeling as the lower tolerance for technical debt experienced developers have.&lt;/p&gt;

&lt;div style=&quot;width:560px; margin: auto&quot;&gt;
&lt;object width=&quot;560&quot; height=&quot;315&quot;&gt;&lt;param name=&quot;movie&quot; value=&quot;http://www.youtube.com/v/8kSfGgiFk48?version=3&amp;amp;hl=fr_FR&amp;amp;rel=0&amp;amp;start=1075&quot; /&gt;&lt;param name=&quot;allowFullScreen&quot; value=&quot;true&quot; /&gt;&lt;param name=&quot;allowscriptaccess&quot; value=&quot;always&quot; /&gt;&lt;embed src=&quot;http://www.youtube.com/v/8kSfGgiFk48?version=3&amp;amp;hl=fr_FR&amp;amp;rel=0&amp;amp;start=1075&quot; type=&quot;application/x-shockwave-flash&quot; width=&quot;560&quot; height=&quot;315&quot; allowscriptaccess=&quot;always&quot; allowfullscreen=&quot;true&quot; /&gt;&lt;/object&gt;
&lt;/div&gt;

&lt;p&gt;Let’s say you want to add a Facebook or Twitter connect to your website. Implementing it is &lt;a href=&quot;http://developers.facebook.com/docs/guides/web/#login&quot;&gt;dead simple&lt;/a&gt;… but what if Facebook is down for a while, or if it glitches out and your users can’t log in? What if they totally revamp their login system and this time it takes months to fix it? What if you want to handle users in a specific way and this connect feature is now getting in the way?&lt;/p&gt;

&lt;p&gt;You have to evaluate if it’s worth the risk of delegating a part of your system to another company. Sometimes it can be the best move you can make, but it can also be a mistake that will cost you precious time.&lt;/p&gt;

&lt;p&gt;I sometimes think of it like AJAX at the beginning of the «web 2.0» era. Everyone started creating full AJAX websites because the possibilities were so amazing. For some it was great, but in other cases it was very gimmicky, didn’t provide any real end-user value and had terrible issues in term of maintenance.&lt;/p&gt;

&lt;h2 id=&quot;its-not-as-simple-as-you-might-think&quot;&gt;It’s Not As Simple As You Might Think&lt;/h2&gt;

&lt;p&gt;Thinking about connecting to an API as something trivial can only work for a small side project or a minor feature.&lt;/p&gt;

&lt;p&gt;If you want to build a company around a platform, satisfy customers and make money with it that’s when it becomes complex. The simplest example I can give you is rate limitations. This alone could kill a project or at least diminish its value enough to render it useless.&lt;/p&gt;

&lt;p&gt;Stop thinking that you’ll be able to scrap the entire data on Twitter and provide amazing analytics just by having a couple of crons running on a small server. It’s not going to work because it’s not going to &lt;a href=&quot;http://www.youtube.com/watch?v=b2F-DItXtZs&quot;&gt;scale&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;My advice would to have a clear focused vision on where you can provide a real value and keep it realistic. Basing your product on an amazing platform is a great opportunity we’re given, but it should not be seen as the golden hammer of product design.&lt;/p&gt;

&lt;h2 id=&quot;things-will-change&quot;&gt;Things Will Change&lt;/h2&gt;

&lt;p&gt;&lt;img src=&quot;/assets/misc/fbml.jpg&quot; style=&quot;float:right; width:210px;&quot; /&gt;&lt;/p&gt;

&lt;p&gt;Any third party API you’re going to use is going to change. It’s a good thing. You want it to provide more features, to adapt to follow the best practices and so on. The real question here is not «Is it going to change ?» - because it will, but «Is my system and product flexible enough to handle the changes ?».&lt;/p&gt;

&lt;p&gt;First, if you base your entire product on one API feature, you are taking huge risks. The company providing the service might just turn it off at any point… just ask the people that were building on top of the &lt;a href=&quot;http://googlecode.blogspot.fr/2011/05/spring-cleaning-for-some-of-our-apis.html&quot;&gt;Google Translate API&lt;/a&gt;, creating &lt;a href=&quot;http://developers.facebook.com/blog/post/568/&quot;&gt;only FBML applications&lt;/a&gt; or building a &lt;a href=&quot;http://thenextweb.com/twitter/2012/08/17/twitter-4/&quot;&gt;Twitter client&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;Secondly, your code needs to be separated enough so that a change in the third party API only impacts a minimal part of your system. This is where you really have to follow &lt;a href=&quot;http://en.wikipedia.org/wiki/Law_of_Demeter&quot;&gt;Demeter’s law&lt;/a&gt;. Simply put, have a good interface somewhere that allows you to limit the number of places in which you have API handling code.&lt;/p&gt;

&lt;h2 id=&quot;things-will-break&quot;&gt;Things Will Break&lt;/h2&gt;

&lt;p&gt;&lt;img src=&quot;/assets/misc/movefast.png&quot; style=&quot;float:right; width:210px;&quot; /&gt;&lt;/p&gt;

&lt;p&gt;I’ve reported over 200 bugs on the Facebook platform. Some were fixed, some were impossible to reproduce accurately and other were just disregarded because considered as weird edge cases.&lt;/p&gt;

&lt;p&gt;This is not surprising, an API is not an all knowing oracle! It’s software and software breaks… especially within &lt;a href=&quot;http://startupquote.com/post/1624569753&quot;&gt;startups moving fast&lt;/a&gt;. I can’t imagine how complex maintaining a platform such as Facebook or Twitter can be, but I’m sure that the engineers behind it, as talented as they are, will let bugs slip.&lt;/p&gt;

&lt;p&gt;These bugs are not the same as a glitch in your system. You can’t fix them yourself. The only you can do and that’s having a system that is resilient to these API failures.&lt;/p&gt;

&lt;p&gt;Maybe you think that it’s as easy as when there’s a crash due to a bad API call, rescue the exception and use the response code to give a nicely formatted error to the end user. Sometimes it is just that, but let me ask you this. What if :&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;There is no error code or it is not the correct one&lt;/li&gt;
  &lt;li&gt;The response is &lt;a href=&quot;http://developers.facebook.com/bugs/349799231758647&quot;&gt;corrupted&lt;/a&gt; (bad formatting, bad charset, incompleteness)&lt;/li&gt;
  &lt;li&gt;The response seems correct but has no sense («Q: What’s the user’s age? A: John»)&lt;/li&gt;
  &lt;li&gt;The response is correct but the action hasn’t be made&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;You should handle some of these situations depending on the level of stability you want to achieve. Obviously if it’s something that is not important, do not waste your time trying to make it bullet proof. Put the time and effort into it if it’s a critical part of your application.&lt;/p&gt;

&lt;h2 id=&quot;example-scaling-a-quick-facebook-comments-fetching-system-with-no-data-loss&quot;&gt;Example: Scaling a Quick Facebook Comments Fetching System With No Data Loss&lt;/h2&gt;

&lt;p&gt;One of the applications I work on needed to get all the comments left on a given Facebook page. The system would then take the comments and process them in a way that would add value for the community managers using the app. It was crucial that we got 100% of the comments in a timely fashion.&lt;/p&gt;

&lt;p&gt;At first we wanted to get all the posts and process them in batches using the &lt;a href=&quot;http://developers.facebook.com/docs/reference/api/batch/&quot;&gt;Batch API&lt;/a&gt;, but at the time this API was very unstable. We tried processing all posts independently in one big routine and this quickly showed its limit as some API calls will time out, impacting the fetching of others comments that were left waiting. Adding a queuing system and ways to retry a given job solved that issue.&lt;/p&gt;

&lt;p&gt;We then discovered that Facebook has an undocumented limit of ~800 comments per call. Asking for more will not return an error but a random number of comments. We changed the system to take smaller batches of comments and use Facebook pagination system. The bad news is that it would sometimes glitch and results in an &lt;a href=&quot;http://developers.facebook.com/bugs/127681480703469&quot;&gt;infinite loop&lt;/a&gt;. Some other times everything will seem fine but some comments would be missing for unknown reasons.&lt;/p&gt;

&lt;p&gt;The solution here was to create methods able to determine if the comments returned were valid or not and decide when to stop fetching.&lt;/p&gt;

&lt;p&gt;As you can see, the first approach «gimme all of them comments» does not work when you deal with &lt;a href=&quot;http://developers.facebook.com/bugs/438731489482335&quot;&gt;large amounts&lt;/a&gt; of &lt;a href=&quot;http://developers.facebook.com/bugs/389080567815236&quot;&gt;items&lt;/a&gt;. This might not be a problem for most people building apps dealing with only a couple dozens of comments, but our product target big brands with a crazy amount of user interactions. Therefore it was very important that we got it right as it was at the core of what we were trying to achieve. The time and effort spent into building a fetching system that would work as good as possible had a real value so it was a wise choice to do it that way.&lt;/p&gt;

&lt;p&gt;It’s all about knowing what you’re trying to do and how good you need it to be. Sometimes good enough is what you shoot for, but in other cases you need something that’s as flawless as you can get. What you don’t want is to realize that this simple API call turned into months of unplanned development.&lt;/p&gt;

&lt;h2 id=&quot;as-a-developer&quot;&gt;As A Developer&lt;/h2&gt;

&lt;p&gt;Developing systems relying heavily on APIs you don’t control requires a lot of &lt;a href=&quot;http://en.wikipedia.org/wiki/Defensive_programming&quot;&gt;discipline&lt;/a&gt;. You have to make a lot of assumptions about what the other company’s going to do and be ready for random things to happen. It’s complicated and can be frustrating at times when you see features you build fall apart because of a change you have no control over.&lt;/p&gt;

&lt;p&gt;Of course it’s not all grim or else I wouldn’t have been crazy enough to do it for so long!&lt;/p&gt;

&lt;p&gt;It’s an interesting challenge to build something able to overcome all these problems and provide real value despite it. Personally it allowed me to learn a lot, tackle complex problems and grow as a developer. It’s also great to have a dataset as huge as Twitter or Facebook to put into your system. Everything seems to be at a larger scale right away and the possibilities from a product perspective are broaden.&lt;/p&gt;

&lt;p&gt;Finaly I’ll add that this is a good learning experience for when you get to the point where you need to build your own API… because everyone wants to build a cool API! You’ve seen how it’s done, the mistakes made, the good ideas, the architecture behind it…&lt;/p&gt;

&lt;p&gt;I can safely say that &lt;a href=&quot;http://www.sethcall.com/blog/2010/09/30/facebook-api-does-not-care/&quot;&gt;it will be infuriating&lt;/a&gt; at times, but within a focused and understanding team, it’s all manageable and the result can be awesome.&lt;/p&gt;
</content>
   </entry>
  
 
  
   <entry>
     <title>The One Thing That Made Me Switch To Vim</title>
     <link href="http://marcgg.com/blog/2012/09/04/one-reason-to-switch-to-vim-editor"/>
     <updated>2012-09-04T00:00:00+02:00</updated>
     <id>http://marcgg.com/blog/2012/09/04/one-reason-to-switch-to-vim-editor</id>
     <content type="html">&lt;p&gt;I know, I know, this has been done to death, but stay with me for a second. I’m not here to tell you that Vim is the best editor out there, just to tell you the one reason that got me to switch.&lt;/p&gt;

&lt;p&gt;Like every developer with some curiosity, I tried a ridiculous amount of text editors and IDEs. I started with Notepad at first, but quickly discovered that some text editors would actually help you. I downloaded &lt;a href=&quot;http://download.cnet.com/Amiasoft-SiteAid/3000-10247_4-10015046.html&quot;&gt;SiteAid&lt;/a&gt; and enjoyed the gain of productivity. Then I quickly moved on to Scite, Eclipse, Netbeans, Notepad++, Emacs, Text Edit, Rad Rails, Kate, Rubymine, TextMate, Sublime… the list goes on.&lt;/p&gt;

&lt;p&gt;At some point I realized that I was wasting my time learning slightly different shortcuts and ways of setting up a project. I began to consider Vim seriously because it stood the test of time and seemed cool for some reason, but really the one thing that convinced me was a problem I had at my job.&lt;/p&gt;

&lt;p&gt;One day something went wrong on a server running Debian. The sysadmin was not around and I ended up being the one that had to go on there and fix it. It was linked to some config files that were not properly set up, and the only editor available was Vim. &lt;/p&gt;

&lt;p&gt;Back then I had almost &lt;a href=&quot;http://vimdoc.sourceforge.net/htmldoc/intro.html&quot;&gt;no clue&lt;/a&gt; on how to use it.&lt;/p&gt;

&lt;p&gt;It resulted in me editing the files as a 70 years old guy that just discovered what a keyboard is. It was painful to watch to say the least. Of course while this was going on, the server was more or less down. Pure joy if you ask me!&lt;/p&gt;

&lt;p&gt;Even before this incident, more than a couple of times I had to inject some debug lines on the code deployed on our staging server to figure out a very environment-specific bug, but it wasn’t as stressful as this time.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;It felt terrible to be so lost with a task as simple as editing a file.&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;This is why I decided to use Vim as my primary editor. It already had enough qualities to be a good choice, but the fact that it is set up on most servers was the final selling point for me.&lt;/p&gt;

&lt;p&gt;Sometimes you just need to be able to fire up Vim and be very fast using it. You don’t even have to &lt;a href=&quot;http://yehudakatz.com/2010/07/29/everyone-who-tried-to-convince-me-to-use-vim-was-wrong/&quot;&gt;be snob while doing it&lt;/a&gt;.&lt;/p&gt;
</content>
   </entry>
  
 
  
   <entry>
     <title>Start Working on Your Side Project Tonight</title>
     <link href="http://marcgg.com/blog/2012/01/09/start-working-on-your-side-project"/>
     <updated>2012-01-09T00:00:00+01:00</updated>
     <id>http://marcgg.com/blog/2012/01/09/start-working-on-your-side-project</id>
     <content type="html">&lt;p&gt;To me a side project is taking an idea and building it from scratch. You do not have to complete it, it doesn’t need a business model or turn into a company over time, it doesn’t even need to make sense to other people than you. It is just a way to experiment. If later on it turns out into a successful company, good for you, but it doesn’t have to be your goal.&lt;/p&gt;

&lt;p&gt;If you’re like me, you think that development is a creative process, and should be treated as such. So what better way to be more creative than by removing all the usual constraints of a day job – deadlines, &lt;a href=&quot;http://en.wikipedia.org/wiki/Legacy_code&quot;&gt;legacy code&lt;/a&gt;, clients, etc. – and just building something for fun and the sake of building something cool!&lt;/p&gt;

&lt;p&gt;Doing a side project is a great way to experiment with new technologies, try new processes and be able to fail with absolutely no consequences other than maybe a few hours wasted… and even then this time isn’t really lost because you tried and you learned something. It might not be much, but it could turn out to be a key point at your next job interview, or it could give you a better insight at what you do in your day job.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/assets/misc/startupweekend.png&quot; style=&quot;float:right; width:250px;&quot; /&gt;&lt;/p&gt;

&lt;p&gt;By know you might notice that this article is more directed towards people with some experience in development, but the concepts and ideas are the same for everyone. Everybody can benefit from having a side project. If you don’t have a technical background you could go to a Startup Weekend with an idea or team up with a developer. You could also &lt;a href=&quot;http://codeyear.com/&quot;&gt;learn how to code&lt;/a&gt;, &lt;a href=&quot;http://ror.kateray.net/post/1312957018/the-internet-teaches-you-ruby-on-rails&quot;&gt;it won’t be time wasted&lt;/a&gt;!&lt;/p&gt;

&lt;h2 id=&quot;great-startups-can-come-out-of-side-projects&quot;&gt;Great startups can come out of side projects&lt;/h2&gt;

&lt;p&gt;&lt;img src=&quot;/assets/misc/basecamp.png&quot; style=&quot;float:right; width:200px;&quot; /&gt;&lt;/p&gt;

&lt;p&gt;You’ve probably heard about Gmail starting of as a 20% time project (as in the amount of time a developer there can spend on other projects than the ones they’re assigned). This isn’t the only example.&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;http://craigslist.com/&quot;&gt;Craigslist&lt;/a&gt; was Craig Newmark side project started in 1995 and only turned into a real company in 1999. &lt;a href=&quot;http://basecamp.com/&quot;&gt;Basecamp&lt;/a&gt;, a very successful project management software was initially an internal tool of 37signals that answered &lt;a href=&quot;http://gettingreal.37signals.com/ch02_Whats_Your_Problem.php&quot;&gt;their own problems as a design firm&lt;/a&gt;. &lt;a href=&quot;http://www.instapaper.com/&quot;&gt;Instapaper&lt;/a&gt; was started by Marco Arment &lt;a href=&quot;http://bits.blogs.nytimes.com/2010/09/23/instapaper-goes-from-hobby-to-startup/&quot;&gt;while he was CTO at Tumblr&lt;/a&gt;. You can even say that Twitter was a side project of &lt;a href=&quot;http://articles.businessinsider.com/2011-04-13/tech/29957143_1_jack-dorsey-twitter-podcasting&quot;&gt;a group of people working at Odeo&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/assets/misc/hashtagbattle.png&quot; style=&quot;float:right; width:150px;&quot; /&gt;&lt;/p&gt;

&lt;p&gt;In France there are also examples such as &lt;a href=&quot;http://hashtagbattle.com/&quot;&gt;HashtagBattle&lt;/a&gt; that was a &lt;a href=&quot;http://startupweekend.org/&quot;&gt;startup weekend&lt;/a&gt; project and ended up getting a lot of exposure. &lt;a href=&quot;http://www.tigerlilyapps.com/&quot;&gt;Tigerlily&lt;/a&gt; was created during a &lt;a href=&quot;http://en.wikipedia.org/wiki/Hackathon&quot;&gt;hackaton&lt;/a&gt;, &lt;a href=&quot;http://www.super-marmite.com/&quot;&gt;Super Marmitte&lt;/a&gt; was a side project until it got exposure at LeWeb in 2010…&lt;/p&gt;

&lt;p&gt;You can read more about the beginning of some of these projects in &lt;a href=&quot;http://books.google.fr/books?id=ktm885vGIXEC&amp;amp;lpg=PA161&amp;amp;ots=vTvMWfQH8g&amp;amp;dq=gmail%20side%20project&amp;amp;pg=PR2#v=onepage&amp;amp;q&amp;amp;f=false&quot;&gt;Founders at Work by Jessica Livingston&lt;/a&gt;.&lt;/p&gt;

&lt;h2 id=&quot;you-dont-have-to-be-that-ambitious&quot;&gt;You don’t have to be that ambitious&lt;/h2&gt;

&lt;p&gt;Take my latest side project for example. &lt;a href=&quot;https://twitter.com/gflandre&quot;&gt;A friend&lt;/a&gt; and I somehow got ourselves thinking it’d be fun if we could &lt;a href=&quot;http://whatsmyairport.com/&quot;&gt;match people’s initials with airport codes&lt;/a&gt;. This coincided with the release of a new version of my favorite framework that I wanted to try out. We decided to use it to create a project and learn about this new technology in the process. It took us a few evenings of work and we learned a lot while having fun.&lt;/p&gt;

&lt;div style=&quot;text-align:center&quot;&gt;&lt;img src=&quot;/assets/misc/airport.jpg&quot; style=&quot;width:550px;&quot; /&gt;&lt;/div&gt;

&lt;p&gt;It doesn’t scale, there’s no way to make money out of it… but really there is no need to try to create the next Facebook! Simply do something that you like and that will teach you something, and then maybe you’ll create a new hit startup. First, take it only for what you’ll learn and the experience you’ll gain from it.&lt;/p&gt;

&lt;h2 id=&quot;ok-i-get-it-side-projects-are-great-but-i-just-dont-have-the-time&quot;&gt;“Ok I get it, side projects are great, but I just don’t have the time!”&lt;/h2&gt;

&lt;p&gt;&lt;img src=&quot;/assets/misc/love.png&quot; style=&quot;float:right; width:150px;&quot; /&gt;&lt;/p&gt;

&lt;p&gt;… is what I hear people say all the time.&lt;/p&gt;

&lt;p&gt;This is not a valid argument; if you really wanted to, you could easily save a couple of evenings to work on your project. A lot of people feel like they won’t be able to get anything done, but unless you have complete A.D.D. you will get something done if you stay in front of a computer a few hours a week.&lt;/p&gt;

&lt;p&gt;It’s just a matter of focusing and being passionate. Find and idea and a technology that feel right. If you like what you do, developing could be as fun as whatever you do on your free time.&lt;/p&gt;

&lt;h2 id=&quot;my-point-is-just-get-started&quot;&gt;My point is: Just get started.&lt;/h2&gt;

&lt;p&gt;I’ll add that it’s better if you begin small and scale up later. Nothing is more depressing than getting yourself into a project that will last years with absolutely nothing to show for it. It’s not as fun. Work in small steps, get feedback as you progress, and most of all try anything that goes through your mind because failure is an option, but learning nothing out of the experience isn’t.&lt;/p&gt;

&lt;p&gt;Alright, you know that one idea that you had? The one you told your coworkers about? Yeah the one on a piece of paper or written in your iPhone.&lt;/p&gt;

&lt;p&gt;Start working on it this evening.&lt;/p&gt;

&lt;p&gt;Keep it fun, keep it interesting, do not pressure yourself. Nothing bad can come out of it!&lt;/p&gt;

&lt;p class=&quot;sidenote&quot;&gt;
  This article was originally published on
  &lt;a href=&quot;http://www.rudebaguette.com/2012/01/09/start-working-side-project/&quot;&gt;The Rude Baguette&lt;/a&gt;.
  Do what you love poster by &lt;a href=&quot;http://shop.ugmonk.com/product/do-what-you-love-print-blue&quot;&gt;Ugmonk&lt;/a&gt;.
&lt;/p&gt;
</content>
   </entry>
  
 
  
   <entry>
     <title>Outsourcing In A Startup</title>
     <link href="http://marcgg.com/blog/2011/12/21/startup-outsourcing"/>
     <updated>2011-12-21T00:00:00+01:00</updated>
     <id>http://marcgg.com/blog/2011/12/21/startup-outsourcing</id>
     <content type="html">&lt;p&gt;So you’re a startup and want to outsource graphic design, system administration or development? Don’t feel bad, this is very common. Often startups can’t afford to hire many people right away or do not have a team with every skill required to build the perfect product.&lt;/p&gt;

&lt;h2 id=&quot;should-i-outsource&quot;&gt;Should I Outsource?&lt;/h2&gt;

&lt;p&gt;Some will tell you that you should not outsource, but this is not what I think. Actually I won’t have enough of one article to tell you all the cases in which you should outsource (lack of time, not the required skills in-house, not enough people in the team…).&lt;/p&gt;

&lt;p&gt;It doesn’t really matter why you want to outsource. What matters is that before doing so you ask yourself «Am I outsourcing what defines my company?» This is especially true for startups that focus around one main product: you do not want to lose control over what makes the core of your business.&lt;/p&gt;

&lt;h2 id=&quot;build-up-a-team&quot;&gt;Build Up A Team&lt;/h2&gt;
&lt;p&gt;I suppose you don’t want to be forever dependent on contractors, right? Your goal is to build up a team, because in the end this is what makes a startup. A passionated team can build anything if gathered around the right vision, and outsourcing without thinking can hurt that dynamic.&lt;/p&gt;

&lt;p&gt;While a lot of contractors are very able and talented, the problem is that they are only part of the team very temporarily and will not get involved as much as your teammates. They will lack the long term vision and won’t think “if I do X, what will happen in a year when I need to make it evolve into Y”. The problem given to them will be solved, but later evolutions might be harder.&lt;/p&gt;

&lt;p&gt;Remember that your team members decided to join the adventure for more than a couple of billable months. They will have opinions, ideas and will thrive to build the best product possible if you give them the means to do so. You want developers thinking by themselves and ready to go back and improve what they wrote months ago. You want designers that are creative and in phase with the company’s vision.&lt;/p&gt;

&lt;p&gt;This is why you need to build what’s important internally and outsource only when you can’t do it in house… and even when you do, do it keeping in mind that you will have to integrate what has been created and that your team will have to maintain it. If done correctly, outside help can be a good thing for everyone, as mixing ideas and processes is always interesting and a good experience.&lt;/p&gt;

&lt;h2 id=&quot;outsourcing-done-right&quot;&gt;Outsourcing Done Right&lt;/h2&gt;
&lt;p&gt;Like I mentioned before, sometimes you need to call someone to help out. In this case you need to be sure you do not hurt your product or your team in the process. The deliverable should be easy to test, easy to maintain and easy to evolve. If those conditions are not fulfilled, you might deal with frustration in your team. If they are, everyone will be happy about a job well done.&lt;/p&gt;

&lt;h3 id=&quot;design&quot;&gt;Design&lt;/h3&gt;
&lt;p&gt;If you’re outsourcing your product’s design, ask to be provided with a full style guide, general guidelines, grid templates… anything that can help future designers can build on top of what you already have without having to start from scratch. Use a lot of constructive criticism and keep in mind the big picture: your product shouldn’t feel patchy, even if you got a lot of people working on it.&lt;/p&gt;

&lt;h3 id=&quot;development-of-a-new-feature&quot;&gt;Development of a New Feature&lt;/h3&gt;
&lt;p&gt;If you’re outsourcing development directly inside your main product – like a new feature, you want to make sure the code that is given to you is good and perennial. To achieve that, you should ask from your contractors:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;
    &lt;p&gt;The code should be shipped in a modular fashion, avoiding coupling as much as possible. The new features should not interfere too much with the existing codebase.&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;A lot of pertinent automated tests.&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;Documentation, not only on what the features are doing, but also on how they can be maintained and improved.&lt;/li&gt;
  &lt;li&gt;Try collaboration with a member of your development team (if you have one), even part time. You want someone able right away to maintain this new feature.&lt;/li&gt;
  &lt;li&gt;Enforce your internal best practices as much as possible if you have some. If you don’t, enforce the ones accepted by your technology’s community.&lt;/li&gt;
  &lt;li&gt;Always keep in mind that you will have to live with this new code for a while and decide accordingly if outsourcing is the right move or not.&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&quot;one-shot&quot;&gt;One Shot&lt;/h3&gt;
&lt;p&gt;The other possibility is to outsource something that is not directly linked to your core product. This could be a marketing campaign or something similar. In this case it is easier to get it right, and this is the situation where outsourcing works very well for a startup. You will not need to maintain the new code for long, it will not impact the existing code base… the only thing that matters is that the final result if up to your company’s standards.&lt;/p&gt;

&lt;p&gt;A perfect example of that is &lt;a href=&quot;http://www.tigerlilyapps.com/&quot;&gt;my company’s new website&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;We launched it recently and gave design control to a &lt;a href=&quot;http://www.colorz.fr/&quot;&gt;creative agency&lt;/a&gt; during development. We did this because we knew that they would create a better design than us. While we care and love about building things that look good, this is not our core business. Delegating this part of the job also gave us the possibility to focus more on our platform for social media applications which is what we do best.&lt;/p&gt;

&lt;p&gt;During the whole process someone kept checking to see if we were agreeing on the choices made. The final phase of integration was made in house because we have great front-end developers that should be able to make the website evolve later on.&lt;/p&gt;

&lt;h2 id=&quot;keep-control&quot;&gt;Keep Control&lt;/h2&gt;

&lt;p&gt;In any case, try to stay on top of what is going on and make sure everything is moving in the right direction. Remember that as a startup, your product is very important. Do not lose control, do not lose ownership. Build up your team.&lt;/p&gt;

&lt;div style=&quot;text-align:center&quot;&gt;&lt;img src=&quot;/assets/misc/machine.jpg&quot; style=&quot;width:450px;&quot; /&gt;&lt;/div&gt;

&lt;p&gt;You don’t want to end up with a Rube Goldberg machine made of a crazy patchwork created by dozens of freelancers. While it might get the job done for a bit, it won’t last.&lt;/p&gt;

&lt;p&gt;This being said, there is no perfect solution. Some contractors become really involved and stay for long, some are so good that they will improve the general quality of your product… and if you found people like this maybe you should offer them a full time job!&lt;/p&gt;

&lt;p class=&quot;sidenote&quot;&gt;
  This article was originally published on
  &lt;a href=&quot;http://www.rudebaguette.com/2011/12/21/startups-to-outsource-or-not-to-outsource-3/&quot;&gt;The Rude Baguette&lt;/a&gt;.
&lt;/p&gt;
</content>
   </entry>
  
 
  
   <entry>
     <title>Developers, Go From SSII To Startup</title>
     <link href="http://marcgg.com/blog/2011/12/12/developer-from-ssii-to-startup"/>
     <updated>2011-12-12T00:00:00+01:00</updated>
     <id>http://marcgg.com/blog/2011/12/12/developer-from-ssii-to-startup</id>
     <content type="html">&lt;p&gt;In France we have what we call SSII for Société de Service en Ingénierie Informatique. Poorly translated it goes something like «IT Consulting Firm». This is where most young CS graduates will go, mainly because once you get your degree you are spammed by job offers from their recruiters.&lt;/p&gt;

&lt;p&gt;This is fine for some, but other might feel like they are missing out what’s happening in the startup world. The problem is that after a few years in a SSII it can seem complicated to switch career path and start working for a startup. For the most part it’s because the technologies, processes and general mindset are radically different… but believe me, it is possible!&lt;/p&gt;

&lt;p&gt;So how can one move away from a company like this and join a cool startup?&lt;/p&gt;

&lt;h2 id=&quot;are-you-sure&quot;&gt;Are You Sure?&lt;/h2&gt;
&lt;p&gt;First take a second to figure out what you love to do. Are you really passionate about development? Could you spend hours &lt;a href=&quot;http://stackoverflow.com/questions/144661/python-vs-ruby-for-metaprogramming&quot;&gt;debating if new technology X is better than Y&lt;/a&gt;? Do you try out every new app or service that comes out?&lt;/p&gt;

&lt;p&gt;Keep in mind that the process of becoming a good fit for a startup isn’t easy, but each step should be fun. If it’s a hassle then maybe you shouldn’t quit your current job.&lt;/p&gt;

&lt;h2 id=&quot;the-mindset&quot;&gt;The Mindset&lt;/h2&gt;
&lt;p&gt;&lt;img src=&quot;/assets/misc/movefast.jpg&quot; style=&quot;float:right; height:350px;&quot; /&gt;&lt;/p&gt;

&lt;p&gt;In a SSII you often get to work on products already sold to a client, usually a large company. All you have to do is dress up, go to the client’s offices and code following the specifications someone gave you. It doesn’t matter if you think the product is good or not, it just matters that you meet the deadline.&lt;/p&gt;

&lt;p&gt;When you join a startup, and especially if it’s an early stage one, this will be radically different. If you’re not passionated about what you’re doing it won’t work. It won’t only be about shipping a given feature anymore, it will be about caring that the product is good and that it follows the right vision.&lt;/p&gt;

&lt;p&gt;In a startup you won’t be yet another code monkey driven by a faceless client’s exigences. Your voice will be heard and just as important as anyone else’s in the team. Your teammates will expect from you that you have ideas on things, not just follow orders. You’ll actually get the opportunity to be part of the creation of something.&lt;/p&gt;

&lt;p&gt;Keep in mind that for a startup at an early stage, nothing is definitive. You could do a major switch in a week, it doesn’t matter as long as everything is moving in the right direction. You have to realize that making the right choices is crucial and can mean life or death for the company, therefore everyone in the team should be involved in the decision, give inputs, discuss, exchange ideas…&lt;/p&gt;

&lt;h2 id=&quot;learn-create-code-repeat&quot;&gt;Learn, Create, Code, Repeat&lt;/h2&gt;

&lt;p&gt;Large companies, because of their larger inertia, tend to use older technologies and that’s why a lot of what you know might be of little use. But don’t worry, while the specifics of the technologies you know might be useless, the general experience you gathered is still valid. You simply need find out the technologies used by your dream startup and learn them.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/assets/misc/codecomplete.jpg&quot; style=&quot;float:right; height:200px;&quot; /&gt;&lt;/p&gt;

&lt;p&gt;Keep in mind that what matters in a startup is the things you can do and your ability to learn &amp;amp; adapt. No one is going to show your resume to a client in order to get a contract, so it doesn’t matter whether you come from a famous school or not. It’s just a degree and doesn’t mean a lot. No need to buy a fancy suit either, it’s not the best outfit to be in front of a computer most of the day.&lt;/p&gt;

&lt;p&gt;To sum it up, what a good startup wants is a developer that can program. So how to get better at coding you ask me? By coding of course!&lt;/p&gt;

&lt;p&gt;The best way to get started is to find an idea and create it as a side project on nights &amp;amp; weekends. It will give you a goal and a nice bullet point on your resume once it’s completed. While you develop, get feedbacks on what you’re doing from experienced developers and/or the &lt;a href=&quot;http://stackoverflow.com/&quot;&gt;internet&lt;/a&gt; and &lt;a href=&quot;http://stackoverflow.com/questions/1711/what-is-the-single-most-influential-book-every-programmer-should-read&quot;&gt;read up&lt;/a&gt; on &lt;a href=&quot;http://www.amazon.com/dp/0132350882/?tag=stackoverfl08-20&quot;&gt;best practices&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;In a SSII you could be fine sticking to old technologies as there will always be clients wanting to use them: obviously no one is going to change overnight the way banking or insurance is done and the &lt;a href=&quot;http://en.wikipedia.org/wiki/COBOL&quot;&gt;languages used&lt;/a&gt; to do it… but in a startup, everything moves fast. You have to keep on learning and keep on improving yourself.&lt;/p&gt;

&lt;h2 id=&quot;get-connected&quot;&gt;Get Connected&lt;/h2&gt;

&lt;p&gt;&lt;img src=&quot;/assets/misc/startinparis.png&quot; style=&quot;float:right; width:200px;&quot; /&gt;&lt;/p&gt;

&lt;p&gt;The startup scene in France is maybe not as large as in the US, but it is active. So stay up to date about what’s going on around you as well as internationally. There are countless blogs, twitter users and events talking about just that, you simply need to find the ones that you like and start reading.&lt;/p&gt;

&lt;p&gt;Start going to events organized in your city around the subjects that interest you. If you’re a developer wanting to geek out with other developers, there are meetups for that. You can also interact with other coders on mailing lists, IRC, Twitter…&lt;/p&gt;

&lt;p&gt;If you do it well, you might even have a job interview scheduled before you start sending resumes!&lt;/p&gt;

&lt;h2 id=&quot;alright&quot;&gt;Alright&lt;/h2&gt;

&lt;p&gt;That’s it. Don’t just stand there, go and create something!&lt;/p&gt;

&lt;p class=&quot;sidenote&quot;&gt;
  This article was originally published on
  &lt;a href=&quot;http://www.rudebaguette.com/2011/12/12/from-consulting-to-startup-developer/&quot;&gt;The Rude Baguette&lt;/a&gt;.
  Photo by &lt;a href=&quot;http://www.flickr.com/photos/mwichary/5455395458/&quot;&gt;Martin Wichary&lt;/a&gt;.
&lt;/p&gt;
</content>
   </entry>
  
 

</feed>
