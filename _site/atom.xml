<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
 
 <title>Marcgg#Blog</title>
 <link href="http://marcgg.com/atom.xml" rel="self"/>
 <link href="http://marcgg.com"/>
 <updated>2012-10-20T16:13:57+02:00</updated>
 <id>http://marcgg.com</id>
 <author>
   <name>Marc G Gauthier</name>
   <email>marcg.gauthier@gmail.com</email>
 </author>

 
 <entry>
   <title>Create a Custom Slider With RubyMotion</title>
   <link href="http://marcgg.com/2012/10/22/custom-slider-ios-rubymotion"/>
   <updated>2012-10-22T00:00:00+02:00</updated>
   <id>http://marcgg.com/2012/10/22/custom-slider-ios-rubymotion</id>
   <content type="html">&lt;p&gt;I always liked the idea of developing mobile applications, but also found the Objective C + XCode experience not very enjoyable. I gave alternatives like &lt;a href='http://www.appcelerator.com/platform/titanium-sdk/'&gt;Titanium&lt;/a&gt; a try, but wasn’t fully convinced. Lately I’ve getting into &lt;a href='http://www.rubymotion.com/'&gt;RubyMotion&lt;/a&gt; and so far I’m really impressed by the general feel of it.&lt;/p&gt;

&lt;p&gt;Alas it&amp;#8217;s not perfect. My main grief right now about the project is the terrible lack of documentation. The community is also still small and while you can still find &lt;a href='https://twitter.com/vacawama'&gt;helpful&lt;/a&gt; &lt;a href='https://twitter.com/julienXX'&gt;people&lt;/a&gt;, you often end up alone with your code. That&amp;#8217;s why I figured I would contribute my share of blog posts on the subject! Hopefully it’ll help out some people.&lt;/p&gt;

&lt;p&gt;Keep in mind that while I’m well versed in Ruby, I’m quite new to Rubymotion so I might make some mistakes&amp;#8230; so please comment if I do and I’ll fix the article as soon as possible. The project is also evolving a lot, therefore while this article works perfectly today, it might not be the case in a few months.&lt;/p&gt;

&lt;p&gt;With all that in mind, let&amp;#8217;s get started shall we?&lt;/p&gt;

&lt;h2 id='prerequisites'&gt;Prerequisites&lt;/h2&gt;

&lt;p&gt;I won’t get into the details on how to set up a RubyMotion project and will assume you have basic knowledge of how this works. If you have no clue what’s all that about, please take a look at &lt;a href='http://rubymotion-tutorial.com/1-hello-motion/'&gt;this tutorial&lt;/a&gt; before reading the rest of this article.&lt;/p&gt;

&lt;p&gt;RubyMotion uses &lt;a href='http://www.ruby-lang.org/'&gt;Ruby&lt;/a&gt;. If you are not familiar with it, there are tons of tutorials and books on how to code with this language. I recommend &lt;a href='http://ruby.learncodethehardway.org/'&gt;Learn Ruby The Hard Way&lt;/a&gt;.&lt;/p&gt;

&lt;h2 id='our_objective'&gt;Our Objective&lt;/h2&gt;

&lt;p&gt;I’ll try to explain how to customize a UISlider to get the look and feel matching the design of your application. Here’s what’s the demo code will give you:&lt;/p&gt;
&lt;iframe frameborder='0' height='396' src='http://www.screenr.com/embed/v0y8' width='100%'&gt;Loading&lt;/iframe&gt;
&lt;h2 id='setting_up_the_appdelegate'&gt;Setting up the AppDelegate&lt;/h2&gt;

&lt;p&gt;This is pretty basic, we just set up a controller and assign it to be the root.&lt;/p&gt;
&lt;div class='highlight'&gt;&lt;pre&gt;&lt;code class='ruby'&gt;&lt;span class='k'&gt;class&lt;/span&gt; &lt;span class='nc'&gt;AppDelegate&lt;/span&gt;
  &lt;span class='k'&gt;def&lt;/span&gt; &lt;span class='nf'&gt;application&lt;/span&gt;&lt;span class='p'&gt;(&lt;/span&gt;&lt;span class='n'&gt;application&lt;/span&gt;&lt;span class='p'&gt;,&lt;/span&gt; &lt;span class='n'&gt;didFinishLaunchingWithOptions&lt;/span&gt;&lt;span class='ss'&gt;:launchOptions&lt;/span&gt;&lt;span class='p'&gt;)&lt;/span&gt;
    &lt;span class='vi'&gt;@window&lt;/span&gt; &lt;span class='o'&gt;=&lt;/span&gt; &lt;span class='no'&gt;UIWindow&lt;/span&gt;&lt;span class='o'&gt;.&lt;/span&gt;&lt;span class='n'&gt;alloc&lt;/span&gt;&lt;span class='o'&gt;.&lt;/span&gt;&lt;span class='n'&gt;initWithFrame&lt;/span&gt;&lt;span class='p'&gt;(&lt;/span&gt;&lt;span class='no'&gt;UIScreen&lt;/span&gt;&lt;span class='o'&gt;.&lt;/span&gt;&lt;span class='n'&gt;mainScreen&lt;/span&gt;&lt;span class='o'&gt;.&lt;/span&gt;&lt;span class='n'&gt;bounds&lt;/span&gt;&lt;span class='p'&gt;)&lt;/span&gt;

    &lt;span class='n'&gt;main_controller&lt;/span&gt; &lt;span class='o'&gt;=&lt;/span&gt; &lt;span class='no'&gt;MainController&lt;/span&gt;&lt;span class='o'&gt;.&lt;/span&gt;&lt;span class='n'&gt;alloc&lt;/span&gt;&lt;span class='o'&gt;.&lt;/span&gt;&lt;span class='n'&gt;init&lt;/span&gt;
    &lt;span class='vi'&gt;@window&lt;/span&gt;&lt;span class='o'&gt;.&lt;/span&gt;&lt;span class='n'&gt;rootViewController&lt;/span&gt; &lt;span class='o'&gt;=&lt;/span&gt; &lt;span class='n'&gt;main_controller&lt;/span&gt;

    &lt;span class='vi'&gt;@window&lt;/span&gt;&lt;span class='o'&gt;.&lt;/span&gt;&lt;span class='n'&gt;rootViewController&lt;/span&gt;&lt;span class='o'&gt;.&lt;/span&gt;&lt;span class='n'&gt;wantsFullScreenLayout&lt;/span&gt; &lt;span class='o'&gt;=&lt;/span&gt; &lt;span class='kp'&gt;true&lt;/span&gt;
    &lt;span class='vi'&gt;@window&lt;/span&gt;&lt;span class='o'&gt;.&lt;/span&gt;&lt;span class='n'&gt;makeKeyAndVisible&lt;/span&gt;
    &lt;span class='kp'&gt;true&lt;/span&gt;
  &lt;span class='k'&gt;end&lt;/span&gt;
&lt;span class='k'&gt;end&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;
&lt;h2 id='displaying_a_uislider'&gt;Displaying a UISlider&lt;/h2&gt;

&lt;p&gt;Now we need to create the MainController. Put it in app/controllers, with the basic structure as such:&lt;/p&gt;
&lt;div class='highlight'&gt;&lt;pre&gt;&lt;code class='ruby'&gt;&lt;span class='k'&gt;class&lt;/span&gt; &lt;span class='nc'&gt;MainController&lt;/span&gt; &lt;span class='o'&gt;&amp;lt;&lt;/span&gt; &lt;span class='no'&gt;UIViewController&lt;/span&gt;
  &lt;span class='k'&gt;def&lt;/span&gt; &lt;span class='nf'&gt;loadView&lt;/span&gt;
    &lt;span class='nb'&gt;self&lt;/span&gt;&lt;span class='o'&gt;.&lt;/span&gt;&lt;span class='n'&gt;view&lt;/span&gt; &lt;span class='o'&gt;=&lt;/span&gt; &lt;span class='no'&gt;UIView&lt;/span&gt;&lt;span class='o'&gt;.&lt;/span&gt;&lt;span class='n'&gt;new&lt;/span&gt;
  &lt;span class='k'&gt;end&lt;/span&gt;

  &lt;span class='k'&gt;def&lt;/span&gt; &lt;span class='nf'&gt;initWithNibName&lt;/span&gt;&lt;span class='p'&gt;(&lt;/span&gt;&lt;span class='nb'&gt;name&lt;/span&gt;&lt;span class='p'&gt;,&lt;/span&gt; &lt;span class='n'&gt;bundle&lt;/span&gt;&lt;span class='p'&gt;:&lt;/span&gt; &lt;span class='n'&gt;bundle&lt;/span&gt;&lt;span class='p'&gt;)&lt;/span&gt;
    &lt;span class='k'&gt;super&lt;/span&gt;
    &lt;span class='nb'&gt;self&lt;/span&gt;
  &lt;span class='k'&gt;end&lt;/span&gt;

  &lt;span class='k'&gt;def&lt;/span&gt; &lt;span class='nf'&gt;viewDidLoad&lt;/span&gt;
    &lt;span class='k'&gt;super&lt;/span&gt;
    &lt;span class='c1'&gt;# Everything is now going to go there&lt;/span&gt;
  &lt;span class='k'&gt;end&lt;/span&gt;
&lt;span class='k'&gt;end&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;
&lt;p&gt;Now you can run the application with rake and it&amp;#8217;ll display a black screen. This means we&amp;#8217;re all set up and it&amp;#8217;s time to actually start coding. Everything we&amp;#8217;re going to write from now on will be after the super the viewDidLoad method.&lt;/p&gt;

&lt;p&gt;First, the slider:&lt;/p&gt;
&lt;div class='highlight'&gt;&lt;pre&gt;&lt;code class='ruby'&gt;  &lt;span class='n'&gt;slider&lt;/span&gt; &lt;span class='o'&gt;=&lt;/span&gt; &lt;span class='no'&gt;UISlider&lt;/span&gt;&lt;span class='o'&gt;.&lt;/span&gt;&lt;span class='n'&gt;alloc&lt;/span&gt;&lt;span class='o'&gt;.&lt;/span&gt;&lt;span class='n'&gt;initWithFrame&lt;/span&gt;&lt;span class='p'&gt;(&lt;/span&gt;&lt;span class='o'&gt;[[&lt;/span&gt;&lt;span class='mi'&gt;0&lt;/span&gt;&lt;span class='p'&gt;,&lt;/span&gt; &lt;span class='mi'&gt;200&lt;/span&gt;&lt;span class='o'&gt;]&lt;/span&gt;&lt;span class='p'&gt;,&lt;/span&gt; &lt;span class='o'&gt;[&lt;/span&gt;&lt;span class='mi'&gt;320&lt;/span&gt;&lt;span class='p'&gt;,&lt;/span&gt; &lt;span class='mi'&gt;40&lt;/span&gt;&lt;span class='o'&gt;]]&lt;/span&gt;&lt;span class='p'&gt;)&lt;/span&gt;
  &lt;span class='n'&gt;view&lt;/span&gt;&lt;span class='o'&gt;.&lt;/span&gt;&lt;span class='n'&gt;addSubview&lt;/span&gt;&lt;span class='p'&gt;(&lt;/span&gt;&lt;span class='n'&gt;slider&lt;/span&gt;&lt;span class='p'&gt;)&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;
&lt;p&gt;This will create a slider taking the whole width (320) and position it more or less in the center. Then we add it to the view so it&amp;#8217;ll display correctly.&lt;/p&gt;
&lt;div style='text-align: center'&gt;&lt;img alt='Custom Sliders Demo' src='/assets/misc/slider1.png' /&gt;&lt;/div&gt;
&lt;p&gt;If you want you can set the maximum and default values as such:&lt;/p&gt;
&lt;div class='highlight'&gt;&lt;pre&gt;&lt;code class='ruby'&gt;&lt;span class='n'&gt;slider&lt;/span&gt;&lt;span class='o'&gt;.&lt;/span&gt;&lt;span class='n'&gt;maximumValue&lt;/span&gt; &lt;span class='o'&gt;=&lt;/span&gt; &lt;span class='mi'&gt;100&lt;/span&gt;
&lt;span class='n'&gt;slider&lt;/span&gt;&lt;span class='o'&gt;.&lt;/span&gt;&lt;span class='n'&gt;value&lt;/span&gt; &lt;span class='o'&gt;=&lt;/span&gt; &lt;span class='n'&gt;slider&lt;/span&gt;&lt;span class='o'&gt;.&lt;/span&gt;&lt;span class='n'&gt;maximumValue&lt;/span&gt;&lt;span class='o'&gt;/&lt;/span&gt;&lt;span class='mi'&gt;2&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;
&lt;h2 id='setting_track_images'&gt;Setting Track Images&lt;/h2&gt;

&lt;p&gt;A UISlider is composed of different elements. The sliding thingy is called the track and the other round thingy you grab to drag is the thumb. On the left of the thumb we have the minimum track, on the right the maximum track. The &lt;a href='http://developer.apple.com/library/ios/#documentation/uikit/reference/UISlider_Class/Reference/Reference.html'&gt;official documentation&lt;/a&gt; explains that with a better display of vocabulary than I do, but you get the idea.&lt;/p&gt;

&lt;p&gt;We can change the track image to display what we want as such:&lt;/p&gt;
&lt;div class='highlight'&gt;&lt;pre&gt;&lt;code class='ruby'&gt;  &lt;span class='n'&gt;full_image&lt;/span&gt; &lt;span class='o'&gt;=&lt;/span&gt; &lt;span class='no'&gt;UIImage&lt;/span&gt;&lt;span class='o'&gt;.&lt;/span&gt;&lt;span class='n'&gt;imageNamed&lt;/span&gt;&lt;span class='p'&gt;(&lt;/span&gt;&lt;span class='s2'&gt;&amp;quot;full&amp;quot;&lt;/span&gt;&lt;span class='p'&gt;)&lt;/span&gt;
  &lt;span class='n'&gt;empty_image&lt;/span&gt; &lt;span class='o'&gt;=&lt;/span&gt; &lt;span class='no'&gt;UIImage&lt;/span&gt;&lt;span class='o'&gt;.&lt;/span&gt;&lt;span class='n'&gt;imageNamed&lt;/span&gt;&lt;span class='p'&gt;(&lt;/span&gt;&lt;span class='s2'&gt;&amp;quot;empty&amp;quot;&lt;/span&gt;&lt;span class='p'&gt;)&lt;/span&gt;
  &lt;span class='n'&gt;slider&lt;/span&gt;&lt;span class='o'&gt;.&lt;/span&gt;&lt;span class='n'&gt;setMinimumTrackImage&lt;/span&gt; &lt;span class='n'&gt;full_image&lt;/span&gt;&lt;span class='p'&gt;,&lt;/span&gt; &lt;span class='n'&gt;forState&lt;/span&gt;&lt;span class='p'&gt;:&lt;/span&gt; &lt;span class='no'&gt;UIControlStateNormal&lt;/span&gt;
  &lt;span class='n'&gt;slider&lt;/span&gt;&lt;span class='o'&gt;.&lt;/span&gt;&lt;span class='n'&gt;setMaximumTrackImage&lt;/span&gt; &lt;span class='n'&gt;empty_image&lt;/span&gt;&lt;span class='p'&gt;,&lt;/span&gt; &lt;span class='n'&gt;forState&lt;/span&gt;&lt;span class='p'&gt;:&lt;/span&gt; &lt;span class='no'&gt;UIControlStateNormal&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;
&lt;p&gt;You can notice that I use two images &amp;#8220;full&amp;#8221; and &amp;#8220;empty&amp;#8221;. To get them to load correctly, put them in the resources folder of your rubymotion project. If they are PNGs you don&amp;#8217;t need to specify the format.&lt;/p&gt;

&lt;p&gt;Right now the minimum track image is stretching to fit the space given to it. It might be what you want, but that&amp;#8217;s not my case so let&amp;#8217;s add the following code before giving the image to the slider.&lt;/p&gt;
&lt;div class='highlight'&gt;&lt;pre&gt;&lt;code class='ruby'&gt;  &lt;span class='n'&gt;full_image&lt;/span&gt; &lt;span class='o'&gt;=&lt;/span&gt; &lt;span class='n'&gt;full_image&lt;/span&gt;&lt;span class='o'&gt;.&lt;/span&gt;&lt;span class='n'&gt;resizableImageWithCapInsets&lt;/span&gt;&lt;span class='p'&gt;(&lt;/span&gt;
    &lt;span class='no'&gt;UIEdgeInsetsZero&lt;/span&gt;&lt;span class='p'&gt;,&lt;/span&gt; &lt;span class='n'&gt;resizingMode&lt;/span&gt;&lt;span class='p'&gt;:&lt;/span&gt; &lt;span class='no'&gt;UIImageResizingModeTile&lt;/span&gt;&lt;span class='p'&gt;)&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;
&lt;p&gt;At this point we have this:&lt;/p&gt;
&lt;div style='text-align: center'&gt;&lt;img alt='Custom Sliders Demo' src='/assets/misc/slider2.png' /&gt;&lt;/div&gt;
&lt;p&gt;This is pretty good, but the thumb in the middle doesn&amp;#8217;t look so good. Let&amp;#8217;s fix that.&lt;/p&gt;

&lt;h2 id='customizing_the_thumb'&gt;Customizing The Thumb&lt;/h2&gt;

&lt;p&gt;You can pass an image to set the thumb to whatever you want using the same logic as what we did with the tracks. Personnally I prefer removing the thumb entirely, so here&amp;#8217;s how to do that:&lt;/p&gt;
&lt;div class='highlight'&gt;&lt;pre&gt;&lt;code class='ruby'&gt;  &lt;span class='n'&gt;slider&lt;/span&gt;&lt;span class='o'&gt;.&lt;/span&gt;&lt;span class='n'&gt;setThumbImage&lt;/span&gt; &lt;span class='no'&gt;UIImage&lt;/span&gt;&lt;span class='o'&gt;.&lt;/span&gt;&lt;span class='n'&gt;alloc&lt;/span&gt;&lt;span class='p'&gt;(),&lt;/span&gt; &lt;span class='n'&gt;forState&lt;/span&gt;&lt;span class='p'&gt;:&lt;/span&gt; &lt;span class='no'&gt;UIControlStateNormal&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;
&lt;p&gt;This gives you:&lt;/p&gt;
&lt;div style='text-align: center'&gt;&lt;img alt='Custom Sliders Demo' src='/assets/misc/rubymotion_sliders.png' /&gt;&lt;/div&gt;
&lt;p&gt;Of course you could have done something like:&lt;/p&gt;
&lt;div class='highlight'&gt;&lt;pre&gt;&lt;code class='ruby'&gt;  &lt;span class='n'&gt;whatever&lt;/span&gt; &lt;span class='o'&gt;=&lt;/span&gt; &lt;span class='no'&gt;UIImage&lt;/span&gt;&lt;span class='o'&gt;.&lt;/span&gt;&lt;span class='n'&gt;imageNamed&lt;/span&gt;&lt;span class='p'&gt;(&lt;/span&gt;&lt;span class='s2'&gt;&amp;quot;whatever&amp;quot;&lt;/span&gt;&lt;span class='p'&gt;)&lt;/span&gt;
  &lt;span class='n'&gt;slider&lt;/span&gt;&lt;span class='o'&gt;.&lt;/span&gt;&lt;span class='n'&gt;setThumbImage&lt;/span&gt; &lt;span class='n'&gt;whatever&lt;/span&gt;&lt;span class='p'&gt;,&lt;/span&gt; &lt;span class='n'&gt;forState&lt;/span&gt;&lt;span class='p'&gt;:&lt;/span&gt; &lt;span class='no'&gt;UIControlStateNormal&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;
&lt;h2 id='making_the_slider_easier_to_slide'&gt;Making The Slider Easier to Slide&lt;/h2&gt;

&lt;p&gt;Right now it&amp;#8217;s looking how we want it, but the problem is that the UISlider is a bit to tall compared to the default one. The thumb is hidden, but you still have to click exactly where it used to be in order to change the slider&amp;#8217;s value.&lt;/p&gt;

&lt;p&gt;That&amp;#8217;s not good UX, so in order to avoid this, we can enlarge the size of the area that is selectable:&lt;/p&gt;
&lt;div class='highlight'&gt;&lt;pre&gt;&lt;code class='ruby'&gt;  &lt;span class='n'&gt;slider&lt;/span&gt;&lt;span class='o'&gt;.&lt;/span&gt;&lt;span class='n'&gt;trackRectForBounds&lt;/span&gt;&lt;span class='p'&gt;(&lt;/span&gt;
    &lt;span class='no'&gt;CGRect&lt;/span&gt;&lt;span class='o'&gt;.&lt;/span&gt;&lt;span class='n'&gt;new&lt;/span&gt;&lt;span class='p'&gt;(&lt;/span&gt;&lt;span class='no'&gt;CGPoint&lt;/span&gt;&lt;span class='o'&gt;.&lt;/span&gt;&lt;span class='n'&gt;new&lt;/span&gt;&lt;span class='p'&gt;(&lt;/span&gt;&lt;span class='mi'&gt;200&lt;/span&gt;&lt;span class='p'&gt;,&lt;/span&gt;&lt;span class='mi'&gt;200&lt;/span&gt;&lt;span class='p'&gt;),&lt;/span&gt; &lt;span class='no'&gt;CGSize&lt;/span&gt;&lt;span class='o'&gt;.&lt;/span&gt;&lt;span class='n'&gt;new&lt;/span&gt;&lt;span class='p'&gt;(&lt;/span&gt;&lt;span class='mi'&gt;100&lt;/span&gt;&lt;span class='p'&gt;,&lt;/span&gt;&lt;span class='mi'&gt;100&lt;/span&gt;&lt;span class='p'&gt;)))&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;
&lt;p&gt;Depending on the size of your images and the general feeling you want to get, play around with this area you&amp;#8217;re defining.&lt;/p&gt;

&lt;h2 id='thats_it'&gt;That&amp;#8217;s It!&lt;/h2&gt;

&lt;p&gt;Obviously these are not the only customizations you can make to a UISlider, but I think it&amp;#8217;s a good start. If people are interested I might make another one on events or visual tricks you can use to make a slider look cooler.&lt;/p&gt;

&lt;p&gt;If you find this avalanche of code snippets not very usuable, you can look at the whole project on &lt;a href='https://github.com/marcgg/rubymotion-custom-slider'&gt;github&lt;/a&gt;. It is compiling and working as I write this article, but keep in mind that rubymotion is a fast moving project and it might not be the case in a few months.&lt;/p&gt;</content>
 </entry>
 
 <entry>
   <title>Don’t Accept Brokenness</title>
   <link href="http://marcgg.com/2012/10/15/dont-accept-brokeness-deal-with-annoyances"/>
   <updated>2012-10-15T00:00:00+02:00</updated>
   <id>http://marcgg.com/2012/10/15/dont-accept-brokeness-deal-with-annoyances</id>
   <content type="html">&lt;p&gt;For a while I had a problem with my jaw. Ten years back I got elbowed in the face (don’t ask), and since then I had trouble yawning or just opening my mouth wide open. I could try to do it, but it would result in the whole thing locking and a good deal of pain.&lt;/p&gt;

&lt;p&gt;The first months I was annoyed, but as time passed I learned to live with it. After all, it was really nothing important. I could eat, speak and do pretty much anything normally. I accepted this as part of how my body functions. Some can’t do a right split, I can’t open my mouth that wide, who cares? I learned how to avoid doing this, and carried on.&lt;/p&gt;

&lt;p&gt;This year I had to see a doctor regarding some unrelated issue, and I ended up mentioning this fact. She told me that she could take a look at it and, in literally a matter of seconds, she fixed the problem. It’s been a few months and while it’s still not perfect, it’s incredibly better.&lt;/p&gt;

&lt;p&gt;In seconds a ten years problem was fixed.&lt;/p&gt;

&lt;p&gt;Seconds.&lt;/p&gt;

&lt;p&gt;Of course this got me thinking: what else is broken that I’m accepting as it is ? At first I went through all the very minor physical problem I was having and discussed it with her. While some were fixable, others were not and some could be improved.&lt;/p&gt;

&lt;p&gt;But here’s the thing, that approach doesn’t only apply to health issues. As a matter of fact it works for pretty much everything ! When facing a problem, the easiest response is to simply accept it and deal with it&amp;#8230; while sometimes trying to fix the problem is actually faster, requires less work and is less expensive!&lt;/p&gt;

&lt;p&gt;Another example I could give is a door in my appartment that would require you lifting a bit the handle before being able to close it. I did that for months until one day I decided to stop for one second and look at what was going on. In ten minutes I figured it out and was able to fix it by replacing a screw or two.&lt;/p&gt;

&lt;p&gt;These are just my examples, but for you it could be one piece of legacy code that’s always getting in your way inside your application, or this door that just won’t open without having to jiggle your keys for minutes. It could be this light that flickers a bit, or the fact that you keep on smashing your toes in the same piece of furniture.&lt;/p&gt;

&lt;p&gt;All these are minor inconveniences, but you deal with them every day. They waste your time, build frustration, and you don’t even see it because it’s always been like that as far as you can remember!&lt;/p&gt;

&lt;p&gt;I’m not saying that everything is fixable, because it’s not true. I’m saying you should take a minute every once in a while to ask yourself if this tiny thing really is unavoidable, if doing something to fix it wouldn’t actually be easier than dealing with it every day.&lt;/p&gt;</content>
 </entry>
 
 <entry>
   <title>How I Avoid Thumb Pain From Too Much Coding</title>
   <link href="http://marcgg.com/2012/10/01/thumb-pain-developer-keyboard"/>
   <updated>2012-10-01T00:00:00+02:00</updated>
   <id>http://marcgg.com/2012/10/01/thumb-pain-developer-keyboard</id>
   <content type="html">&lt;p&gt;Most coders complain about wrist pain. For some reason I never had major trouble there except when working for hours on a laptop. My main issue seemed more original and was located in &lt;a href='http://en.wikipedia.org/wiki/Thenar_eminence'&gt;the group of muscles controlling the thumb&lt;/a&gt;. Suddently it would hurt for days, then go away, then come back&amp;#8230; good times.&lt;/p&gt;

&lt;p&gt;Eventually I mentioned it to a kinesiotherapist, and the conversation was very similar to the famous joke that goes something like:&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;« Doctor, it hurts when I do this.&lt;/p&gt;

&lt;p&gt;-Don’t do it then! »&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;Of course this got me thinking: why do I use my thumb so much?&lt;/p&gt;

&lt;p&gt;Turns out that the movement of pressing a combination of keys was the thing causing the pain. Of course doing it every once in a while has no consequence, but as a web developer I spend my day opening browser tabs (cmd+T), refreshing pages (cmd+R) and copy and pasting (cmd+C, cmd+V).&lt;/p&gt;
&lt;div style='width:560px; margin: auto'&gt;
&lt;object height='315' width='560'&gt;&lt;param name='movie' value='http://www.youtube.com/v/tCJSJBV85cw?version=3&amp;amp;hl=fr_FR&amp;amp;rel=0' /&gt;&lt;param name='allowFullScreen' value='true' /&gt;&lt;param name='allowscriptaccess' value='always' /&gt;&lt;embed allowfullscreen='true' allowscriptaccess='always' height='315' src='http://www.youtube.com/v/tCJSJBV85cw?version=3&amp;amp;hl=fr_FR&amp;amp;rel=0' type='application/x-shockwave-flash' width='560' /&gt;&lt;/object&gt;
&lt;/div&gt;
&lt;p&gt;As you can see on this terribly filmed video, I tend to twist a bit the thumb to press both keys at the same time. It’s not much but because it’s not a natural position, the repetition of this hundreds of times a day would cause pain.&lt;/p&gt;

&lt;p&gt;My first idea was to force myself to use the second cmd button, but I didn’t like it since it would require taking my hand off the mouse for a second. What worked for me was &lt;a href='http://stackoverflow.com/questions/127591/using-caps-lock-as-esc-in-mac-os-x'&gt;changing the mapping of Caps Lock&lt;/a&gt; to Cmd so I could do the gesture with one hand. This allowed me to use my little finger for these action and avoid stressing the thumb muscles.&lt;/p&gt;

&lt;p&gt;I’ve been doing this for a few months now, and I do see a difference. If you encounter the same problem, feel free to try this solution out and let me know if it helped!&lt;/p&gt;</content>
 </entry>
 
 <entry>
   <title>The Risks of Working With Another Company's API</title>
   <link href="http://marcgg.com/2012/09/24/working-with-apis-facebook"/>
   <updated>2012-09-24T00:00:00+02:00</updated>
   <id>http://marcgg.com/2012/09/24/working-with-apis-facebook</id>
   <content type="html">&lt;p&gt;Before we begin let me give you a little background on why I’m writing this article.&lt;/p&gt;

&lt;p&gt;I’ve been working with the Facebook platform for almost 3 years now. I also wrote code using the APIs provided by Twitter, Instagram, Flickr, Google, Foursquare, Amazon, Youtube, Spotify and others. I’ve participated in building products like the &lt;a href='http://www.tigerlilyapps.com/conversation'&gt;Tigerlily Conversation Suite&lt;/a&gt; or &lt;a href='http://ffocused.com'&gt;ffocused&lt;/a&gt;, both heavily relying on some of those API. In the process I learned a lot on how to handle these services, their evolutions and their problems.&lt;/p&gt;

&lt;p&gt;This post is nothing but my point of view and advices to people wanting to build on top of an existing platform. I don’t know everything, I just know the problems I’ve encountered, how I delt with them and how I avoided them afterward.&lt;/p&gt;

&lt;p&gt;That’s all for disclaimer, let’s dig in.&lt;/p&gt;

&lt;h2 id='being_cautious_the_real_cost_of_a_feature'&gt;Being Cautious: The Real Cost of a Feature&lt;/h2&gt;

&lt;p&gt;The main thing I learned in the process is that you have to be very cautious in how you start using a new API. When you discover all the possibilities for the first time, you just want to jump in and create something. The catch is that everything might not be as bright as it seems.&lt;/p&gt;

&lt;p&gt;Some features may be buggy while others are deprecated. I’m not saying that they often are, just that they might be. You should consider the fact that everything will not go as planed and that this is going to have a cost.&lt;/p&gt;

&lt;p&gt;It’s all about understanding that &lt;a href='http://gettingreal.37signals.com/ch05_Start_With_No.php'&gt;the real cost of the feature&lt;/a&gt; is not the time it’s going to take to develop it. You also have to take into account the time you’re going to spend maintaining it, and the friction it’s going to have with other components of your system. I like how &lt;a href='https://twitter.com/tenderlove'&gt;Aaron Patterson&lt;/a&gt; describes this feeling as the lower tolerance for technical debt experienced developers have.&lt;/p&gt;
&lt;div style='width:560px; margin: auto'&gt;
&lt;object height='315' width='560'&gt;&lt;param name='movie' value='http://www.youtube.com/v/8kSfGgiFk48?version=3&amp;amp;hl=fr_FR&amp;amp;rel=0&amp;amp;start=1075' /&gt;&lt;param name='allowFullScreen' value='true' /&gt;&lt;param name='allowscriptaccess' value='always' /&gt;&lt;embed allowfullscreen='true' allowscriptaccess='always' height='315' src='http://www.youtube.com/v/8kSfGgiFk48?version=3&amp;amp;hl=fr_FR&amp;amp;rel=0&amp;amp;start=1075' type='application/x-shockwave-flash' width='560' /&gt;&lt;/object&gt;
&lt;/div&gt;
&lt;p&gt;Let’s say you want to add a Facebook or Twitter connect to your website. Implementing it is &lt;a href='http://developers.facebook.com/docs/guides/web/#login'&gt;dead simple&lt;/a&gt;&amp;#8230; but what if Facebook is down for a while, or if it glitches out and your users can’t log in? What if they totally revamp their login system and this time it takes months to fix it? What if you want to handle users in a specific way and this connect feature is now getting in the way?&lt;/p&gt;

&lt;p&gt;You have to evaluate if it’s worth the risk of delegating a part of your system to another company. Sometimes it can be the best move you can make, but it can also be a mistake that will cost you precious time.&lt;/p&gt;

&lt;p&gt;I sometimes think of it like AJAX at the beginning of the «web 2.0» era. Everyone started creating full AJAX websites because the possibilities were so amazing. For some it was great, but in other cases it was very gimmicky, didn’t provide any real end-user value and had terrible issues in term of maintenance.&lt;/p&gt;

&lt;h2 id='its_not_as_simple_as_you_might_think'&gt;It’s Not As Simple As You Might Think&lt;/h2&gt;

&lt;p&gt;Thinking about connecting to an API as something trivial can only work for a small side project or a minor feature.&lt;/p&gt;

&lt;p&gt;If you want to build a company around a platform, satisfy customers and make money with it that’s when it becomes complex. The simplest example I can give you is rate limitations. This alone could kill a project or at least diminish its value enough to render it useless.&lt;/p&gt;

&lt;p&gt;Stop thinking that you’ll be able to scrap the entire data on Twitter and provide amazing analytics just by having a couple of crons running on a small server. It’s not going to work because it’s not going to &lt;a href='http://www.youtube.com/watch?v=b2F-DItXtZs'&gt;scale&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;My advice would to have a clear focused vision on where you can provide a real value and keep it realistic. Basing your product on an amazing platform is a great opportunity we’re given, but it should not be seen as the golden hammer of product design.&lt;/p&gt;

&lt;h2 id='things_will_change'&gt;Things Will Change&lt;/h2&gt;
&lt;img src='/assets/misc/fbml.jpg' style='float:right; width:210px;' /&gt;
&lt;p&gt;Any third party API you’re going to use is going to change. It’s a good thing. You want it to provide more features, to adapt to follow the best practices and so on. The real question here is not «Is it going to change ?» - because it will, but «Is my system and product flexible enough to handle the changes ?».&lt;/p&gt;

&lt;p&gt;First, if you base your entire product on one API feature, you are taking huge risks. The company providing the service might just turn it off at any point&amp;#8230; just ask the people that were building on top of the &lt;a href='http://googlecode.blogspot.fr/2011/05/spring-cleaning-for-some-of-our-apis.html'&gt;Google Translate API&lt;/a&gt;, creating &lt;a href='http://developers.facebook.com/blog/post/568/'&gt;only FBML applications&lt;/a&gt; or building a &lt;a href='http://thenextweb.com/twitter/2012/08/17/twitter-4/'&gt;Twitter client&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;Secondly, your code needs to be separated enough so that a change in the third party API only impacts a minimal part of your system. This is where you really have to follow &lt;a href='http://en.wikipedia.org/wiki/Law_of_Demeter'&gt;Demeter’s law&lt;/a&gt;. Simply put, have a good interface somewhere that allows you to limit the number of places in which you have API handling code.&lt;/p&gt;

&lt;h2 id='things_will_break'&gt;Things Will Break&lt;/h2&gt;
&lt;img src='/assets/misc/movefast.png' style='float:right; width:210px;' /&gt;
&lt;p&gt;I’ve reported over 200 bugs on the Facebook platform. Some were fixed, some were impossible to reproduce accurately and other were just disregarded because considered as weird edge cases.&lt;/p&gt;

&lt;p&gt;This is not surprising, an API is not an all knowing oracle! It’s software and software breaks&amp;#8230; especially within &lt;a href='http://startupquote.com/post/1624569753'&gt;startups moving fast&lt;/a&gt;. I can’t imagine how complex maintaining a platform such as Facebook or Twitter can be, but I’m sure that the engineers behind it, as talented as they are, will let bugs slip.&lt;/p&gt;

&lt;p&gt;These bugs are not the same as a glitch in your system. You can’t fix them yourself. The only you can do and that’s having a system that is resilient to these API failures.&lt;/p&gt;

&lt;p&gt;Maybe you think that it’s as easy as when there’s a crash due to a bad API call, rescue the exception and use the response code to give a nicely formatted error to the end user. Sometimes it is just that, but let me ask you this. What if :&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;There is no error code or it is not the correct one&lt;/li&gt;

&lt;li&gt;The response is &lt;a href='http://developers.facebook.com/bugs/349799231758647'&gt;corrupted&lt;/a&gt; (bad formatting, bad charset, incompleteness)&lt;/li&gt;

&lt;li&gt;The response seems correct but has no sense («Q: What’s the user’s age? A: John»)&lt;/li&gt;

&lt;li&gt;The response is correct but the action hasn’t be made&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;You should handle some of these situations depending on the level of stability you want to achieve. Obviously if it’s something that is not important, do not waste your time trying to make it bullet proof. Put the time and effort into it if it’s a critical part of your application.&lt;/p&gt;

&lt;h2 id='example_scaling_a_quick_facebook_comments_fetching_system_with_no_data_loss'&gt;Example: Scaling a Quick Facebook Comments Fetching System With No Data Loss&lt;/h2&gt;

&lt;p&gt;One of the applications I work on needed to get all the comments left on a given Facebook page. The system would then take the comments and process them in a way that would add value for the community managers using the app. It was crucial that we got 100% of the comments in a timely fashion.&lt;/p&gt;

&lt;p&gt;At first we wanted to get all the posts and process them in batches using the &lt;a href='http://developers.facebook.com/docs/reference/api/batch/'&gt;Batch API&lt;/a&gt;, but at the time this API was very unstable. We tried processing all posts independently in one big routine and this quickly showed its limit as some API calls will time out, impacting the fetching of others comments that were left waiting. Adding a queuing system and ways to retry a given job solved that issue.&lt;/p&gt;

&lt;p&gt;We then discovered that Facebook has an undocumented limit of ~800 comments per call. Asking for more will not return an error but a random number of comments. We changed the system to take smaller batches of comments and use Facebook pagination system. The bad news is that it would sometimes glitch and results in an &lt;a href='http://developers.facebook.com/bugs/127681480703469'&gt;infinite loop&lt;/a&gt;. Some other times everything will seem fine but some comments would be missing for unknown reasons.&lt;/p&gt;

&lt;p&gt;The solution here was to create methods able to determine if the comments returned were valid or not and decide when to stop fetching.&lt;/p&gt;

&lt;p&gt;As you can see, the first approach «gimme all of them comments» does not work when you deal with &lt;a href='http://developers.facebook.com/bugs/438731489482335'&gt;large amounts&lt;/a&gt; of &lt;a href='http://developers.facebook.com/bugs/389080567815236'&gt;items&lt;/a&gt;. This might not be a problem for most people building apps dealing with only a couple dozens of comments, but our product target big brands with a crazy amount of user interactions. Therefore it was very important that we got it right as it was at the core of what we were trying to achieve. The time and effort spent into building a fetching system that would work as good as possible had a real value so it was a wise choice to do it that way.&lt;/p&gt;

&lt;p&gt;It’s all about knowing what you’re trying to do and how good you need it to be. Sometimes good enough is what you shoot for, but in other cases you need something that’s as flawless as you can get. What you don&amp;#8217;t want is to realize that this simple API call turned into months of unplanned development.&lt;/p&gt;

&lt;h2 id='as_a_developer'&gt;As A Developer&lt;/h2&gt;

&lt;p&gt;Developing systems relying heavily on APIs you don’t control requires a lot of &lt;a href='http://en.wikipedia.org/wiki/Defensive_programming'&gt;discipline&lt;/a&gt;. You have to make a lot of assumptions about what the other company’s going to do and be ready for random things to happen. It’s complicated and can be frustrating at times when you see features you build fall apart because of a change you have no control over.&lt;/p&gt;

&lt;p&gt;Of course it’s not all grim or else I wouldn’t have been crazy enough to do it for so long!&lt;/p&gt;

&lt;p&gt;It’s an interesting challenge to build something able to overcome all these problems and provide real value despite it. Personally it allowed me to learn a lot, tackle complex problems and grow as a developer. It’s also great to have a dataset as huge as Twitter or Facebook to put into your system. Everything seems to be at a larger scale right away and the possibilities from a product perspective are broaden.&lt;/p&gt;

&lt;p&gt;Finaly I&amp;#8217;ll add that this is a good learning experience for when you get to the point where you need to build your own API&amp;#8230; because everyone wants to build a cool API! You’ve seen how it’s done, the mistakes made, the good ideas, the architecture behind it&amp;#8230;&lt;/p&gt;

&lt;p&gt;I can safely say that &lt;a href='http://www.sethcall.com/blog/2010/09/30/facebook-api-does-not-care/'&gt;it will be infuriating&lt;/a&gt; at times, but within a focused and understanding team, it’s all manageable and the result can be awesome.&lt;/p&gt;</content>
 </entry>
 
 <entry>
   <title>The One Thing That Made Me Switch To Vim</title>
   <link href="http://marcgg.com/2012/09/04/one-reason-to-switch-to-vim-editor"/>
   <updated>2012-09-04T00:00:00+02:00</updated>
   <id>http://marcgg.com/2012/09/04/one-reason-to-switch-to-vim-editor</id>
   <content type="html">&lt;p&gt;I know, I know, this has been done to death, but stay with me for a second. I’m not here to tell you that Vim is the best editor out there, just to tell you the one reason that got me to switch.&lt;/p&gt;

&lt;p&gt;Like every developer with some curiosity, I tried a ridiculous amount of text editors and IDEs. I started with Notepad at first, but quickly discovered that some text editors would actually help you. I downloaded &lt;a href='http://download.cnet.com/Amiasoft-SiteAid/3000-10247_4-10015046.html'&gt;SiteAid&lt;/a&gt; and enjoyed the gain of productivity. Then I quickly moved on to Scite, Eclipse, Netbeans, Notepad++, Emacs, Text Edit, Rad Rails, Kate, Rubymine, TextMate, Sublime&amp;#8230; the list goes on.&lt;/p&gt;

&lt;p&gt;At some point I realized that I was wasting my time learning slightly different shortcuts and ways of setting up a project. I began to consider Vim seriously because it stood the test of time and seemed cool for some reason, but really the one thing that convinced me was a problem I had at my job.&lt;/p&gt;

&lt;p&gt;One day something went wrong on a server running Debian. The sysadmin was not around and I ended up being the one that had to go on there and fix it. It was linked to some config files that were not properly set up, and the only editor available was Vim.&lt;/p&gt;

&lt;p&gt;Back then I had almost &lt;a href='http://vimdoc.sourceforge.net/htmldoc/intro.html'&gt;no clue&lt;/a&gt; on how to use it.&lt;/p&gt;

&lt;p&gt;It resulted in me editing the files as a 70 years old guy that just discovered what a keyboard is. It was painful to watch to say the least. Of course while this was going on, the server was more or less down. Pure joy if you ask me!&lt;/p&gt;

&lt;p&gt;Even before this incident, more than a couple of times I had to inject some debug lines on the code deployed on our staging server to figure out a very environment-specific bug, but it wasn’t as stressful as this time.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;It felt terrible to be so lost with a task as simple as editing a file.&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;This is why I decided to use Vim as my primary editor. It already had enough qualities to be a good choice, but the fact that it is set up on most servers was the final selling point for me.&lt;/p&gt;

&lt;p&gt;Sometimes you just need to be able to fire up Vim and be very fast using it. You don&amp;#8217;t even have to &lt;a href='http://yehudakatz.com/2010/07/29/everyone-who-tried-to-convince-me-to-use-vim-was-wrong/'&gt;be snob while doing it&lt;/a&gt;.&lt;/p&gt;</content>
 </entry>
 
 <entry>
   <title>Start Working on Your Side Project Tonight</title>
   <link href="http://marcgg.com/2012/01/09/start-working-on-your-side-project"/>
   <updated>2012-01-09T00:00:00+01:00</updated>
   <id>http://marcgg.com/2012/01/09/start-working-on-your-side-project</id>
   <content type="html">&lt;p&gt;To me a side project is taking an idea and building it from scratch. You do not have to complete it, it doesn’t need a business model or turn into a company over time, it doesn’t even need to make sense to other people than you. It is just a way to experiment. If later on it turns out into a successful company, good for you, but it doesn’t have to be your goal.&lt;/p&gt;

&lt;p&gt;If you’re like me, you think that development is a creative process, and should be treated as such. So what better way to be more creative than by removing all the usual constraints of a day job – deadlines, &lt;a href='http://en.wikipedia.org/wiki/Legacy_code'&gt;legacy code&lt;/a&gt;, clients, etc. – and just building something for fun and the sake of building something cool!&lt;/p&gt;

&lt;p&gt;Doing a side project is a great way to experiment with new technologies, try new processes and be able to fail with absolutely no consequences other than maybe a few hours wasted… and even then this time isn’t really lost because you tried and you learned something. It might not be much, but it could turn out to be a key point at your next job interview, or it could give you a better insight at what you do in your day job.&lt;/p&gt;
&lt;img src='/assets/misc/startupweekend.png' style='float:right; width:250px;' /&gt;
&lt;p&gt;By know you might notice that this article is more directed towards people with some experience in development, but the concepts and ideas are the same for everyone. Everybody can benefit from having a side project. If you don’t have a technical background you could go to a Startup Weekend with an idea or team up with a developer. You could also &lt;a href='http://codeyear.com/'&gt;learn how to code&lt;/a&gt;, &lt;a href='http://ror.kateray.net/post/1312957018/the-internet-teaches-you-ruby-on-rails'&gt;it won’t be time wasted&lt;/a&gt;!&lt;/p&gt;

&lt;h2 id='great_startups_can_come_out_of_side_projects'&gt;Great startups can come out of side projects&lt;/h2&gt;
&lt;img src='/assets/misc/basecamp.png' style='float:right; width:200px;' /&gt;
&lt;p&gt;You’ve probably heard about Gmail starting of as a 20% time project (as in the amount of time a developer there can spend on other projects than the ones they’re assigned). This isn’t the only example.&lt;/p&gt;

&lt;p&gt;&lt;a href='http://craigslist.com/'&gt;Craigslist&lt;/a&gt; was Craig Newmark side project started in 1995 and only turned into a real company in 1999. &lt;a href='http://basecamp.com/'&gt;Basecamp&lt;/a&gt;, a very successful project management software was initially an internal tool of 37signals that answered &lt;a href='http://gettingreal.37signals.com/ch02_Whats_Your_Problem.php'&gt;their own problems as a design firm&lt;/a&gt;. &lt;a href='http://www.instapaper.com/'&gt;Instapaper&lt;/a&gt; was started by Marco Arment &lt;a href='http://bits.blogs.nytimes.com/2010/09/23/instapaper-goes-from-hobby-to-startup/'&gt;while he was CTO at Tumblr&lt;/a&gt;. You can even say that Twitter was a side project of &lt;a href='http://articles.businessinsider.com/2011-04-13/tech/29957143_1_jack-dorsey-twitter-podcasting'&gt;a group of people working at Odeo&lt;/a&gt;.&lt;/p&gt;
&lt;img src='/assets/misc/hashtagbattle.png' style='float:right; width:150px;' /&gt;
&lt;p&gt;In France there are also examples such as &lt;a href='http://hashtagbattle.com/'&gt;HashtagBattle&lt;/a&gt; that was a &lt;a href='http://startupweekend.org/'&gt;startup weekend&lt;/a&gt; project and ended up getting a lot of exposure. &lt;a href='http://www.tigerlilyapps.com/'&gt;Tigerlily&lt;/a&gt; was created during a &lt;a href='http://en.wikipedia.org/wiki/Hackathon'&gt;hackaton&lt;/a&gt;, &lt;a href='http://www.super-marmite.com/'&gt;Super Marmitte&lt;/a&gt; was a side project until it got exposure at LeWeb in 2010…&lt;/p&gt;

&lt;p&gt;You can read more about the beginning of some of these projects in &lt;a href='http://books.google.fr/books?id=ktm885vGIXEC&amp;amp;lpg=PA161&amp;amp;ots=vTvMWfQH8g&amp;amp;dq=gmail%20side%20project&amp;amp;pg=PR2#v=onepage&amp;amp;q&amp;amp;f=false'&gt;Founders at Work by Jessica Livingston&lt;/a&gt;.&lt;/p&gt;

&lt;h2 id='you_dont_have_to_be_that_ambitious'&gt;You don’t have to be that ambitious&lt;/h2&gt;

&lt;p&gt;Take my latest side project for example. &lt;a href='https://twitter.com/gflandre'&gt;A friend&lt;/a&gt; and I somehow got ourselves thinking it’d be fun if we could &lt;a href='http://whatsmyairport.com/'&gt;match people’s initials with airport codes&lt;/a&gt;. This coincided with the release of a new version of my favorite framework that I wanted to try out. We decided to use it to create a project and learn about this new technology in the process. It took us a few evenings of work and we learned a lot while having fun.&lt;/p&gt;
&lt;div style='text-align:center'&gt;&lt;img src='/assets/misc/airport.jpg' style='width:550px;' /&gt;&lt;/div&gt;
&lt;p&gt;It doesn’t scale, there’s no way to make money out of it… but really there is no need to try to create the next Facebook! Simply do something that you like and that will teach you something, and then maybe you’ll create a new hit startup. First, take it only for what you’ll learn and the experience you’ll gain from it.&lt;/p&gt;

&lt;h2 id='ok_i_get_it_side_projects_are_great_but_i_just_dont_have_the_time'&gt;“Ok I get it, side projects are great, but I just don’t have the time!”&lt;/h2&gt;
&lt;img src='/assets/misc/love.png' style='float:right; width:150px;' /&gt;
&lt;p&gt;… is what I hear people say all the time.&lt;/p&gt;

&lt;p&gt;This is not a valid argument; if you really wanted to, you could easily save a couple of evenings to work on your project. A lot of people feel like they won’t be able to get anything done, but unless you have complete A.D.D. you will get something done if you stay in front of a computer a few hours a week.&lt;/p&gt;

&lt;p&gt;It’s just a matter of focusing and being passionate. Find and idea and a technology that feel right. If you like what you do, developing could be as fun as whatever you do on your free time.&lt;/p&gt;

&lt;h2 id='my_point_is_just_get_started'&gt;My point is: Just get started.&lt;/h2&gt;

&lt;p&gt;I’ll add that it’s better if you begin small and scale up later. Nothing is more depressing than getting yourself into a project that will last years with absolutely nothing to show for it. It’s not as fun. Work in small steps, get feedback as you progress, and most of all try anything that goes through your mind because failure is an option, but learning nothing out of the experience isn’t.&lt;/p&gt;

&lt;p&gt;Alright, you know that one idea that you had? The one you told your coworkers about? Yeah the one on a piece of paper or written in your iPhone.&lt;/p&gt;

&lt;p&gt;Start working on it this evening.&lt;/p&gt;

&lt;p&gt;Keep it fun, keep it interesting, do not pressure yourself. Nothing bad can come out of it!&lt;/p&gt;
&lt;p class='sidenote'&gt;
  This article was originally published on
  &lt;a href='http://www.rudebaguette.com/2012/01/09/start-working-side-project/'&gt;The Rude Baguette&lt;/a&gt;.
  Do what you love poster by &lt;a href='http://shop.ugmonk.com/product/do-what-you-love-print-blue'&gt;Ugmonk&lt;/a&gt;.
&lt;/p&gt;</content>
 </entry>
 
 <entry>
   <title>Outsourcing In A Startup</title>
   <link href="http://marcgg.com/2011/12/21/startup-outsourcing"/>
   <updated>2011-12-21T00:00:00+01:00</updated>
   <id>http://marcgg.com/2011/12/21/startup-outsourcing</id>
   <content type="html">&lt;p&gt;So you&amp;#8217;re a startup and want to outsource graphic design, system administration or development? Don’t feel bad, this is very common. Often startups can’t afford to hire many people right away or do not have a team with every skill required to build the perfect product.&lt;/p&gt;

&lt;h2 id='should_i_outsource'&gt;Should I Outsource?&lt;/h2&gt;

&lt;p&gt;Some will tell you that you should not outsource, but this is not what I think. Actually I won’t have enough of one article to tell you all the cases in which you should outsource (lack of time, not the required skills in-house, not enough people in the team…).&lt;/p&gt;

&lt;p&gt;It doesn’t really matter why you want to outsource. What matters is that before doing so you ask yourself «Am I outsourcing what defines my company?» This is especially true for startups that focus around one main product: you do not want to lose control over what makes the core of your business.&lt;/p&gt;

&lt;h2 id='build_up_a_team'&gt;Build Up A Team&lt;/h2&gt;

&lt;p&gt;I suppose you don’t want to be forever dependent on contractors, right? Your goal is to build up a team, because in the end this is what makes a startup. A passionated team can build anything if gathered around the right vision, and outsourcing without thinking can hurt that dynamic.&lt;/p&gt;

&lt;p&gt;While a lot of contractors are very able and talented, the problem is that they are only part of the team very temporarily and will not get involved as much as your teammates. They will lack the long term vision and won’t think “if I do X, what will happen in a year when I need to make it evolve into Y”. The problem given to them will be solved, but later evolutions might be harder.&lt;/p&gt;

&lt;p&gt;Remember that your team members decided to join the adventure for more than a couple of billable months. They will have opinions, ideas and will thrive to build the best product possible if you give them the means to do so. You want developers thinking by themselves and ready to go back and improve what they wrote months ago. You want designers that are creative and in phase with the company’s vision.&lt;/p&gt;

&lt;p&gt;This is why you need to build what’s important internally and outsource only when you can’t do it in house… and even when you do, do it keeping in mind that you will have to integrate what has been created and that your team will have to maintain it. If done correctly, outside help can be a good thing for everyone, as mixing ideas and processes is always interesting and a good experience.&lt;/p&gt;

&lt;h2 id='outsourcing_done_right'&gt;Outsourcing Done Right&lt;/h2&gt;

&lt;p&gt;Like I mentioned before, sometimes you need to call someone to help out. In this case you need to be sure you do not hurt your product or your team in the process. The deliverable should be easy to test, easy to maintain and easy to evolve. If those conditions are not fulfilled, you might deal with frustration in your team. If they are, everyone will be happy about a job well done.&lt;/p&gt;

&lt;h3 id='design'&gt;Design&lt;/h3&gt;

&lt;p&gt;If you’re outsourcing your product’s design, ask to be provided with a full style guide, general guidelines, grid templates… anything that can help future designers can build on top of what you already have without having to start from scratch. Use a lot of constructive criticism and keep in mind the big picture: your product shouldn’t feel patchy, even if you got a lot of people working on it.&lt;/p&gt;

&lt;h3 id='development_of_a_new_feature'&gt;Development of a New Feature&lt;/h3&gt;

&lt;p&gt;If you’re outsourcing development directly inside your main product – like a new feature, you want to make sure the code that is given to you is good and perennial. To achieve that, you should ask from your contractors:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;The code should be shipped in a modular fashion, avoiding coupling as much as possible. The new features should not interfere too much with the existing codebase.&lt;/p&gt;
&lt;/li&gt;

&lt;li&gt;
&lt;p&gt;A lot of pertinent automated tests.&lt;/p&gt;
&lt;/li&gt;

&lt;li&gt;
&lt;p&gt;Documentation, not only on what the features are doing, but also on how they can be maintained and improved.&lt;/p&gt;
&lt;/li&gt;

&lt;li&gt;
&lt;p&gt;Try collaboration with a member of your development team (if you have one), even part time. You want someone able right away to maintain this new feature.&lt;/p&gt;
&lt;/li&gt;

&lt;li&gt;
&lt;p&gt;Enforce your internal best practices as much as possible if you have some. If you don’t, enforce the ones accepted by your technology’s community.&lt;/p&gt;
&lt;/li&gt;

&lt;li&gt;
&lt;p&gt;Always keep in mind that you will have to live with this new code for a while and decide accordingly if outsourcing is the right move or not.&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id='one_shot'&gt;One Shot&lt;/h3&gt;

&lt;p&gt;The other possibility is to outsource something that is not directly linked to your core product. This could be a marketing campaign or something similar. In this case it is easier to get it right, and this is the situation where outsourcing works very well for a startup. You will not need to maintain the new code for long, it will not impact the existing code base… the only thing that matters is that the final result if up to your company’s standards.&lt;/p&gt;

&lt;p&gt;A perfect example of that is &lt;a href='http://www.tigerlilyapps.com/'&gt;my company’s new website&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;We launched it recently and gave design control to a &lt;a href='http://www.colorz.fr/'&gt;creative agency&lt;/a&gt; during development. We did this because we knew that they would create a better design than us. While we care and love about building things that look good, this is not our core business. Delegating this part of the job also gave us the possibility to focus more on our platform for social media applications which is what we do best.&lt;/p&gt;

&lt;p&gt;During the whole process someone kept checking to see if we were agreeing on the choices made. The final phase of integration was made in house because we have great front-end developers that should be able to make the website evolve later on.&lt;/p&gt;

&lt;h2 id='keep_control'&gt;Keep Control&lt;/h2&gt;

&lt;p&gt;In any case, try to stay on top of what is going on and make sure everything is moving in the right direction. Remember that as a startup, your product is very important. Do not lose control, do not lose ownership. Build up your team.&lt;/p&gt;
&lt;div style='text-align:center'&gt;&lt;img src='/assets/misc/machine.jpg' style='width:450px;' /&gt;&lt;/div&gt;
&lt;p&gt;You don’t want to end up with a Rube Goldberg machine made of a crazy patchwork created by dozens of freelancers. While it might get the job done for a bit, it won’t last.&lt;/p&gt;

&lt;p&gt;This being said, there is no perfect solution. Some contractors become really involved and stay for long, some are so good that they will improve the general quality of your product… and if you found people like this maybe you should offer them a full time job!&lt;/p&gt;
&lt;p class='sidenote'&gt;
  This article was originally published on
  &lt;a href='http://www.rudebaguette.com/2011/12/21/startups-to-outsource-or-not-to-outsource-3/'&gt;The Rude Baguette&lt;/a&gt;.
&lt;/p&gt;</content>
 </entry>
 
 <entry>
   <title>Developers, Go From SSII To Startup</title>
   <link href="http://marcgg.com/2011/12/12/developer-from-ssii-to-startup"/>
   <updated>2011-12-12T00:00:00+01:00</updated>
   <id>http://marcgg.com/2011/12/12/developer-from-ssii-to-startup</id>
   <content type="html">&lt;p&gt;In France we have what we call SSII for Société de Service en Ingénierie Informatique. Poorly translated it goes something like «IT Consulting Firm». This is where most young CS graduates will go, mainly because once you get your degree you are spammed by job offers from their recruiters.&lt;/p&gt;

&lt;p&gt;This is fine for some, but other might feel like they are missing out what’s happening in the startup world. The problem is that after a few years in a SSII it can seem complicated to switch career path and start working for a startup. For the most part it’s because the technologies, processes and general mindset are radically different… but believe me, it is possible!&lt;/p&gt;

&lt;p&gt;So how can one move away from a company like this and join a cool startup?&lt;/p&gt;

&lt;h2 id='are_you_sure'&gt;Are You Sure?&lt;/h2&gt;

&lt;p&gt;First take a second to figure out what you love to do. Are you really passionate about development? Could you spend hours &lt;a href='http://stackoverflow.com/questions/144661/python-vs-ruby-for-metaprogramming'&gt;debating if new technology X is better than Y&lt;/a&gt;? Do you try out every new app or service that comes out?&lt;/p&gt;

&lt;p&gt;Keep in mind that the process of becoming a good fit for a startup isn’t easy, but each step should be fun. If it’s a hassle then maybe you shouldn’t quit your current job.&lt;/p&gt;

&lt;h2 id='the_mindset'&gt;The Mindset&lt;/h2&gt;
&lt;img src='/assets/misc/movefast.jpg' style='float:right; height:350px;' /&gt;
&lt;p&gt;In a SSII you often get to work on products already sold to a client, usually a large company. All you have to do is dress up, go to the client’s offices and code following the specifications someone gave you. It doesn’t matter if you think the product is good or not, it just matters that you meet the deadline.&lt;/p&gt;

&lt;p&gt;When you join a startup, and especially if it’s an early stage one, this will be radically different. If you’re not passionated about what you’re doing it won’t work. It won’t only be about shipping a given feature anymore, it will be about caring that the product is good and that it follows the right vision.&lt;/p&gt;

&lt;p&gt;In a startup you won’t be yet another code monkey driven by a faceless client’s exigences. Your voice will be heard and just as important as anyone else’s in the team. Your teammates will expect from you that you have ideas on things, not just follow orders. You’ll actually get the opportunity to be part of the creation of something.&lt;/p&gt;

&lt;p&gt;Keep in mind that for a startup at an early stage, nothing is definitive. You could do a major switch in a week, it doesn’t matter as long as everything is moving in the right direction. You have to realize that making the right choices is crucial and can mean life or death for the company, therefore everyone in the team should be involved in the decision, give inputs, discuss, exchange ideas…&lt;/p&gt;

&lt;h2 id='learn_create_code_repeat'&gt;Learn, Create, Code, Repeat&lt;/h2&gt;

&lt;p&gt;Large companies, because of their larger inertia, tend to use older technologies and that’s why a lot of what you know might be of little use. But don’t worry, while the specifics of the technologies you know might be useless, the general experience you gathered is still valid. You simply need find out the technologies used by your dream startup and learn them.&lt;/p&gt;
&lt;img src='/assets/misc/codecomplete.jpg' style='float:right; height:200px;' /&gt;
&lt;p&gt;Keep in mind that what matters in a startup is the things you can do and your ability to learn &amp;amp; adapt. No one is going to show your resume to a client in order to get a contract, so it doesn’t matter whether you come from a famous school or not. It’s just a degree and doesn’t mean a lot. No need to buy a fancy suit either, it’s not the best outfit to be in front of a computer most of the day.&lt;/p&gt;

&lt;p&gt;To sum it up, what a good startup wants is a developer that can program. So how to get better at coding you ask me? By coding of course!&lt;/p&gt;

&lt;p&gt;The best way to get started is to find an idea and create it as a side project on nights &amp;amp; weekends. It will give you a goal and a nice bullet point on your resume once it’s completed. While you develop, get feedbacks on what you’re doing from experienced developers and/or the &lt;a href='http://stackoverflow.com/'&gt;internet&lt;/a&gt; and &lt;a href='http://stackoverflow.com/questions/1711/what-is-the-single-most-influential-book-every-programmer-should-read'&gt;read up&lt;/a&gt; on &lt;a href='http://www.amazon.com/dp/0132350882/?tag=stackoverfl08-20'&gt;best practices&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;In a SSII you could be fine sticking to old technologies as there will always be clients wanting to use them: obviously no one is going to change overnight the way banking or insurance is done and the &lt;a href='http://en.wikipedia.org/wiki/COBOL'&gt;languages used&lt;/a&gt; to do it… but in a startup, everything moves fast. You have to keep on learning and keep on improving yourself.&lt;/p&gt;

&lt;h2 id='get_connected'&gt;Get Connected&lt;/h2&gt;
&lt;img src='/assets/misc/startinparis.png' style='float:right; width:200px;' /&gt;
&lt;p&gt;The startup scene in France is maybe not as large as in the US, but it is active. So stay up to date about what’s going on around you as well as internationally. There are countless blogs, twitter users and events talking about just that, you simply need to find the ones that you like and start reading.&lt;/p&gt;

&lt;p&gt;Start going to events organized in your city around the subjects that interest you. If you’re a developer wanting to geek out with other developers, there are meetups for that. You can also interact with other coders on mailing lists, IRC, Twitter…&lt;/p&gt;

&lt;p&gt;If you do it well, you might even have a job interview scheduled before you start sending resumes!&lt;/p&gt;

&lt;h2 id='alright'&gt;Alright&lt;/h2&gt;

&lt;p&gt;That’s it. Don’t just stand there, go and create something!&lt;/p&gt;
&lt;p class='sidenote'&gt;
  This article was originally published on
  &lt;a href='http://www.rudebaguette.com/2011/12/12/from-consulting-to-startup-developer/'&gt;The Rude Baguette&lt;/a&gt;.
  Photo by &lt;a href='http://www.flickr.com/photos/mwichary/5455395458/'&gt;Martin Wichary&lt;/a&gt;.
&lt;/p&gt;</content>
 </entry>
 

</feed>
